# -*- Python -*-

import os

def config_preprocessor():
    config.add_preprocessor_option("tofino", "-E -x c")
    config.add_preprocessor_option("tofino", "-o")
    config.add_preprocessor_option("tofino", "{}/{}.p4i".format(output_dir, source_basename))
    config.add_preprocessor_option("tofino", source_fullname)

def config_compiler():
    config.add_compiler_option("tofino", "--nocpp")
    config.add_compiler_option("tofino", "-o")
    config.add_compiler_option("tofino", "{}/{}.tfa".format(output_dir, source_basename))
    config.add_compiler_option("tofino", "{}/{}.p4i".format(output_dir, source_basename))

def config_assembler():
    config.add_assembler_option("tofino", "-vvvl")
    config.add_assembler_option("tofino", "{}.out/tfas.config.log".format(source_basename))
    config.add_assembler_option("tofino", "{}/{}.tfa".format(output_dir, source_basename))

def config_linker():
    config.add_linker_option("tofino", "{}.out/*.cfg.json".format(source_basename))
    config.add_linker_option("tofino", "{}.out/tofino.bin".format(source_basename))

config_preprocessor()
config_compiler()
config_assembler()
config_linker()

config.add_toolchain('tofino', {'preprocessor': 'cpp', 'compiler': 'p4c-tofino',
                                'assembler': 'tfas', 'linker': 'tflink'})
config.add_compilation_steps('tofino', ['preprocessor', 'compiler', 'assembler', 'linker'])
config.target.append("tofino")
