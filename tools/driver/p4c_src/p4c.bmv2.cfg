# Copyright 2013-present Barefoot Networks, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- Python -*-

def config_preprocessor():
    config.add_preprocessor_option("bmv2-*-p4org", "-E -x c")
    if source_basename is not None:
        config.add_preprocessor_option("bmv2-*-p4org", "-o")
        config.add_preprocessor_option("bmv2-*-p4org", "{}/{}.p4i".format(output_dir, source_basename))
        config.add_preprocessor_option("bmv2-*-p4org", source_fullname)

def config_compiler():
    if source_basename is None:
        return
    config.add_compiler_option("bmv2-*-p4org", "-o")
    config.add_compiler_option("bmv2-*-p4org", "{}/{}.json".format(output_dir, source_basename))
    config.add_compiler_option("bmv2-*-p4org", "{}/{}.p4i".format(output_dir, source_basename))
    # generate api has part of the compilation
    config.add_compiler_option("bmv2-*-p4org", "--p4runtime-file");
    config.add_compiler_option("bmv2-*-p4org", "{}/{}.p4rt".format(output_dir, source_basename))

config_preprocessor()
config_compiler()
config.add_toolchain('bmv2-*-p4org', {
    'preprocessor': 'cc',
    'compiler': os.path.join(os.environ['P4C_BIN_DIR'],'p4c-bm2-ss')})
config.add_compilation_steps('bmv2-*-p4org', ["preprocessor", "compiler"])

config.target.append("bmv2-*-p4org")
