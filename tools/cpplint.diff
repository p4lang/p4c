This diff file tracks the modifications that have been applied to cpplint.py compared to the original found here:
https://github.com/cpplint/cpplint/blob/2d2e1c9bbfd25f0d47e1ee193e7160cda4930b70/cpplint.py
Please update this file, whenever you make changes to cpplint.
--- tools/tmp.txt	2025-04-11 14:16:02.679905300 +0200
+++ tools/cpplint.py	2025-04-11 14:13:59.169380300 +0200
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 #
 # Copyright (c) 2009 Google Inc. All rights reserved.
 #
@@ -46,6 +46,7 @@
 import codecs
 import collections
 import copy
+import fnmatch
 import getopt
 import glob
 import itertools
@@ -2665,11 +2666,11 @@
     # contain any "//" comments at all, it could be that the compiler
     # only wants "/**/" comments, look for those instead.
     no_single_line_comments = True
-    for i in range(1, len(raw_lines) - 1):
-        line = raw_lines[i]
-        if re.match(r'^(?:(?:\'(?:\.|[^\'])*\')|(?:"(?:\.|[^"])*")|[^\'"])*//', line):
-            no_single_line_comments = False
-            break
+    # for i in range(1, len(raw_lines) - 1):
+    #     line = raw_lines[i]
+    #     if re.match(r'^(?:(?:\'(?:\.|[^\'])*\')|(?:"(?:\.|[^"])*")|[^\'"])*//', line):
+    #         no_single_line_comments = False
+    #         break
 
     if no_single_line_comments:
         match = re.match(r"#endif\s*/\*\s*" + cppvar + r"(_)?\s*\*/", endif)
@@ -7496,6 +7497,8 @@
                         ProcessHppHeadersOption(val)
                     elif name == "includeorder":
                         ProcessIncludeOrderOption(val)
+                    elif name == 'filematch':
+                        skip = not fnmatch.fnmatch(os.path.basename(filename), val)
                     else:
                         _cpplint_state.PrintError(
                             f"Invalid configuration option ({name}) in file {cfg_file}\n"
