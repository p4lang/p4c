explicit-cast-to-incompatible-type-from-tuple-expr.p4(4): [--Wwarn=unused] warning: control 'C' is unused
control C()() {
        ^
explicit-cast-to-incompatible-type-from-tuple-expr.p4(7): [--Werror=type-error] error: '(list<match_kind>){ InvalidHeader, ... }'
    stack = (list<match_kind>) { (H) {#}, ... };
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  ---- Actual error:
explicit-cast-to-incompatible-type-from-tuple-expr.p4(3): Cannot cast implicitly type 'header H' to type 'match_kind'
  header H {}
         ^
explicit-cast-to-incompatible-type-from-tuple-expr.p4(7)
      stack = (list<match_kind>) { (H) {#}, ... };
                    ^^^^^^^^^^
  ---- Originating from:
explicit-cast-to-incompatible-type-from-tuple-expr.p4(7): Source expression 'InvalidHeader' produces a result of type 'header H' which cannot be assigned to a left-value with type 'match_kind'
      stack = (list<match_kind>) { (H) {#}, ... };
                                       ^^^
explicit-cast-to-incompatible-type-from-tuple-expr.p4(3)
  header H {}
         ^
explicit-cast-to-incompatible-type-from-tuple-expr.p4(7)
      stack = (list<match_kind>) { (H) {#}, ... };
                    ^^^^^^^^^^
explicit-cast-to-incompatible-type-from-tuple-expr.p4(7): [--Werror=type-error] error: 'stack = { InvalidHeader, ... }'
    stack = (list<match_kind>) { (H) {#}, ... };
          ^
  ---- Actual error:
explicit-cast-to-incompatible-type-from-tuple-expr.p4(7): Cannot cast implicitly type 'list<match_kind>' to type 'header H[2]'
      stack = (list<match_kind>) { (H) {#}, ... };
               ^^^^^^^^^^^^^^^^
explicit-cast-to-incompatible-type-from-tuple-expr.p4(5)
    H[2] stack;
    ^^^^
  ---- Originating from:
explicit-cast-to-incompatible-type-from-tuple-expr.p4(7): Source expression '{ InvalidHeader, ... }' produces a result of type 'list<match_kind>' which cannot be assigned to a left-value with type 'header H[2]'
      stack = (list<match_kind>) { (H) {#}, ... };
                                 ^^^^^^^^^^^^^^^^
explicit-cast-to-incompatible-type-from-tuple-expr.p4(7)
      stack = (list<match_kind>) { (H) {#}, ... };
               ^^^^^^^^^^^^^^^^
explicit-cast-to-incompatible-type-from-tuple-expr.p4(5)
    H[2] stack;
    ^^^^
