#
# * Copyright 2020 Cisco Systems, Inc.
# *
# * Licensed under the Apache License, Version 2.0 (the "License");
# * you may not use this file except in compliance with the License.
# * You may obtain a copy of the License at
# *
# *    http://www.apache.org/licenses/LICENSE-2.0
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *
#

######################################################################

# runtime index is max = 02 and hdr.ml.idx in P4 code.
packet 0 ca0107fc001c1111111111110800 02 010203 0000000001 0123456789 abcdef0123
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ethernet  ^^^^^^^^^^ pool[0].base0 thru .base4, then .val
#                                     ^^ ml.idx            ^^^^^^^^^^ pool[1]
#                                        ^^ vector[0].e               ^^^^^^^^^^ pool[2]
#                                          ^^ vector[1].e
#                                            ^^ vector[2].e

# - denotes unspecified/unknown values

# After assignment:
#       hdr.vector[0].e = hdr.pool[1].val + 1;
#                                changed VV
#        ca0107fc001c1111111111110800 02 8a0203 0000000001 0123456789 abcdef0123

# After assignment:
#       hdr.pool[hdr.ml.idx].val = hdr.vector[0].e;
#                                                                     changed VV
#        ca0107fc001c1111111111110800 02 8a0203 0000000001 0123456789 abcdef018a

# After assignment:
#       hdr.pool[hdr.ml.idx].base2 = hdr.vector[0].e;
#                                                                 changed VV
#        ca0107fc001c1111111111110800 02 8a0203 0000000001 0123456789 abcd8a018a

# After assignment:
#        hdr.vector[1].e = hdr.pool[hdr.ml.idx].base0;
#                                  changed VV
#        ca0107fc001c1111111111110800 02 8aab03 0000000001 0123456789 abcd8a018a

# After assignment:
#       hdr.pool[hdr.ml.idx].base0 = hdr.pool[hdr.ml.idx].base1 + 1;
#                                                             changed VV
#        ca0107fc001c1111111111110800 02 8aab03 0000000001 0123456789 cecd8a018a

expect 0 ca0107fc001c1111111111110800 02 8aab03 0000000001 0123456789 cecd8a018a

######################################################################

# runtime index is min = 00
packet 0 ca0107fc001c1111111111110800 00 010203 deadbeeff0 0123456789 abcdef0123

# After assignment:
#       hdr.vector[0].e = hdr.pool[1].val + 1;
#                                changed VV
#        ca0107fc001c1111111111110800 00 8a0203 deadbeeff0 0123456789 abcdef0123

# After assignment:
#       hdr.pool[hdr.ml.idx].val = hdr.vector[0].e;
#                                               changed VV
#        ca0107fc001c1111111111110800 00 8a0203 deadbeef8a 0123456789 abcdef0123

# After assignment:
#       hdr.pool[hdr.ml.idx].base2 = hdr.vector[0].e;
#                                           changed VV
#        ca0107fc001c1111111111110800 00 8a0203 dead8aef8a 0123456789 abcdef0123

# After assignment:
#        hdr.vector[1].e = hdr.pool[hdr.ml.idx].base0;
#                                  changed VV
#        ca0107fc001c1111111111110800 00 8ade03 dead8aef8a 0123456789 abcdef0123

# After assignment:
#       hdr.pool[hdr.ml.idx].base0 = hdr.pool[hdr.ml.idx].base1 + 1;
#                                       changed VV
#        ca0107fc001c1111111111110800 00 8ade03 aead8aef8a 0123456789 abcdef0123

expect 0 ca0107fc001c1111111111110800 00 8ade03 aead8aef8a 0123456789 abcdef0123
