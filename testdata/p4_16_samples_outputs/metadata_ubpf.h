/* Automatically generated by p4c-ubpf from /home/mateusz/p4c/testdata/p4_16_samples/metadata_ubpf.p4 on Fri Jan 24 10:30:10 2020
 */
#ifndef _P4_GEN_HEADER_
#define _P4_GEN_HEADER_
#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>
#include "ubpf_common.h"


struct Ethernet_h {
    uint64_t dstAddr; /* EthernetAddress */
    uint64_t srcAddr; /* EthernetAddress */
    uint16_t etherType; /* bit<16> */
    uint8_t ebpf_valid;
};

struct Headers_t {
    struct Ethernet_h ethernet; /* Ethernet_h */
};

struct metadata {
    uint16_t etherType; /* bit<16> */
};


enum ubpf_map_type {
    UBPF_MAP_TYPE_HASHMAP = 4,
};
struct ubpf_map_def {
    enum ubpf_map_type type;
    unsigned int key_size;
    unsigned int value_size;
    unsigned int max_entries;
    unsigned int nb_hash_functions;
};

struct pipe_meta_based_tbl_key {
    uint16_t meta_etherType; /* meta.etherType */
};
enum meta_based_tbl_0_actions {
    pipe_change_etherType,
    pipe_meta_based_tbl_NoAction,
};
struct pipe_meta_based_tbl_value {
    enum meta_based_tbl_0_actions action;
    union {
        struct {
        } pipe_change_etherType;
        struct {
        } pipe_meta_based_tbl_NoAction;
    } u;
};
struct pipe_tbl_key {
    uint16_t headers_ethernet_etherType; /* headers.ethernet.etherType */
};
enum tbl_0_actions {
    pipe_fill_metadata,
    pipe_tbl_NoAction,
};
struct pipe_tbl_value {
    enum tbl_0_actions action;
    union {
        struct {
        } pipe_fill_metadata;
        struct {
        } pipe_tbl_NoAction;
    } u;
};

struct ubpf_map_def pipe_meta_based_tbl = {
    .type = UBPF_MAP_TYPE_HASHMAP,
    .key_size = sizeof(struct pipe_meta_based_tbl_key),
    .value_size = sizeof(struct pipe_meta_based_tbl_value),
    .max_entries = 65535,
    .nb_hash_functions = 0,
};
struct ubpf_map_def pipe_tbl = {
    .type = UBPF_MAP_TYPE_HASHMAP,
    .key_size = sizeof(struct pipe_tbl_key),
    .value_size = sizeof(struct pipe_tbl_value),
    .max_entries = 65535,
    .nb_hash_functions = 0,
};
#endif
