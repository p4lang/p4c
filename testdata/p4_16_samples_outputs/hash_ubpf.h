/* Automatically generated by p4c-ubpf from /home/dev/workspace/p4c/testdata/p4_16_samples/hash_ubpf.p4
 */
#ifndef _P4_GEN_HEADER_
#define _P4_GEN_HEADER_
#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>
#include "ubpf_common.h"


enum HashAlgorithm{
lookup3,
};

struct test_t {
    uint16_t sa; /* bit<16> */
    uint8_t da; /* bit<8> */
    uint8_t ebpf_valid;
};

struct test1_t {
    uint8_t a; /* bit<8> */
    uint16_t b; /* bit<16> */
    uint16_t c; /* bit<16> */
    uint8_t d; /* bit<8> */
    uint8_t ebpf_valid;
};

struct test2_t {
    uint8_t a; /* bit<8> */
    uint8_t ebpf_valid;
};

struct Headers_t {
    struct test_t test; /* test_t */
    struct test1_t test1; /* test1_t */
    struct test2_t test2; /* test2_t */
};

struct metadata {
    uint32_t output; /* bit<32> */
};


enum ubpf_map_type {
    UBPF_MAP_TYPE_HASHMAP = 4,
};
struct ubpf_map_def {
    enum ubpf_map_type type;
    unsigned int key_size;
    unsigned int value_size;
    unsigned int max_entries;
    unsigned int nb_hash_functions;
};


#endif
