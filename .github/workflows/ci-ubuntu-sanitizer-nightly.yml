name: "test-p4c-ubuntu-sanitizers"

on:
  schedule:
    # Every day on midnight UTC
    - cron: "0 0 * * *"
  pull_request:
    branches: [main]
  push:
    branches: [main]

# Cancel any preceding run on the pull request.
concurrency:
  group: test-ubuntu-clang-sanitizers-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  # Build with clang and test p4c on Ubuntu
  test-ubuntu-clang-sanitizers:
    # Only run on pull requests with the "run-sanitizer" label.
    if: ${{ github.event_name == 'schedule' || contains(github.event.pull_request.labels.*.name, 'run-sanitizer') }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
    runs-on: ${{ matrix.os }}
    env:
      CTEST_PARALLEL_LEVEL: 2
      IMAGE_TYPE: test
      COMPILE_WITH_CLANG: ON
      BUILD_AUTO_VAR_INIT_PATTERN: ON
      ENABLE_SANITIZERS: ON
      UBSAN_OPTIONS: print_stacktrace=1
      ASAN_OPTIONS: print_stacktrace=1:detect_leaks=0
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: test-${{ runner.os }}-clang
          max-size: 1000M

      - name: Build (${{ runner.os }}, Clang, Sanitizers)
        run: |
          tools/ci-build.sh

      - name: Run tests (${{ runner.os }})
        # Need to use sudo for the eBPF kernel tests.
        run: sudo -E env PATH="$PATH" uv run ctest --output-on-failure --schedule-random
        working-directory: ./build
