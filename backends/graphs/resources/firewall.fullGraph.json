{
  "name" : "program",
  "nodes" : [
    {
      "type" : "parser",
      "name" : "MyParser",
      "nodes" : [
        {
          "node_nmb" : 0,
          "name" : "start\n(hdr.ethernet.etherType)",
          "type" : "state",
          "type_enum" : 8
        },
        {
          "node_nmb" : 1,
          "name" : "parse_ipv4\n(hdr.ipv4.protocol)",
          "type" : "state",
          "type_enum" : 8
        },
        {
          "node_nmb" : 2,
          "name" : "tcp",
          "type" : "state",
          "type_enum" : 8
        },
        {
          "node_nmb" : 3,
          "name" : "accept",
          "type" : "state",
          "type_enum" : 8
        },
        {
          "node_nmb" : 4,
          "name" : "reject",
          "type" : "state",
          "type_enum" : 8
        }
      ],
      "transitions" : [
        {
          "from" : 0,
          "to" : 1,
          "cond" : ""
        },
        {
          "from" : 0,
          "to" : 3,
          "cond" : ""
        },
        {
          "from" : 1,
          "to" : 2,
          "cond" : ""
        },
        {
          "from" : 1,
          "to" : 3,
          "cond" : ""
        },
        {
          "from" : 2,
          "to" : 3,
          "cond" : ""
        }
      ]
    },
    {
      "type" : "control",
      "name" : "MyVerifyChecksum",
      "nodes" : [
        {
          "node_nmb" : 0,
          "name" : "__START__",
          "type" : "other",
          "type_enum" : 7
        },
        {
          "node_nmb" : 1,
          "name" : "__EXIT__",
          "type" : "other",
          "type_enum" : 7
        }
      ],
      "transitions" : [
        {
          "from" : 0,
          "to" : 1,
          "cond" : ""
        }
      ]
    },
    {
      "type" : "control",
      "name" : "MyIngress",
      "nodes" : [
        {
          "node_nmb" : 0,
          "name" : "__START__",
          "type" : "other",
          "type_enum" : 7
        },
        {
          "node_nmb" : 1,
          "name" : "__EXIT__",
          "type" : "other",
          "type_enum" : 7
        },
        {
          "node_nmb" : 2,
          "name" : "hdr.ipv4.isValid();",
          "type" : "condition",
          "type_enum" : 3
        },
        {
          "node_nmb" : 3,
          "name" : "ipv4_lpm_0",
          "type" : "table",
          "type_enum" : 0
        },
        {
          "node_nmb" : 4,
          "name" : "lpm: \"hdr.ipv4.dstAddr\"\\n",
          "type" : "key",
          "type_enum" : 1
        },
        {
          "node_nmb" : 5,
          "name" : "ipv4_forward",
          "type" : "action",
          "type_enum" : 2
        },
        {
          "node_nmb" : 6,
          "name" : "standard_metadata.egress_spec = port;\n...\nhdr.ipv4.ttl = hdr.ipv4.ttl + 255;",
          "type" : "statements",
          "type_enum" : 5
        },
        {
          "node_nmb" : 7,
          "name" : "drop",
          "type" : "action",
          "type_enum" : 2
        },
        {
          "node_nmb" : 8,
          "name" : "mark_to_drop(standard_metadata);",
          "type" : "statements",
          "type_enum" : 5
        },
        {
          "node_nmb" : 9,
          "name" : "NoAction_1",
          "type" : "action",
          "type_enum" : 2
        },
        {
          "node_nmb" : 10,
          "name" : "hdr.tcp.isValid();",
          "type" : "condition",
          "type_enum" : 3
        },
        {
          "node_nmb" : 11,
          "name" : "direction_0/direction = 0;",
          "type" : "statements",
          "type_enum" : 5
        },
        {
          "node_nmb" : 12,
          "name" : "check_ports_0/check_ports.apply().hit;",
          "type" : "condition",
          "type_enum" : 3
        },
        {
          "node_nmb" : 13,
          "name" : "direction_0/direction == 0;",
          "type" : "condition",
          "type_enum" : 3
        },
        {
          "node_nmb" : 14,
          "name" : "compute_hashes();",
          "type" : "statements",
          "type_enum" : 5
        },
        {
          "node_nmb" : 15,
          "name" : "compute_hashes_1/compute_hashes();",
          "type" : "statements",
          "type_enum" : 5
        },
        {
          "node_nmb" : 16,
          "name" : "direction_0/direction == 0;",
          "type" : "condition",
          "type_enum" : 3
        },
        {
          "node_nmb" : 17,
          "name" : "hdr.tcp.syn == 1;",
          "type" : "condition",
          "type_enum" : 3
        },
        {
          "node_nmb" : 18,
          "name" : "bloom_filter/bloom_filter_1.write(reg_pos_one_0/reg_pos_one, 1);\nbloom_filter_0/bloom_filter_2.write(reg_pos_two_0/reg_pos_two, 1);",
          "type" : "statements",
          "type_enum" : 5
        },
        {
          "node_nmb" : 19,
          "name" : "direction_0/direction == 1;",
          "type" : "condition",
          "type_enum" : 3
        },
        {
          "node_nmb" : 20,
          "name" : "bloom_filter/bloom_filter_1.read(reg_val_one_0/reg_val_one, reg_pos_one_0/reg_pos_one);\nbloom_filter_0/bloom_filter_2.read(reg_val_two_0/reg_val_two, reg_pos_two_0/reg_pos_two);",
          "type" : "statements",
          "type_enum" : 5
        },
        {
          "node_nmb" : 21,
          "name" : "reg_val_one_0/reg_val_one != 1 || reg_val_two_0/reg_val_two != 1;",
          "type" : "condition",
          "type_enum" : 3
        },
        {
          "node_nmb" : 22,
          "name" : "drop_1/drop();",
          "type" : "statements",
          "type_enum" : 5
        }
      ],
      "transitions" : [
        {
          "from" : 0,
          "to" : 2,
          "cond" : ""
        },
        {
          "from" : 2,
          "to" : 3,
          "cond" : ""
        },
        {
          "from" : 2,
          "to" : 1,
          "cond" : ""
        },
        {
          "from" : 3,
          "to" : 4,
          "cond" : ""
        },
        {
          "from" : 4,
          "to" : 5,
          "cond" : ""
        },
        {
          "from" : 4,
          "to" : 7,
          "cond" : ""
        },
        {
          "from" : 4,
          "to" : 9,
          "cond" : ""
        },
        {
          "from" : 5,
          "to" : 6,
          "cond" : ""
        },
        {
          "from" : 6,
          "to" : 10,
          "cond" : ""
        },
        {
          "from" : 7,
          "to" : 8,
          "cond" : ""
        },
        {
          "from" : 8,
          "to" : 10,
          "cond" : ""
        },
        {
          "from" : 9,
          "to" : 10,
          "cond" : ""
        },
        {
          "from" : 10,
          "to" : 11,
          "cond" : ""
        },
        {
          "from" : 10,
          "to" : 1,
          "cond" : ""
        },
        {
          "from" : 11,
          "to" : 12,
          "cond" : ""
        },
        {
          "from" : 12,
          "to" : 13,
          "cond" : ""
        },
        {
          "from" : 12,
          "to" : 1,
          "cond" : ""
        },
        {
          "from" : 13,
          "to" : 14,
          "cond" : ""
        },
        {
          "from" : 13,
          "to" : 15,
          "cond" : ""
        },
        {
          "from" : 14,
          "to" : 16,
          "cond" : ""
        },
        {
          "from" : 15,
          "to" : 16,
          "cond" : ""
        },
        {
          "from" : 16,
          "to" : 17,
          "cond" : ""
        },
        {
          "from" : 16,
          "to" : 19,
          "cond" : ""
        },
        {
          "from" : 17,
          "to" : 18,
          "cond" : ""
        },
        {
          "from" : 17,
          "to" : 1,
          "cond" : ""
        },
        {
          "from" : 18,
          "to" : 1,
          "cond" : ""
        },
        {
          "from" : 19,
          "to" : 20,
          "cond" : ""
        },
        {
          "from" : 19,
          "to" : 1,
          "cond" : ""
        },
        {
          "from" : 20,
          "to" : 21,
          "cond" : ""
        },
        {
          "from" : 21,
          "to" : 22,
          "cond" : ""
        },
        {
          "from" : 21,
          "to" : 1,
          "cond" : ""
        },
        {
          "from" : 22,
          "to" : 1,
          "cond" : ""
        }
      ]
    },
    {
      "type" : "control",
      "name" : "MyEgress",
      "nodes" : [
        {
          "node_nmb" : 0,
          "name" : "__START__",
          "type" : "other",
          "type_enum" : 7
        },
        {
          "node_nmb" : 1,
          "name" : "__EXIT__",
          "type" : "other",
          "type_enum" : 7
        }
      ],
      "transitions" : [
        {
          "from" : 0,
          "to" : 1,
          "cond" : ""
        }
      ]
    },
    {
      "type" : "control",
      "name" : "MyComputeChecksum",
      "nodes" : [
        {
          "node_nmb" : 0,
          "name" : "__START__",
          "type" : "other",
          "type_enum" : 7
        },
        {
          "node_nmb" : 1,
          "name" : "__EXIT__",
          "type" : "other",
          "type_enum" : 7
        },
        {
          "node_nmb" : 2,
          "name" : "update_checksum<list<bit<4>, bit<4>, bit<8>, bit<16>, bit<16>, bit<3>, bit<13>, bit<8>, bit<8>, bit<32>, bit<32>>, bit<16>>(hdr.ipv4.isValid(), {hdr.ipv4.version, hdr.ipv4.ihl, hdr.ipv4.diffserv, hdr.ipv4.totalLen, hdr.ipv4.identification, hdr.ipv4.flags, hdr.ipv4.fragOffset, hdr.ipv4.ttl, hdr.ipv4.protocol, hdr.ipv4.srcAddr, hdr.ipv4.dstAddr}, hdr.ipv4.hdrChecksum, HashAlgorithm.csum16);",
          "type" : "statements",
          "type_enum" : 5
        }
      ],
      "transitions" : [
        {
          "from" : 0,
          "to" : 2,
          "cond" : ""
        },
        {
          "from" : 2,
          "to" : 1,
          "cond" : ""
        }
      ]
    },
    {
      "type" : "control",
      "name" : "MyDeparser",
      "nodes" : [
        {
          "node_nmb" : 0,
          "name" : "__START__",
          "type" : "other",
          "type_enum" : 7
        },
        {
          "node_nmb" : 1,
          "name" : "__EXIT__",
          "type" : "other",
          "type_enum" : 7
        },
        {
          "node_nmb" : 2,
          "name" : "packet.emit<ethernet_t>(hdr.ethernet);\n...\npacket.emit<tcp_t>(hdr.tcp);",
          "type" : "statements",
          "type_enum" : 5
        }
      ],
      "transitions" : [
        {
          "from" : 0,
          "to" : 2,
          "cond" : ""
        },
        {
          "from" : 2,
          "to" : 1,
          "cond" : ""
        }
      ]
    }
  ]
}
