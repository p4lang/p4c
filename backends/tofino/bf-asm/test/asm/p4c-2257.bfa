version:
  version: 1.0.1
  run_id: "e8fcabd5512471f2"
  target: Tofino
phv ingress:
  HillTop.Lamona.Fristoe: W14(8..21)
  HillTop.Lamona.Traverse: H1(0..11)
  HillTop.Lamona.Pachuta: B34(0)
  HillTop.Lamona.Whitefish: W0(0..1)
  Millston.Belgrade.Roachdale: H6(8..15)
  Millston.Belgrade.Rugby: H6(5..7)
  Millston.Belgrade.Davie: H6(4)
  Millston.Belgrade.Cacao: H6(0..3)
  Millston.Belgrade.Mankato: B36
  Millston.Belgrade.Virgil: W13(8..31)
  Millston.Belgrade.Florin.0-15: H63
  Millston.Belgrade.Florin.16-23: W13(0..7)
  Millston.Belgrade.Ronan: TW12
  Millston.Belgrade.Corinth: H51
  Millston.Belgrade.__pad_0: B11(4..7)
  Millston.Belgrade.Union: B11(1..3)
  Millston.Belgrade.Rockport: B11(0)
  Millston.Belgrade.__pad_1: B9(6..7)
  Millston.Belgrade.Anacortes: B9(5)
  Millston.Belgrade.Shabbona: B9(4)
  Millston.Belgrade.Allgood: B9(1..3)
  Millston.Belgrade.Waipahu: B9(0)
  Millston.Belgrade.__pad_2: B34(1..7)
  Millston.Belgrade.Freeburg: B34(0)
  Millston.Belgrade.__pad_3: W1(8..31)
  Millston.Belgrade.Sudbury: W1(2..7)
  Millston.Belgrade.Selawik: W1(0..1)
  Millston.Belgrade.__pad_4: B7(3..7)
  Millston.Belgrade.Willard: B7(0..2)
  Millston.Belgrade.__pad_5: H90(6..15)
  Millston.Belgrade.Matheson: H90(0..5)
  Millston.Belgrade.__pad_6: H48(9..15)
  Millston.Belgrade.Chaska: H48(0..8)
  Millston.Belgrade.__pad_7: H2(12..15)
  Millston.Belgrade.Requa: H2(0..11)
  Millston.Belgrade.__pad_8: H4(12..15)
  Millston.Belgrade.Bayshore: H4(0..11)
  Millston.Belgrade.__pad_9: H3(12..15)
  Millston.Belgrade.Florien: H3(0..11)
  HillTop.Tiburon.Arnold: H53(0..8)
  Millston.Hayfield.Blitchton: W48(26..31)
  Millston.Hayfield.Avondale: W48(16..25)
  Millston.Hayfield.Glassboro: W48(12..15)
  Millston.Hayfield.Grabill: W48(0..11)
  Millston.Hayfield.AquaPark: B47(6..7)
  Millston.Hayfield.Vichy: B47(3..5)
  Millston.Calabash.Adona: W12(8..31)
  Millston.Calabash.Connell.0-15: H54
  Millston.Calabash.Connell.16-23: W12(0..7)
  Millston.Calabash.Goldsboro.0-7: W6(24..31)
  Millston.Calabash.Goldsboro.8-23: H36
  Millston.Calabash.Fabens: W6(0..23)
  Millston.Calabash.McCaulley.0-7: B50
  Millston.Calabash.McCaulley.8-15: B53
  Millston.Wondervu$0.Higginson: H0(13..15)
  Millston.Wondervu$0.Oriskany: H0(12)
  Millston.Wondervu$0.Bowden: H0(0..11)
  Millston.Wondervu$0.McCaulley.0-7: B48
  Millston.Wondervu$0.McCaulley.8-15: B51
  Millston.Wondervu$1.Higginson: TH24(13..15)
  Millston.Wondervu$1.Oriskany: TH24(12)
  Millston.Wondervu$1.Bowden: TH24(0..11)
  Millston.Wondervu$1.McCaulley.0-7: B49
  Millston.Wondervu$1.McCaulley.8-15: B52
  Millston.Rainelle.Conner: TW1(16..31)
  Millston.Rainelle.Ledoux: TW1(0..15)
  Millston.Rainelle.Steger: TH0(8..15)
  Millston.Rainelle.Quogue: TH0(0..7)
  Millston.Rainelle.Findlay: H35
  Millston.GlenAvon.Fayette: H89(12..15)
  Millston.GlenAvon.Osterdock: H89(8..11)
  Millston.GlenAvon.PineCity: H89(2..7)
  Millston.GlenAvon.Alameda: H89(0..1)
  Millston.GlenAvon.Rexville: H38
  Millston.GlenAvon.Quinwood: TW0(16..31)
  Millston.GlenAvon.Marfa: TW0(15)
  Millston.GlenAvon.Palatine: TW0(14)
  Millston.GlenAvon.Mabelle: TW0(13)
  Millston.GlenAvon.Hoagland: TW0(0..12)
  Millston.GlenAvon.Exton: TB1
  Millston.GlenAvon.Ocoee: B33
  Millston.GlenAvon.Hackett: TH25
  Millston.GlenAvon.Kaluaaha: W32
  Millston.GlenAvon.Calcasieu: W33
  HillTop.Aldan.Vinemont: B42
  HillTop.Aldan.Kenbridge: B58
  HillTop.Aldan.Parkville: B13(0..3)
  HillTop.Aldan.Mystic.0-1: B10(4..5)
  HillTop.Aldan.Mystic.2-2: B14(0)
  HillTop.Aldan.Kearns.0-0: B7(0)
  HillTop.Aldan.Kearns.1-2: H50(0..1)
  HillTop.Aldan.Malinta.0-0: B8(0)
  HillTop.Aldan.Malinta.1-2: H56(0..1)
  HillTop.Aldan.Blakeley: H63(0)
  HillTop.Aldan.Poulan: H48(0)
  HillTop.RossFork.Adona: W0(2..25)
  HillTop.RossFork.Connell.0-15: H55
  HillTop.RossFork.Connell.16-23: W14(0..7)
  HillTop.RossFork.Goldsboro.0-7: W8(0..7)
  HillTop.RossFork.Goldsboro.8-23: H37
  HillTop.RossFork.Fabens: W7(0..23)
  HillTop.RossFork.McCaulley.0-7: B56
  HillTop.RossFork.McCaulley.8-15: B57
  HillTop.RossFork.CeeVee: H4(0..11)
  HillTop.RossFork.Quebrada: W4(0..19)
  HillTop.RossFork.Bicknell: H3(0..11)
  HillTop.RossFork.Ocoee: B44
  HillTop.RossFork.Exton: B59
  HillTop.RossFork.Naruna.0-1: B8(3..4)
  HillTop.RossFork.Naruna.2-2: B13(5)
  HillTop.RossFork.Suttle: B2(0)
  HillTop.RossFork.Ankeny: B45
  HillTop.RossFork.Denhoff.0-0: B7(3)
  HillTop.RossFork.Denhoff.1-2: H62(2..3)
  HillTop.RossFork.Joslin: H34(5..7)
  HillTop.RossFork.Weyauwega: B12(5)
  HillTop.RossFork.Powderly: B11(6)
  HillTop.RossFork.Welcome: H85(6)
  HillTop.RossFork.Teigen: B38(0)
  HillTop.RossFork.Lowes: B15(5)
  HillTop.RossFork.Almedia: H14(12)
  HillTop.RossFork.Chugwater: B15(6)
  HillTop.RossFork.Charco: B12(6)
  HillTop.RossFork.Daphne: B12(7)
  HillTop.RossFork.Level: B15(4)
  HillTop.RossFork.Algoa: W11(1)
  HillTop.RossFork.Thayne: B5(0)
  HillTop.RossFork.Parkland: H62(1)
  HillTop.RossFork.Kapalua: W10(8)
  HillTop.RossFork.Halaula: W1(8)
  HillTop.RossFork.Uvalde: W9(9)
  HillTop.RossFork.Tenino: H66(14)
  HillTop.RossFork.Pridgen: H66(15)
  HillTop.RossFork.Juniata: H95(11)
  HillTop.RossFork.Beaverdam: W1(18)
  HillTop.RossFork.ElVerano: B12(2)
  HillTop.RossFork.Brinkman: B8(5)
  HillTop.RossFork.Boerne: B3(0)
  HillTop.RossFork.Alamosa: B12(3)
  HillTop.RossFork.Knierim: W1(19..30)
  HillTop.RossFork.Montross: W39(0..11)
  HillTop.RossFork.Glenmora: H11
  HillTop.RossFork.DonaAna: H40
  HillTop.RossFork.Altus: H61
  HillTop.RossFork.Merrill: H41
  HillTop.RossFork.Hickox: H42
  HillTop.RossFork.Tehachapi: H43
  HillTop.RossFork.Sewaren: H90(12..13)
  HillTop.RossFork.WindGap: H90(14)
  HillTop.RossFork.Caroleen: H3(14..15)
  HillTop.RossFork.Lordstown: H90(15)
  HillTop.RossFork.Belfair: H14(14)
  HillTop.RossFork.Luzerne: H65(0..13)
  HillTop.RossFork.Devers: H66(0..13)
  HillTop.RossFork.Crozet: H5
  HillTop.RossFork.Laxon: W38
  HillTop.RossFork.Chaffee: H14(0..7)
  HillTop.RossFork.Brinklow: W1(9..16)
  HillTop.RossFork.Everton: W49(0..15)
  HillTop.RossFork.Lafayette: B55
  HillTop.RossFork.Chevak: H9
  HillTop.RossFork.Mendocino: H32
  HillTop.RossFork.Kremlin: B40
  HillTop.RossFork.TroutRun: H65(14..15)
  HillTop.RossFork.Bradner: H3(12..13)
  HillTop.RossFork.Ravena: H4(12)
  HillTop.RossFork.Redden: B6(0)
  HillTop.RossFork.Yaurel: B9(0)
  HillTop.RossFork.Bucktown: W51
  HillTop.RossFork.Hulbert: H62(12..13)
  Millston.Ramos.Fayette: TW1(28..31)
  Millston.Ramos.Osterdock: TW1(24..27)
  Millston.Ramos.PineCity: TW1(18..23)
  Millston.Ramos.Alameda: TW1(16..17)
  Millston.Ramos.Rexville: TW1(0..15)
  Millston.Ramos.Quinwood: TW2(16..31)
  Millston.Ramos.Marfa: TW2(15)
  Millston.Ramos.Palatine: TW2(14)
  Millston.Ramos.Mabelle: TW2(13)
  Millston.Ramos.Hoagland: TW2(0..12)
  Millston.Ramos.Exton: TH1(8..15)
  Millston.Ramos.Ocoee: TH1(0..7)
  Millston.Ramos.Hackett: TH2
  Millston.Ramos.Kaluaaha: TW13
  Millston.Ramos.Calcasieu: TW14
  HillTop.Maddock.Kaluaaha: W37
  HillTop.Maddock.Calcasieu: W36
  HillTop.Maddock.PineCity: H83(2..7)
  Millston.Bergton.Chevak: W47(16..31)
  Millston.Bergton.Mendocino: W47(0..15)
  Millston.Pawtucket.StarLake: TH5
  Millston.Buckhorn.SoapLake: TH26
  Millston.Cassa.Chloride: TW15
  Millston.Cassa.Garibaldi.0-15: TH5
  Millston.Cassa.Garibaldi.16-31: TH18
  Millston.Cassa.Weinert: TW3(28..31)
  Millston.Cassa.Cornell: TW3(24..27)
  Millston.Cassa.Noyes: TW3(16..23)
  Millston.Cassa.Helton: TW3(0..15)
  Millston.Provencal.Fayette: TB3(4..7)
  Millston.Provencal.PineCity.0-1: H35(14..15)
  Millston.Provencal.PineCity.2-5: TB3(0..3)
  Millston.Provencal.Alameda: H35(12..13)
  Millston.Provencal.Maryhill.0-7: B39
  Millston.Provencal.Maryhill.8-19: H35(0..11)
  Millston.Provencal.Norwood: TW1(16..31)
  Millston.Provencal.Dassel: TW1(8..15)
  Millston.Provencal.Bushland: TW1(0..7)
  Millston.Provencal.Kaluaaha.0-31: TW2
  Millston.Provencal.Kaluaaha.32-63: TW13
  Millston.Provencal.Kaluaaha.64-95: TW14
  Millston.Provencal.Kaluaaha.96-111: TH1
  Millston.Provencal.Kaluaaha.112-127: TH2
  Millston.Provencal.Calcasieu.0-15: TH19
  Millston.Provencal.Calcasieu.16-31: TH20
  Millston.Provencal.Calcasieu.32-47: TH21
  Millston.Provencal.Calcasieu.48-63: TH22
  Millston.Provencal.Calcasieu.64-71: TB12
  Millston.Provencal.Calcasieu.72-79: TB13
  Millston.Provencal.Calcasieu.80-95: TH23
  Millston.Provencal.Calcasieu.96-127: TW16
  HillTop.Sublett.Kaluaaha.0-31: W37
  HillTop.Sublett.Kaluaaha.32-63: W3
  HillTop.Sublett.Kaluaaha.64-95: W39
  HillTop.Sublett.Kaluaaha.96-127: W40
  HillTop.Sublett.Calcasieu.0-31: W44
  HillTop.Sublett.Calcasieu.32-63: W45
  HillTop.Sublett.Calcasieu.64-95: W46
  HillTop.Sublett.Calcasieu.96-127: W36
  HillTop.Sublett.PineCity: H84(6..11)
  Millston.Grays.Chevak: H10
  Millston.Grays.Mendocino: H33
  Millston.Gotham.StarLake.0-7: TB2
  Millston.Gotham.StarLake.8-15: TB14
  Millston.Brookneal.SoapLake: W50(0..15)
  Millston.Hoven.Noyes: TB0
  Millston.Hoven.Allison.0-7: TH3(8..15)
  Millston.Hoven.Allison.8-23: TH4
  Millston.Hoven.Petrey.0-15: TH27
  Millston.Hoven.Petrey.16-23: TH3(0..7)
  Millston.Hoven.Roosville: B32
  Millston.Shirley.Adona: W15(8..31)
  Millston.Shirley.Connell.0-15: H39
  Millston.Shirley.Connell.16-23: W15(0..7)
  Millston.Shirley.Goldsboro.0-7: B35
  Millston.Shirley.Goldsboro.8-23: H92
  Millston.Shirley.Fabens.0-7: B37
  Millston.Shirley.Fabens.8-23: H93
  Millston.Shirley.McCaulley: H94
  Millston.Osyka.Chloride: TW1
  Millston.Osyka.Garibaldi: TW2
  Millston.Osyka.Weinert: TB0(4..7)
  Millston.Osyka.Cornell: TB0(0..3)
  Millston.Osyka.Noyes: B32
  Millston.Osyka.Helton: TH0
  Millston.Broadwell.Palmhurst: TH0(15)
  Millston.Broadwell.Comfrey: TH0(14)
  Millston.Broadwell.Kalida: TH0(13)
  Millston.Broadwell.Wallula: TH0(12)
  Millston.Broadwell.Dennison: TH0(11)
  Millston.Broadwell.Fairhaven: TH0(8..10)
  Millston.Broadwell.Noyes: TH0(3..7)
  Millston.Broadwell.Woodfield: TH0(0..2)
  Millston.Broadwell.LasVegas.0-7: TB0
  Millston.Broadwell.LasVegas.8-15: TB2
  Millston.Maumee.Fayette: H89(12..15)
  Millston.Maumee.PineCity: H89(6..11)
  Millston.Maumee.Alameda: H89(4..5)
  Millston.Maumee.Maryhill.0-15: H38
  Millston.Maumee.Maryhill.16-19: H89(0..3)
  Millston.Maumee.Norwood.0-7: B37
  Millston.Maumee.Norwood.8-15: B35
  Millston.Maumee.Dassel: B33
  Millston.Maumee.Bushland: TB1
  Millston.Maumee.Kaluaaha.0-31: W33
  Millston.Maumee.Kaluaaha.32-63: W15
  Millston.Maumee.Kaluaaha.64-95: W34
  Millston.Maumee.Kaluaaha.96-127: W35
  Millston.Maumee.Calcasieu.0-31: W41
  Millston.Maumee.Calcasieu.32-63: W42
  Millston.Maumee.Calcasieu.64-95: W43
  Millston.Maumee.Calcasieu.96-127: W32
  HillTop.Cutten.Pathfork: H59
  HillTop.Cutten.Tombstone: H56
  HillTop.Cutten.Subiaco: H58
  HillTop.Cutten.Marcus: H60
  HillTop.Cutten.Pittsboro: H57
  HillTop.Wisdom.Adona: W13(8..31)
  HillTop.Wisdom.Connell.0-15: H63
  HillTop.Wisdom.Connell.16-23: W13(0..7)
  HillTop.Wisdom.Dyess: B11(0)
  HillTop.Wisdom.Westhoff: B9(1..3)
  HillTop.Wisdom.Havana: W11(0)
  HillTop.Wisdom.Nenana: H2(0..11)
  HillTop.Wisdom.Morstein: W3(0..19)
  HillTop.Wisdom.Waubun: W1(2..7)
  HillTop.Wisdom.Onycha: B11(1..3)
  HillTop.Wisdom.Blencoe: B36
  HillTop.Wisdom.Delavan: B15(7)
  HillTop.Wisdom.Miller: H48(0..8)
  HillTop.Wisdom.Piqua: B9(4)
  HillTop.Wisdom.RioPecos: B9(0)
  HillTop.Wisdom.Dolores: W1(0..1)
  HillTop.Edwards.AquaPark: B14(5..6)
  HillTop.Edwards.LaConner: H86(0..5)
  HillTop.Edwards.McGrady: B14(2..4)
  HillTop.Edwards.Oilmont: B7(4)
  HillTop.Edwards.Tornillo: B7(5)
  HillTop.Edwards.Satolah: W1(17)
  HillTop.Edwards.RedElm: H6(5..7)
  HillTop.Edwards.Oriskany: H6(4)
  HillTop.Edwards.PineCity: H90(0..5)
  HillTop.Edwards.Pajaros: B56(0..4)
  HillTop.Murphy.Standish: B15(3)
  HillTop.Murphy.Blairsden: H64(14)
  HillTop.Bessie.Kaluaaha: H48
  HillTop.Bessie.Calcasieu: H46
  HillTop.Bessie.Heuvelton: W11(2..17)
  HillTop.Bessie.Chavies: H8
  HillTop.Bessie.Chevak: H12
  HillTop.Bessie.Mendocino: H44
  HillTop.Bessie.LasVegas: B43
  HillTop.Bessie.Exton: B60
  HillTop.Bessie.Noyes: B41
  HillTop.Bessie.Miranda: H62(4..11)
  HillTop.Bessie.Peebles: B9(5)
  HillTop.Bessie.PineCity: H90(6..11)
  HillTop.Ovett.Manilla: B4
  HillTop.Ovett.Hammond.0-0: H14(11)
  HillTop.Ovett.Hammond.1-3: H14(8..10)
  HillTop.Ovett.Hematite: H4(13)
  HillTop.Mausdale.Kenney: W5
  HillTop.Quinault.Foster: B11(4..5)
  HillTop.Savery.Kaluaaha: H49
  HillTop.Savery.Calcasieu: H47
  HillTop.Savery.Chevak: H13
  HillTop.Savery.Mendocino: H45
  HillTop.Savery.LasVegas: B42
  HillTop.Savery.Exton: B58
  HillTop.Savery.Noyes: B40
  HillTop.Savery.Peebles: B10(5)
  HillTop.Savery.PineCity: H85(6..11)
  HillTop.Naubinway.Ayden: B9(6..7)
  HillTop.Naubinway.Bonduel: H64(0..13)
  HillTop.Naubinway.Sardinia: H64(0..13)
  HillTop.Lewiston.Staunton: H51
  HillTop.Lewiston.Lugert: H61
  HillTop.Salix.Hueytown: H15
  HillTop.Komatke.Townville.0-11: H1(0..11)
  HillTop.Komatke.Townville.12-15: H5(12..15)
  HillTop.Komatke.Monahans: B12(4)
  HillTop.Komatke.Pinole: H62(0)
  HillTop.Freeny.Dunedin: B8(0..2)
  ig_intr_md_for_tm.ucast_egress_port: W2(0..8)
  ig_intr_md_for_tm.ingress_cos: B8(0..2)
  ig_intr_md_for_tm.qid: B13(0..4)
  ig_intr_md_for_tm.copy_to_cpu: H52(0)
  ig_intr_md_for_tm.mcast_grp_a: H7
  ig_intr_md_for_tm.level2_mcast_hash: H50(0..12)
  ig_intr_md_for_tm.level1_exclusion_id: H8
  ig_intr_md_for_tm.level2_exclusion_id: W9(0..8)
  ig_intr_md_for_tm.rid: H5
  HillTop.Minturn.Grassflat: H34(0..9)
  HillTop.Minturn.Whitewood: H34(0..9)
  HillTop.Minturn.Tilton: B14(0..1)
  HillTop.Moose.Townville: H8
  HillTop.Moose.Monahans: H14(13)
  HillTop.Moose.Pinole: H56(0)
  ig_intr_md_for_dprsr.drop_ctl: B15(0..2)
  ig_intr_md_for_dprsr.digest_type: B0(0..2)
  ig_intr_md_for_dprsr.mirror_type: B1(0..2)
  HillTop.Plains.Roachdale: B38
  HillTop.Plains.Miller: H57(0..8)
  Millston.Belgrade.$valid: B54(0)
  Millston.Hayfield.$valid: B54(1)
  Millston.Calabash.$valid: B54(2)
  Millston.Rainelle.$valid: B54(3)
  Millston.GlenAvon.$valid: B54(4)
  Millston.Ramos.$valid: B54(5)
  Millston.Bergton.$valid: B54(6)
  Millston.Pawtucket.$valid: B54(7)
  Millston.Buckhorn.$valid: H95(0)
  Millston.Cassa.$valid: H95(1)
  Millston.Provencal.$valid: H95(2)
  Millston.Grays.$valid: H95(3)
  Millston.Gotham.$valid: H95(4)
  Millston.Brookneal.$valid: H95(5)
  Millston.Hoven.$valid: H95(7)
  Millston.Shirley.$valid: H95(8)
  Millston.Osyka.$valid: H95(6)
  Millston.Broadwell.$valid: H95(9)
  Millston.Maumee.$valid: H95(10)
  Millston.Wondervu.$stkvalid: B12(0..1)
  Millston.Wondervu$0.$valid: B12(1)
  Millston.Wondervu$1.$valid: B12(0)
  context_json:
    TB0:
      Millston.Osyka.Cornell:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Hoven.Noyes, Millston.Broadwell.LasVegas ]
      Millston.Osyka.Weinert:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Hoven.Noyes, Millston.Broadwell.LasVegas ]
      Millston.Hoven.Noyes:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Osyka.Cornell, Millston.Osyka.Weinert, Millston.Broadwell.LasVegas ]
      Millston.Broadwell.LasVegas:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Osyka.Cornell, Millston.Osyka.Weinert, Millston.Hoven.Noyes ]
    TB1:
      Millston.Maumee.Bushland:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Exton ]
      Millston.GlenAvon.Exton:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Bushland ]
    TB2:
      Millston.Broadwell.LasVegas:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Gotham.StarLake ]
      Millston.Gotham.StarLake:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Broadwell.LasVegas ]
    TB3:
      Millston.Provencal.PineCity:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Provencal.Fayette:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TB12:
      Millston.Provencal.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TB13:
      Millston.Provencal.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TB14:
      Millston.Gotham.StarLake:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH0:
      Millston.Osyka.Helton:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Broadwell.Woodfield, Millston.Broadwell.Noyes, Millston.Broadwell.Fairhaven, Millston.Broadwell.Dennison, Millston.Broadwell.Wallula, Millston.Broadwell.Kalida, Millston.Broadwell.Comfrey, Millston.Broadwell.Palmhurst, Millston.Rainelle.Quogue, Millston.Rainelle.Steger ]
      Millston.Broadwell.Woodfield:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Osyka.Helton, Millston.Rainelle.Quogue, Millston.Rainelle.Steger ]
      Millston.Broadwell.Noyes:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Osyka.Helton, Millston.Rainelle.Quogue, Millston.Rainelle.Steger ]
      Millston.Broadwell.Fairhaven:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Osyka.Helton, Millston.Rainelle.Quogue, Millston.Rainelle.Steger ]
      Millston.Broadwell.Dennison:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Osyka.Helton, Millston.Rainelle.Quogue, Millston.Rainelle.Steger ]
      Millston.Broadwell.Wallula:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Osyka.Helton, Millston.Rainelle.Quogue, Millston.Rainelle.Steger ]
      Millston.Broadwell.Kalida:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Osyka.Helton, Millston.Rainelle.Quogue, Millston.Rainelle.Steger ]
      Millston.Broadwell.Comfrey:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Osyka.Helton, Millston.Rainelle.Quogue, Millston.Rainelle.Steger ]
      Millston.Broadwell.Palmhurst:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Osyka.Helton, Millston.Rainelle.Quogue, Millston.Rainelle.Steger ]
      Millston.Rainelle.Quogue:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Osyka.Helton, Millston.Broadwell.Woodfield, Millston.Broadwell.Noyes, Millston.Broadwell.Fairhaven, Millston.Broadwell.Dennison, Millston.Broadwell.Wallula, Millston.Broadwell.Kalida, Millston.Broadwell.Comfrey, Millston.Broadwell.Palmhurst ]
      Millston.Rainelle.Steger:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Osyka.Helton, Millston.Broadwell.Woodfield, Millston.Broadwell.Noyes, Millston.Broadwell.Fairhaven, Millston.Broadwell.Dennison, Millston.Broadwell.Wallula, Millston.Broadwell.Kalida, Millston.Broadwell.Comfrey, Millston.Broadwell.Palmhurst ]
    TH1:
      Millston.Ramos.Ocoee:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Kaluaaha ]
      Millston.Ramos.Exton:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Kaluaaha ]
      Millston.Provencal.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Ocoee, Millston.Ramos.Exton ]
    TH2:
      Millston.Ramos.Hackett:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Kaluaaha ]
      Millston.Provencal.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Hackett ]
    TH3:
      Millston.Hoven.Petrey:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Hoven.Allison:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH4:
      Millston.Hoven.Allison:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH5:
      Millston.Cassa.Garibaldi:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Pawtucket.StarLake ]
      Millston.Pawtucket.StarLake:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Cassa.Garibaldi ]
    TH18:
      Millston.Cassa.Garibaldi:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH19:
      Millston.Provencal.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH20:
      Millston.Provencal.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH21:
      Millston.Provencal.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH22:
      Millston.Provencal.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH23:
      Millston.Provencal.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH24:
      Millston.Wondervu$1.Bowden:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Wondervu$1.Oriskany:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Wondervu$1.Higginson:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH25:
      Millston.GlenAvon.Hackett:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH26:
      Millston.Buckhorn.SoapLake:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH27:
      Millston.Hoven.Petrey:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TW0:
      Millston.GlenAvon.Hoagland:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.GlenAvon.Mabelle:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.GlenAvon.Palatine:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.GlenAvon.Marfa:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.GlenAvon.Quinwood:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TW1:
      Millston.Ramos.Rexville:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood, Millston.Rainelle.Ledoux, Millston.Rainelle.Conner, Millston.Osyka.Chloride ]
      Millston.Ramos.Alameda:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood, Millston.Rainelle.Ledoux, Millston.Rainelle.Conner, Millston.Osyka.Chloride ]
      Millston.Ramos.PineCity:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood, Millston.Rainelle.Ledoux, Millston.Rainelle.Conner, Millston.Osyka.Chloride ]
      Millston.Ramos.Osterdock:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood, Millston.Rainelle.Ledoux, Millston.Rainelle.Conner, Millston.Osyka.Chloride ]
      Millston.Ramos.Fayette:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood, Millston.Rainelle.Ledoux, Millston.Rainelle.Conner, Millston.Osyka.Chloride ]
      Millston.Provencal.Bushland:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Rexville, Millston.Ramos.Alameda, Millston.Ramos.PineCity, Millston.Ramos.Osterdock, Millston.Ramos.Fayette, Millston.Rainelle.Ledoux, Millston.Rainelle.Conner, Millston.Osyka.Chloride ]
      Millston.Provencal.Dassel:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Rexville, Millston.Ramos.Alameda, Millston.Ramos.PineCity, Millston.Ramos.Osterdock, Millston.Ramos.Fayette, Millston.Rainelle.Ledoux, Millston.Rainelle.Conner, Millston.Osyka.Chloride ]
      Millston.Provencal.Norwood:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Rexville, Millston.Ramos.Alameda, Millston.Ramos.PineCity, Millston.Ramos.Osterdock, Millston.Ramos.Fayette, Millston.Rainelle.Ledoux, Millston.Rainelle.Conner, Millston.Osyka.Chloride ]
      Millston.Rainelle.Ledoux:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Rexville, Millston.Ramos.Alameda, Millston.Ramos.PineCity, Millston.Ramos.Osterdock, Millston.Ramos.Fayette, Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood, Millston.Osyka.Chloride ]
      Millston.Rainelle.Conner:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Rexville, Millston.Ramos.Alameda, Millston.Ramos.PineCity, Millston.Ramos.Osterdock, Millston.Ramos.Fayette, Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood, Millston.Osyka.Chloride ]
      Millston.Osyka.Chloride:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Rexville, Millston.Ramos.Alameda, Millston.Ramos.PineCity, Millston.Ramos.Osterdock, Millston.Ramos.Fayette, Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood, Millston.Rainelle.Ledoux, Millston.Rainelle.Conner ]
    TW2:
      Millston.Ramos.Hoagland:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Kaluaaha, Millston.Osyka.Garibaldi ]
      Millston.Ramos.Mabelle:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Kaluaaha, Millston.Osyka.Garibaldi ]
      Millston.Ramos.Palatine:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Kaluaaha, Millston.Osyka.Garibaldi ]
      Millston.Ramos.Marfa:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Kaluaaha, Millston.Osyka.Garibaldi ]
      Millston.Ramos.Quinwood:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Kaluaaha, Millston.Osyka.Garibaldi ]
      Millston.Provencal.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Hoagland, Millston.Ramos.Mabelle, Millston.Ramos.Palatine, Millston.Ramos.Marfa, Millston.Ramos.Quinwood, Millston.Osyka.Garibaldi ]
      Millston.Osyka.Garibaldi:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Hoagland, Millston.Ramos.Mabelle, Millston.Ramos.Palatine, Millston.Ramos.Marfa, Millston.Ramos.Quinwood, Millston.Provencal.Kaluaaha ]
    TW3:
      Millston.Cassa.Helton:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Cassa.Noyes:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Cassa.Cornell:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Cassa.Weinert:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TW12:
      Millston.Belgrade.Ronan:
          mutually_exclusive_with: [  ]
    TW13:
      Millston.Ramos.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Kaluaaha ]
      Millston.Provencal.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Kaluaaha ]
    TW14:
      Millston.Ramos.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Kaluaaha ]
      Millston.Provencal.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Calcasieu ]
    TW15:
      Millston.Cassa.Chloride:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TW16:
      Millston.Provencal.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B0:
      ig_intr_md_for_dprsr.digest_type:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B1:
      ig_intr_md_for_dprsr.mirror_type:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B2:
      HillTop.RossFork.Suttle:
          live_start: parser
          live_end: 9
          mutually_exclusive_with: [  ]
    B3:
      HillTop.RossFork.Boerne:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    B4:
      HillTop.Ovett.Manilla:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    B5:
      HillTop.RossFork.Thayne:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    B6:
      HillTop.RossFork.Redden:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
    B7:
      Millston.Belgrade.Willard:
          live_start: 8
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Belgrade.__pad_4:
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Denhoff:
          live_start: 0
          live_end: 6
          mutually_exclusive_with: [  ]
      HillTop.Aldan.Kearns:
          live_start: parser
          live_end: 0
          mutually_exclusive_with: [  ]
      HillTop.Edwards.Oilmont:
          live_start: 7
          live_end: 8
          mutually_exclusive_with: [  ]
      HillTop.Edwards.Tornillo:
          live_start: 7
          live_end: 8
          mutually_exclusive_with: [  ]
    B8:
      ig_intr_md_for_tm.ingress_cos:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      HillTop.Aldan.Malinta:
          live_start: parser
          live_end: 0
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Naruna:
          live_start: 0
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Brinkman:
          live_start: 2
          live_end: 10
          mutually_exclusive_with: [  ]
      HillTop.Freeny.Dunedin:
          live_start: 7
          live_end: 8
          mutually_exclusive_with: [  ]
    B9:
      Millston.Belgrade.Waipahu:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Allgood:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Shabbona:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Anacortes:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.__pad_1:
          mutually_exclusive_with: [  ]
      HillTop.Naubinway.Ayden:
          live_start: parser
          live_end: 6
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Yaurel:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
      HillTop.Bessie.Peebles:
          live_start: 0
          live_end: 9
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Piqua:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Westhoff:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.RioPecos:
          mutually_exclusive_with: [  ]
    B10:
      HillTop.Savery.Peebles:
          live_start: 2
          live_end: 10
          mutually_exclusive_with: [  ]
      HillTop.Aldan.Mystic:
          live_start: parser
          live_end: 0
          mutually_exclusive_with: [  ]
    B11:
      Millston.Belgrade.Rockport:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Union:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.__pad_0:
          mutually_exclusive_with: [  ]
      HillTop.Quinault.Foster:
          live_start: parser
          live_end: 8
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Powderly:
          live_start: parser
          live_end: 8
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Onycha:
          live_start: 0
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Dyess:
          mutually_exclusive_with: [  ]
    B12:
      Millston.Wondervu.$stkvalid:
          mutually_exclusive_with: [  ]
      HillTop.RossFork.ElVerano:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Alamosa:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.Komatke.Monahans:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Weyauwega:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Charco:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Daphne:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      Millston.Wondervu$0.$valid:
          live_start: 7
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Wondervu$1.$valid:
          mutually_exclusive_with: [  ]
    B13:
      ig_intr_md_for_tm.qid:
          live_start: 7
          live_end: deparser
          mutually_exclusive_with: [  ]
      HillTop.Aldan.Parkville:
          live_start: parser
          live_end: 1
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Naruna:
          live_start: 0
          live_end: 11
          mutually_exclusive_with: [  ]
    B14:
      HillTop.Aldan.Mystic:
          live_start: parser
          live_end: 0
          mutually_exclusive_with: [  ]
      HillTop.Minturn.Tilton:
          live_start: 10
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.Edwards.McGrady:
          live_start: 0
          live_end: 7
          mutually_exclusive_with: [  ]
      HillTop.Edwards.AquaPark:
          live_start: 0
          live_end: 8
          mutually_exclusive_with: [  ]
    B15:
      ig_intr_md_for_dprsr.drop_ctl:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      HillTop.Murphy.Standish:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Level:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Lowes:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Chugwater:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Delavan:
          live_start: parser
          live_end: 6
          mutually_exclusive_with: [  ]
    B32:
      Millston.Osyka.Noyes:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Hoven.Roosville ]
      Millston.Hoven.Roosville:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Osyka.Noyes ]
    B33:
      Millston.Maumee.Dassel:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Ocoee ]
      Millston.GlenAvon.Ocoee:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Dassel ]
    B34:
      Millston.Belgrade.Freeburg:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.__pad_2:
          mutually_exclusive_with: [  ]
      HillTop.Lamona.Pachuta:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    B35:
      Millston.Maumee.Norwood:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Shirley.Goldsboro ]
      Millston.Shirley.Goldsboro:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Norwood ]
    B36:
      Millston.Belgrade.Mankato:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Blencoe:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    B37:
      Millston.Shirley.Fabens:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Norwood ]
      Millston.Maumee.Norwood:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Shirley.Fabens ]
    B38:
      HillTop.Plains.Roachdale:
          live_start: 8
          live_end: deparser
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Teigen:
          live_start: parser
          live_end: 1
          mutually_exclusive_with: [  ]
    B39:
      Millston.Provencal.Maryhill:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B40:
      HillTop.RossFork.Kremlin:
          live_start: parser
          live_end: 1
          mutually_exclusive_with: [  ]
      HillTop.Savery.Noyes:
          live_start: 2
          live_end: 10
          mutually_exclusive_with: [  ]
    B41:
      HillTop.Bessie.Noyes:
          live_start: parser
          live_end: 9
          mutually_exclusive_with: [  ]
    B42:
      HillTop.Aldan.Vinemont:
          live_start: parser
          live_end: 0
          mutually_exclusive_with: [  ]
      HillTop.Savery.LasVegas:
          live_start: 2
          live_end: 10
          mutually_exclusive_with: [  ]
    B43:
      HillTop.Bessie.LasVegas:
          live_start: parser
          live_end: 9
          mutually_exclusive_with: [  ]
    B44:
      HillTop.RossFork.Ocoee:
          live_start: 0
          live_end: 10
          mutually_exclusive_with: [  ]
    B45:
      HillTop.RossFork.Ankeny:
          live_start: 0
          live_end: 9
          mutually_exclusive_with: [  ]
    B47:
      Millston.Hayfield.Vichy:
          live_start: parser
          live_end: 7
          mutually_exclusive_with: [  ]
      Millston.Hayfield.AquaPark:
          live_start: parser
          live_end: 7
          mutually_exclusive_with: [  ]
    B48:
      Millston.Wondervu$0.McCaulley:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B49:
      Millston.Wondervu$1.McCaulley:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B50:
      Millston.Calabash.McCaulley:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B51:
      Millston.Wondervu$0.McCaulley:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B52:
      Millston.Wondervu$1.McCaulley:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B53:
      Millston.Calabash.McCaulley:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B54:
      Millston.Belgrade.$valid:
          live_start: 8
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Hayfield.$valid:
          live_start: parser
          live_end: 7
          mutually_exclusive_with: [  ]
      Millston.Calabash.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Rainelle.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.GlenAvon.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Ramos.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Bergton.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Pawtucket.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B55:
      HillTop.RossFork.Lafayette:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B56:
      HillTop.RossFork.McCaulley:
          live_start: parser
          live_end: 7
          mutually_exclusive_with: [  ]
      HillTop.Edwards.Pajaros:
          live_start: 10
          live_end: 11
          mutually_exclusive_with: [  ]
    B57:
      HillTop.RossFork.McCaulley:
          live_start: parser
          live_end: 7
          mutually_exclusive_with: [  ]
    B58:
      HillTop.Aldan.Kenbridge:
          live_start: parser
          live_end: 0
          mutually_exclusive_with: [  ]
      HillTop.Savery.Exton:
          live_start: 2
          live_end: 10
          mutually_exclusive_with: [  ]
    B59:
      HillTop.RossFork.Exton:
          live_start: parser
          live_end: 7
          mutually_exclusive_with: [  ]
    B60:
      HillTop.Bessie.Exton:
          live_start: parser
          live_end: 9
          mutually_exclusive_with: [  ]
    H0:
      Millston.Wondervu$0.Bowden:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Wondervu$0.Oriskany:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Wondervu$0.Higginson:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H1:
      HillTop.Lamona.Traverse:
          live_start: parser
          live_end: 0
          mutually_exclusive_with: [  ]
      HillTop.Komatke.Townville:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
    H2:
      Millston.Belgrade.Requa:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.__pad_7:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Nenana:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
    H3:
      Millston.Belgrade.Florien:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.__pad_9:
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Bradner:
          live_start: parser
          live_end: 9
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Caroleen:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Bicknell:
          live_start: parser
          live_end: 6
          mutually_exclusive_with: [  ]
    H4:
      Millston.Belgrade.Bayshore:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.__pad_8:
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Ravena:
          live_start: parser
          live_end: 9
          mutually_exclusive_with: [  ]
      HillTop.Ovett.Hematite:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
      HillTop.RossFork.CeeVee:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H5:
      ig_intr_md_for_tm.rid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      HillTop.Komatke.Townville:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Crozet:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    H6:
      Millston.Belgrade.Cacao:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Davie:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Rugby:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Roachdale:
          mutually_exclusive_with: [  ]
      HillTop.Edwards.Oriskany:
          mutually_exclusive_with: [  ]
      HillTop.Edwards.RedElm:
          live_start: parser
          live_end: 7
          mutually_exclusive_with: [  ]
    H7:
      ig_intr_md_for_tm.mcast_grp_a:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H8:
      HillTop.Moose.Townville:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
      ig_intr_md_for_tm.level1_exclusion_id:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      HillTop.Bessie.Chavies:
          live_start: parser
          live_end: 7
          mutually_exclusive_with: [  ]
    H9:
      HillTop.RossFork.Chevak:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
    H10:
      Millston.Grays.Chevak:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H11:
      HillTop.RossFork.Glenmora:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    H12:
      HillTop.Bessie.Chevak:
          live_start: 0
          live_end: 9
          mutually_exclusive_with: [  ]
    H13:
      HillTop.Savery.Chevak:
          live_start: 2
          live_end: 10
          mutually_exclusive_with: [  ]
    H14:
      HillTop.RossFork.Chaffee:
          live_start: parser
          live_end: 9
          mutually_exclusive_with: [  ]
      HillTop.Ovett.Hammond:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Almedia:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.Moose.Monahans:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Belfair:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    H15:
      HillTop.Salix.Hueytown:
          live_start: parser
          live_end: 8
          mutually_exclusive_with: [  ]
    H32:
      HillTop.RossFork.Mendocino:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
    H33:
      Millston.Grays.Mendocino:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H34:
      HillTop.Minturn.Whitewood:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Joslin:
          live_start: parser
          live_end: 7
          mutually_exclusive_with: [  ]
      HillTop.Minturn.Grassflat:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H35:
      Millston.Provencal.Maryhill:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Rainelle.Findlay ]
      Millston.Provencal.Alameda:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Rainelle.Findlay ]
      Millston.Provencal.PineCity:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Rainelle.Findlay ]
      Millston.Rainelle.Findlay:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Maryhill, Millston.Provencal.Alameda, Millston.Provencal.PineCity ]
    H36:
      Millston.Calabash.Goldsboro:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H37:
      HillTop.RossFork.Goldsboro:
          live_start: 0
          live_end: deparser
          mutually_exclusive_with: [  ]
    H38:
      Millston.GlenAvon.Rexville:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Maryhill ]
      Millston.Maumee.Maryhill:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Rexville ]
    H39:
      Millston.Shirley.Connell:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H40:
      HillTop.RossFork.DonaAna:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    H41:
      HillTop.RossFork.Merrill:
          live_start: parser
          live_end: 9
          mutually_exclusive_with: [  ]
    H42:
      HillTop.RossFork.Hickox:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    H43:
      HillTop.RossFork.Tehachapi:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    H44:
      HillTop.Bessie.Mendocino:
          live_start: parser
          live_end: 9
          mutually_exclusive_with: [  ]
    H45:
      HillTop.Savery.Mendocino:
          live_start: 2
          live_end: 10
          mutually_exclusive_with: [  ]
    H46:
      HillTop.Bessie.Calcasieu:
          live_start: parser
          live_end: 9
          mutually_exclusive_with: [  ]
    H47:
      HillTop.Savery.Calcasieu:
          live_start: 2
          live_end: 10
          mutually_exclusive_with: [  ]
    H48:
      HillTop.Bessie.Kaluaaha:
          live_start: parser
          live_end: 9
          mutually_exclusive_with: [  ]
      HillTop.Aldan.Poulan:
          live_start: parser
          live_end: 0
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Chaska:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.__pad_6:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Miller:
          mutually_exclusive_with: [  ]
    H49:
      HillTop.Savery.Kaluaaha:
          live_start: 2
          live_end: 10
          mutually_exclusive_with: [  ]
    H50:
      ig_intr_md_for_tm.level2_mcast_hash:
          live_start: 8
          live_end: deparser
          mutually_exclusive_with: [  ]
      HillTop.Aldan.Kearns:
          live_start: parser
          live_end: 0
          mutually_exclusive_with: [  ]
    H51:
      Millston.Belgrade.Corinth:
          mutually_exclusive_with: [  ]
      HillTop.Lewiston.Staunton:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    H52:
      ig_intr_md_for_tm.copy_to_cpu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H53:
      HillTop.Tiburon.Arnold:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    H54:
      Millston.Calabash.Connell:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H55:
      HillTop.RossFork.Connell:
          live_start: 0
          live_end: 6
          mutually_exclusive_with: [  ]
    H56:
      HillTop.Cutten.Tombstone:
          live_start: 3
          live_end: 6
          mutually_exclusive_with: [  ]
      HillTop.Moose.Pinole:
          live_start: 6
          live_end: 10
          mutually_exclusive_with: [  ]
      HillTop.Aldan.Malinta:
          live_start: parser
          live_end: 0
          mutually_exclusive_with: [  ]
    H57:
      HillTop.Cutten.Pittsboro:
          live_start: 3
          live_end: 6
          mutually_exclusive_with: [  ]
      HillTop.Plains.Miller:
          live_start: 8
          live_end: deparser
          mutually_exclusive_with: [  ]
    H58:
      HillTop.Cutten.Subiaco:
          live_start: 2
          live_end: 6
          mutually_exclusive_with: [  ]
    H59:
      HillTop.Cutten.Pathfork:
          live_start: 2
          live_end: 6
          mutually_exclusive_with: [  ]
    H60:
      HillTop.Cutten.Marcus:
          live_start: parser
          live_end: 6
          mutually_exclusive_with: [  ]
    H61:
      HillTop.Lewiston.Lugert:
          live_start: parser
          live_end: 6
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Altus:
          live_start: parser
          live_end: 1
          mutually_exclusive_with: [  ]
    H62:
      HillTop.Komatke.Pinole:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Parkland:
          live_start: 2
          live_end: 8
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Denhoff:
          live_start: 0
          live_end: 6
          mutually_exclusive_with: [  ]
      HillTop.Bessie.Miranda:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Hulbert:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    H63:
      HillTop.Aldan.Blakeley:
          live_start: parser
          live_end: 1
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Florin:
          live_start: 2
          live_end: deparser
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Connell:
          live_start: parser
          live_end: 8
          mutually_exclusive_with: [  ]
    H64:
      HillTop.Naubinway.Sardinia:
          live_start: parser
          live_end: 6
          mutually_exclusive_with: [ HillTop.Naubinway.Bonduel ]
      HillTop.Naubinway.Bonduel:
          live_start: parser
          live_end: 7
          mutually_exclusive_with: [ HillTop.Naubinway.Sardinia ]
      HillTop.Murphy.Blairsden:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    H65:
      HillTop.RossFork.Luzerne:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
      HillTop.RossFork.TroutRun:
          live_start: parser
          live_end: 9
          mutually_exclusive_with: [  ]
    H66:
      HillTop.RossFork.Devers:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Tenino:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Pridgen:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    H83:
      HillTop.Maddock.PineCity:
          live_start: parser
          live_end: 3
          mutually_exclusive_with: [  ]
    H84:
      HillTop.Sublett.PineCity:
          live_start: parser
          live_end: 3
          mutually_exclusive_with: [  ]
    H85:
      HillTop.Savery.PineCity:
          live_start: 2
          live_end: 10
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Welcome:
          live_start: parser
          live_end: 1
          mutually_exclusive_with: [  ]
    H86:
      HillTop.Edwards.LaConner:
          live_start: 0
          live_end: 3
          mutually_exclusive_with: [  ]
    H89:
      Millston.GlenAvon.Alameda:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Maryhill, Millston.Maumee.Alameda, Millston.Maumee.PineCity, Millston.Maumee.Fayette ]
      Millston.GlenAvon.PineCity:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Maryhill, Millston.Maumee.Alameda, Millston.Maumee.PineCity, Millston.Maumee.Fayette ]
      Millston.GlenAvon.Osterdock:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Maryhill, Millston.Maumee.Alameda, Millston.Maumee.PineCity, Millston.Maumee.Fayette ]
      Millston.GlenAvon.Fayette:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Maryhill, Millston.Maumee.Alameda, Millston.Maumee.PineCity, Millston.Maumee.Fayette ]
      Millston.Maumee.Maryhill:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Alameda, Millston.GlenAvon.PineCity, Millston.GlenAvon.Osterdock, Millston.GlenAvon.Fayette ]
      Millston.Maumee.Alameda:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Alameda, Millston.GlenAvon.PineCity, Millston.GlenAvon.Osterdock, Millston.GlenAvon.Fayette ]
      Millston.Maumee.PineCity:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Alameda, Millston.GlenAvon.PineCity, Millston.GlenAvon.Osterdock, Millston.GlenAvon.Fayette ]
      Millston.Maumee.Fayette:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Alameda, Millston.GlenAvon.PineCity, Millston.GlenAvon.Osterdock, Millston.GlenAvon.Fayette ]
    H90:
      Millston.Belgrade.Matheson:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.__pad_5:
          mutually_exclusive_with: [  ]
      HillTop.Bessie.PineCity:
          live_start: parser
          live_end: 9
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Sewaren:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
      HillTop.RossFork.WindGap:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Lordstown:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
      HillTop.Edwards.PineCity:
          live_start: parser
          live_end: 7
          mutually_exclusive_with: [  ]
    H92:
      Millston.Shirley.Goldsboro:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H93:
      Millston.Shirley.Fabens:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H94:
      Millston.Shirley.McCaulley:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H95:
      Millston.Buckhorn.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Cassa.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Provencal.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Grays.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Gotham.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Brookneal.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Osyka.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Hoven.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Shirley.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Broadwell.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Maumee.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Juniata:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
    W0:
      HillTop.Lamona.Whitefish:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Adona:
          live_start: 0
          live_end: 6
          mutually_exclusive_with: [  ]
    W1:
      Millston.Belgrade.Selawik:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Sudbury:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.__pad_3:
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Halaula:
          live_start: parser
          live_end: 6
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Brinklow:
          live_start: parser
          live_end: 9
          mutually_exclusive_with: [  ]
      HillTop.Edwards.Satolah:
          live_start: parser
          live_end: 7
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Beaverdam:
          live_start: parser
          live_end: 8
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Knierim:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Dolores:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Waubun:
          mutually_exclusive_with: [  ]
    W2:
      ig_intr_md_for_tm.ucast_egress_port:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W3:
      HillTop.Wisdom.Morstein:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.Sublett.Kaluaaha:
          live_start: parser
          live_end: 1
          mutually_exclusive_with: [  ]
    W4:
      HillTop.RossFork.Quebrada:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W5:
      HillTop.Mausdale.Kenney:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    W6:
      Millston.Calabash.Fabens:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Calabash.Goldsboro:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W7:
      HillTop.RossFork.Fabens:
          live_start: 0
          live_end: deparser
          mutually_exclusive_with: [  ]
    W8:
      HillTop.RossFork.Goldsboro:
          live_start: 0
          live_end: deparser
          mutually_exclusive_with: [  ]
    W9:
      ig_intr_md_for_tm.level2_exclusion_id:
          live_start: 8
          live_end: deparser
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Uvalde:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    W10:
      HillTop.RossFork.Kapalua:
          live_start: parser
          live_end: 7
          mutually_exclusive_with: [  ]
    W11:
      HillTop.Wisdom.Havana:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Algoa:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.Bessie.Heuvelton:
          live_start: parser
          live_end: 7
          mutually_exclusive_with: [  ]
    W12:
      Millston.Calabash.Connell:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Calabash.Adona:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W13:
      Millston.Belgrade.Florin:
          live_start: 2
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Virgil:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Adona:
          live_start: parser
          live_end: 8
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Connell:
          live_start: parser
          live_end: 8
          mutually_exclusive_with: [  ]
    W14:
      HillTop.RossFork.Connell:
          live_start: 0
          live_end: 6
          mutually_exclusive_with: [  ]
      HillTop.Lamona.Fristoe:
          live_start: parser
          live_end: 7
          mutually_exclusive_with: [  ]
    W15:
      Millston.Maumee.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Shirley.Connell, Millston.Shirley.Adona ]
      Millston.Shirley.Connell:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Kaluaaha ]
      Millston.Shirley.Adona:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Kaluaaha ]
    W32:
      Millston.Maumee.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Kaluaaha ]
      Millston.GlenAvon.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Calcasieu ]
    W33:
      Millston.GlenAvon.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Kaluaaha ]
      Millston.Maumee.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Calcasieu ]
    W34:
      Millston.Maumee.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W35:
      Millston.Maumee.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W36:
      HillTop.Sublett.Calcasieu:
          live_start: parser
          live_end: 6
          mutually_exclusive_with: [ HillTop.Maddock.Calcasieu ]
      HillTop.Maddock.Calcasieu:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [ HillTop.Sublett.Calcasieu ]
    W37:
      HillTop.Maddock.Kaluaaha:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [ HillTop.Sublett.Kaluaaha ]
      HillTop.Sublett.Kaluaaha:
          live_start: parser
          live_end: 1
          mutually_exclusive_with: [ HillTop.Maddock.Kaluaaha ]
    W38:
      HillTop.RossFork.Laxon:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    W39:
      HillTop.Sublett.Kaluaaha:
          live_start: parser
          live_end: 1
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Montross:
          live_start: 6
          live_end: 9
          mutually_exclusive_with: [  ]
    W40:
      HillTop.Sublett.Kaluaaha:
          live_start: parser
          live_end: 1
          mutually_exclusive_with: [  ]
    W41:
      Millston.Maumee.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W42:
      Millston.Maumee.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W43:
      Millston.Maumee.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W44:
      HillTop.Sublett.Calcasieu:
          live_start: parser
          live_end: 6
          mutually_exclusive_with: [  ]
    W45:
      HillTop.Sublett.Calcasieu:
          live_start: parser
          live_end: 6
          mutually_exclusive_with: [  ]
    W46:
      HillTop.Sublett.Calcasieu:
          live_start: parser
          live_end: 6
          mutually_exclusive_with: [  ]
    W47:
      Millston.Bergton.Mendocino:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Bergton.Chevak:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W48:
      Millston.Hayfield.Grabill:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
      Millston.Hayfield.Glassboro:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
      Millston.Hayfield.Avondale:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
      Millston.Hayfield.Blitchton:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    W49:
      HillTop.RossFork.Everton:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W50:
      Millston.Brookneal.SoapLake:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W51:
      HillTop.RossFork.Bucktown:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
phv egress:
  eg_intr_md.egress_port: H16(0..8)
  eg_intr_md.egress_rid: W27(0..15)
  eg_intr_md.egress_qid: W31(0..4)
  HillTop.Sonoma.Iberia: H17
  HillTop.Wisdom.Adona.0-7: B21
  HillTop.Wisdom.Adona.8-23: H91
  HillTop.Wisdom.Connell.0-7: B30
  HillTop.Wisdom.Connell.8-23: H67
  HillTop.Wisdom.Dyess: W29(0)
  HillTop.Wisdom.Westhoff: W28(1..3)
  HillTop.Wisdom.Nenana: H21(0..11)
  HillTop.Wisdom.Waubun: W30(2..7)
  HillTop.Wisdom.Bowden: H23(0..11)
  HillTop.Wisdom.Onycha: W29(1..3)
  HillTop.Wisdom.Blencoe: B27
  HillTop.Wisdom.Bennet.0-15: TW23(0..15)
  HillTop.Wisdom.Bennet.16-23: W25(0..7)
  HillTop.Wisdom.Bennet.24-31: TB10
  HillTop.Wisdom.Jenners: H23(14..15)
  HillTop.Wisdom.Miller.0-7: W24(8..15)
  HillTop.Wisdom.Miller.8-8: B25(0)
  HillTop.Wisdom.Toklat: H23(12..13)
  HillTop.Wisdom.Piqua: W28(4)
  HillTop.Wisdom.Stratford: B63(0)
  HillTop.Wisdom.RioPecos: W28(0)
  HillTop.Wisdom.Weatherby: B19(5)
  HillTop.Wisdom.Lathrop: B20(3)
  HillTop.Wisdom.DeGraff: B20(4..5)
  HillTop.Wisdom.Dolores: W30(0..1)
  Millston.Belgrade.Rugby: H20(5..7)
  Millston.Belgrade.Davie: H20(4)
  Millston.Belgrade.Mankato: B27
  Millston.Belgrade.Virgil.0-7: B21
  Millston.Belgrade.Virgil.8-23: H91
  Millston.Belgrade.Florin.0-7: B30
  Millston.Belgrade.Florin.8-23: H67
  Millston.Belgrade.Ronan.0-15: TW23(0..15)
  Millston.Belgrade.Ronan.16-23: W25(0..7)
  Millston.Belgrade.Ronan.24-31: TB10
  Millston.Belgrade.Corinth: W26(0..15)
  Millston.Belgrade.Union: W29(1..3)
  Millston.Belgrade.Rockport: W29(0)
  Millston.Belgrade.Anacortes: W28(5)
  Millston.Belgrade.Shabbona: W28(4)
  Millston.Belgrade.Allgood: W28(1..3)
  Millston.Belgrade.Waipahu: W28(0)
  Millston.Belgrade.Freeburg: B61(0)
  Millston.Belgrade.Sudbury: W30(2..7)
  Millston.Belgrade.Selawik: W30(0..1)
  Millston.Belgrade.Willard: B62(0..2)
  Millston.Belgrade.Matheson: H80(0..5)
  Millston.Belgrade.Chaska.0-7: W24(8..15)
  Millston.Belgrade.Chaska.8-8: B25(0)
  Millston.Belgrade.Requa: H21(0..11)
  Millston.Belgrade.Bayshore: H29(0..11)
  Millston.Belgrade.Florien: H27(0..11)
  Millston.Calabash.Adona.0-7: B22
  Millston.Calabash.Adona.8-23: H87
  Millston.Calabash.Connell.0-7: B31
  Millston.Calabash.Connell.8-23: H68
  Millston.Calabash.Goldsboro.0-15: H73
  Millston.Calabash.Goldsboro.16-23: B29
  Millston.Calabash.Fabens.0-15: H26
  Millston.Calabash.Fabens.16-23: B24
  Millston.Calabash.McCaulley: H25
  Millston.Wondervu$0.Higginson: H22(13..15)
  Millston.Wondervu$0.Oriskany: H22(12)
  Millston.Wondervu$0.Bowden: H22(0..11)
  Millston.Wondervu$0.McCaulley: H24
  Millston.Wondervu$1.Higginson: TW5(29..31)
  Millston.Wondervu$1.Oriskany: TW5(28)
  Millston.Wondervu$1.Bowden: TW5(16..27)
  Millston.Wondervu$1.McCaulley: TW5(0..15)
  Millston.Rainelle.Conner: TW6(16..31)
  Millston.Rainelle.Ledoux: TW6(0..15)
  Millston.Rainelle.Steger: TW4(24..31)
  Millston.Rainelle.Quogue: TW4(16..23)
  Millston.Rainelle.Findlay: TW4(0..15)
  Millston.GlenAvon.Fayette: H81(12..15)
  Millston.GlenAvon.Osterdock: H81(8..11)
  Millston.GlenAvon.PineCity: H81(2..7)
  Millston.GlenAvon.Alameda: H81(0..1)
  Millston.GlenAvon.Rexville: H18
  Millston.GlenAvon.Quinwood: W16(16..31)
  Millston.GlenAvon.Marfa: W16(15)
  Millston.GlenAvon.Palatine: W16(14)
  Millston.GlenAvon.Mabelle: W16(13)
  Millston.GlenAvon.Hoagland: W16(0..12)
  Millston.GlenAvon.Exton: B16
  Millston.GlenAvon.Ocoee: B23
  Millston.GlenAvon.Hackett.0-7: TB11
  Millston.GlenAvon.Hackett.8-15: TB20
  Millston.GlenAvon.Kaluaaha: W17
  Millston.GlenAvon.Calcasieu: W18
  Millston.Ramos.Fayette: H82(12..15)
  Millston.Ramos.Osterdock: H82(8..11)
  Millston.Ramos.PineCity: H82(2..7)
  Millston.Ramos.Alameda: H82(0..1)
  Millston.Ramos.Rexville: TH15
  Millston.Ramos.Quinwood: TW4(16..31)
  Millston.Ramos.Marfa: TW4(15)
  Millston.Ramos.Palatine: TW4(14)
  Millston.Ramos.Mabelle: TW4(13)
  Millston.Ramos.Hoagland: TW4(0..12)
  Millston.Ramos.Exton: TH6(8..15)
  Millston.Ramos.Ocoee: TH6(0..7)
  Millston.Ramos.Hackett.0-7: TB6
  Millston.Ramos.Hackett.8-15: TB7
  Millston.Ramos.Kaluaaha: TW10
  Millston.Ramos.Calcasieu: TW11
  Millston.Bergton.Chevak: TH8
  Millston.Bergton.Mendocino: TH7
  Millston.Pawtucket.StarLake: TH11
  Millston.Buckhorn.SoapLake: TH31
  Millston.Cassa.Chloride.0-15: TH11
  Millston.Cassa.Chloride.16-31: TH12
  Millston.Cassa.Garibaldi.0-15: TH13
  Millston.Cassa.Garibaldi.16-31: TH14
  Millston.Cassa.Weinert: TW6(28..31)
  Millston.Cassa.Cornell: TW6(24..27)
  Millston.Cassa.Noyes: TW6(16..23)
  Millston.Cassa.Helton: TW6(0..15)
  Millston.Provencal.Fayette: H82(12..15)
  Millston.Provencal.PineCity: H82(6..11)
  Millston.Provencal.Alameda: H82(4..5)
  Millston.Provencal.Maryhill.0-15: TH30
  Millston.Provencal.Maryhill.16-19: H82(0..3)
  Millston.Provencal.Norwood: TW4(16..31)
  Millston.Provencal.Dassel: TW4(8..15)
  Millston.Provencal.Bushland: TW4(0..7)
  Millston.Provencal.Kaluaaha.0-31: TW10
  Millston.Provencal.Kaluaaha.32-63: TW11
  Millston.Provencal.Kaluaaha.64-71: TB6
  Millston.Provencal.Kaluaaha.72-79: TB7
  Millston.Provencal.Kaluaaha.80-95: TH6
  Millston.Provencal.Kaluaaha.96-111: TH15
  Millston.Provencal.Kaluaaha.112-127: TH16
  Millston.Provencal.Calcasieu.0-7: TB8
  Millston.Provencal.Calcasieu.8-15: TB9
  Millston.Provencal.Calcasieu.16-31: TH17
  Millston.Provencal.Calcasieu.32-63: TW20
  Millston.Provencal.Calcasieu.64-95: TW21
  Millston.Provencal.Calcasieu.96-127: TW22
  Millston.Grays.Chevak: H70
  Millston.Grays.Mendocino: H69
  Millston.Gotham.StarLake: TH32
  Millston.Brookneal.SoapLake: TH33
  Millston.Hoven.Noyes: TW7(24..31)
  Millston.Hoven.Allison: TW7(0..23)
  Millston.Hoven.Petrey.0-7: TH9(8..15)
  Millston.Hoven.Petrey.8-23: TH10
  Millston.Hoven.Roosville: TH9(0..7)
  Millston.Shirley.Adona.0-7: TB4
  Millston.Shirley.Adona.8-23: TH34
  Millston.Shirley.Connell: TW8(8..31)
  Millston.Shirley.Goldsboro.0-15: TH35
  Millston.Shirley.Goldsboro.16-23: TW8(0..7)
  Millston.Shirley.Fabens: TW9(8..31)
  Millston.Shirley.McCaulley.0-7: TB5
  Millston.Shirley.McCaulley.8-15: TW9(0..7)
  Millston.Osyka.Chloride: TW4
  Millston.Osyka.Garibaldi: TW6
  Millston.Osyka.Weinert: TB4(4..7)
  Millston.Osyka.Cornell: TB4(0..3)
  Millston.Osyka.Noyes: B46
  Millston.Osyka.Helton.0-7: TB5
  Millston.Osyka.Helton.8-15: TB6
  Millston.Broadwell.Palmhurst: TB5(7)
  Millston.Broadwell.Comfrey: TB5(6)
  Millston.Broadwell.Kalida: TB5(5)
  Millston.Broadwell.Wallula: TB5(4)
  Millston.Broadwell.Dennison: TB5(3)
  Millston.Broadwell.Fairhaven: TB5(0..2)
  Millston.Broadwell.Noyes: TB4(3..7)
  Millston.Broadwell.Woodfield: TB4(0..2)
  Millston.Broadwell.LasVegas: H69
  Millston.Maumee.Fayette: H81(12..15)
  Millston.Maumee.PineCity: H81(6..11)
  Millston.Maumee.Alameda: H81(4..5)
  Millston.Maumee.Maryhill.0-15: TW7(16..31)
  Millston.Maumee.Maryhill.16-19: H81(0..3)
  Millston.Maumee.Norwood: TW7(0..15)
  Millston.Maumee.Dassel: B23
  Millston.Maumee.Bushland: B16
  Millston.Maumee.Kaluaaha.0-31: W16
  Millston.Maumee.Kaluaaha.32-63: W17
  Millston.Maumee.Kaluaaha.64-95: W18
  Millston.Maumee.Kaluaaha.96-111: H18
  Millston.Maumee.Kaluaaha.112-127: H71
  Millston.Maumee.Calcasieu.0-31: W19
  Millston.Maumee.Calcasieu.32-63: W20
  Millston.Maumee.Calcasieu.64-95: W21
  Millston.Maumee.Calcasieu.96-127: W22
  HillTop.Freeny.Dunedin: B62(0..2)
  HillTop.Edwards.RedElm: H20(5..7)
  HillTop.Edwards.Oriskany: H20(4)
  HillTop.Edwards.PineCity: H80(0..5)
  HillTop.Edwards.Renick: H88(0..5)
  HillTop.Edwards.SomesBar: B62(0)
  HillTop.McCaskill.Grassflat: H19(0..9)
  HillTop.McCaskill.Whitewood: H19(0..9)
  HillTop.McCaskill.Tilton: B19(2..3)
  HillTop.McGonigle.Buncombe: B18
  HillTop.Lamona.Pachuta: B61(0)
  Millston.Hayfield.Blitchton: H72(10..15)
  Millston.Hayfield.Avondale: H72(0..9)
  Millston.Hayfield.Glassboro: H31(12..15)
  Millston.Hayfield.Grabill: H31(0..11)
  Millston.Hayfield.Moorcroft: H30(14..15)
  Millston.Hayfield.Toklat: H30(12..13)
  Millston.Hayfield.Bledsoe: H30(0..11)
  Millston.Hayfield.Blencoe: B28
  Millston.Hayfield.AquaPark: B26(6..7)
  Millston.Hayfield.Vichy: B26(3..5)
  Millston.Hayfield.Lathrop: B26(2)
  Millston.Hayfield.Clyde: B26(1)
  Millston.Hayfield.Clarion: B26(0)
  Millston.Hayfield.Aguilita: H28(12..15)
  Millston.Hayfield.Harbor: H28(0..11)
  HillTop.Lewiston.Staunton: W26(0..15)
  eg_intr_md_for_dprsr.drop_ctl: B20(0..2)
  eg_intr_md_for_dprsr.mirror_type: B17(0..2)
  HillTop.RossFork.CeeVee: H29(0..11)
  HillTop.RossFork.Bicknell: H27(0..11)
  HillTop.Bessie.Peebles: W28(5)
  HillTop.Stennett.Standish: B19(4)
  HillTop.Stennett.Blairsden: H74(11)
  HillTop.Plains.Roachdale: B25
  HillTop.Plains.Miller: H17(0..8)
  Millston.Belgrade.$valid: W23(0)
  Millston.Calabash.$valid: W23(1)
  Millston.Rainelle.$valid: W23(2)
  Millston.GlenAvon.$valid: W23(3)
  Millston.Ramos.$valid: W23(4)
  Millston.Bergton.$valid: W23(5)
  Millston.Pawtucket.$valid: W23(6)
  Millston.Buckhorn.$valid: W23(7)
  Millston.Cassa.$valid: H74(0)
  Millston.Provencal.$valid: H74(1)
  Millston.Grays.$valid: H74(2)
  Millston.Gotham.$valid: H74(3)
  Millston.Brookneal.$valid: H74(4)
  Millston.Hoven.$valid: H74(6)
  Millston.Shirley.$valid: H74(7)
  Millston.Osyka.$valid: H74(5)
  Millston.Broadwell.$valid: H74(8)
  Millston.Maumee.$valid: H74(9)
  Millston.Hayfield.$valid: H74(10)
  Millston.Wondervu.$stkvalid: B19(0..1)
  Millston.Wondervu$0.$valid: B19(1)
  Millston.Wondervu$1.$valid: B19(0)
  context_json:
    TB4:
      Millston.Shirley.Adona:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Broadwell.Woodfield, Millston.Broadwell.Noyes, Millston.Osyka.Cornell, Millston.Osyka.Weinert ]
      Millston.Broadwell.Woodfield:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Shirley.Adona, Millston.Osyka.Cornell, Millston.Osyka.Weinert ]
      Millston.Broadwell.Noyes:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Shirley.Adona, Millston.Osyka.Cornell, Millston.Osyka.Weinert ]
      Millston.Osyka.Cornell:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Shirley.Adona, Millston.Broadwell.Woodfield, Millston.Broadwell.Noyes ]
      Millston.Osyka.Weinert:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Shirley.Adona, Millston.Broadwell.Woodfield, Millston.Broadwell.Noyes ]
    TB5:
      Millston.Shirley.McCaulley:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Broadwell.Fairhaven, Millston.Broadwell.Dennison, Millston.Broadwell.Wallula, Millston.Broadwell.Kalida, Millston.Broadwell.Comfrey, Millston.Broadwell.Palmhurst, Millston.Osyka.Helton ]
      Millston.Broadwell.Fairhaven:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Shirley.McCaulley, Millston.Osyka.Helton ]
      Millston.Broadwell.Dennison:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Shirley.McCaulley, Millston.Osyka.Helton ]
      Millston.Broadwell.Wallula:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Shirley.McCaulley, Millston.Osyka.Helton ]
      Millston.Broadwell.Kalida:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Shirley.McCaulley, Millston.Osyka.Helton ]
      Millston.Broadwell.Comfrey:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Shirley.McCaulley, Millston.Osyka.Helton ]
      Millston.Broadwell.Palmhurst:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Shirley.McCaulley, Millston.Osyka.Helton ]
      Millston.Osyka.Helton:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Shirley.McCaulley, Millston.Broadwell.Fairhaven, Millston.Broadwell.Dennison, Millston.Broadwell.Wallula, Millston.Broadwell.Kalida, Millston.Broadwell.Comfrey, Millston.Broadwell.Palmhurst ]
    TB6:
      Millston.Osyka.Helton:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Hackett, Millston.Provencal.Kaluaaha ]
      Millston.Ramos.Hackett:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Osyka.Helton, Millston.Provencal.Kaluaaha ]
      Millston.Provencal.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Osyka.Helton, Millston.Ramos.Hackett ]
    TB7:
      Millston.Ramos.Hackett:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Kaluaaha ]
      Millston.Provencal.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Hackett ]
    TB8:
      Millston.Provencal.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TB9:
      Millston.Provencal.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TB10:
      Millston.Belgrade.Ronan:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Bennet:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TB11:
      Millston.GlenAvon.Hackett:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TB20:
      Millston.GlenAvon.Hackett:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH6:
      Millston.Ramos.Ocoee:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Kaluaaha ]
      Millston.Ramos.Exton:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Kaluaaha ]
      Millston.Provencal.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Ocoee, Millston.Ramos.Exton ]
    TH7:
      Millston.Bergton.Mendocino:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH8:
      Millston.Bergton.Chevak:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH9:
      Millston.Hoven.Roosville:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Hoven.Petrey:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH10:
      Millston.Hoven.Petrey:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH11:
      Millston.Cassa.Chloride:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Pawtucket.StarLake ]
      Millston.Pawtucket.StarLake:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Cassa.Chloride ]
    TH12:
      Millston.Cassa.Chloride:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH13:
      Millston.Cassa.Garibaldi:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH14:
      Millston.Cassa.Garibaldi:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH15:
      Millston.Provencal.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Rexville ]
      Millston.Ramos.Rexville:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Kaluaaha ]
    TH16:
      Millston.Provencal.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH17:
      Millston.Provencal.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH30:
      Millston.Provencal.Maryhill:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH31:
      Millston.Buckhorn.SoapLake:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH32:
      Millston.Gotham.StarLake:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH33:
      Millston.Brookneal.SoapLake:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH34:
      Millston.Shirley.Adona:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TH35:
      Millston.Shirley.Goldsboro:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TW4:
      Millston.Ramos.Hoagland:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Rainelle.Findlay, Millston.Rainelle.Quogue, Millston.Rainelle.Steger, Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood, Millston.Osyka.Chloride ]
      Millston.Ramos.Mabelle:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Rainelle.Findlay, Millston.Rainelle.Quogue, Millston.Rainelle.Steger, Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood, Millston.Osyka.Chloride ]
      Millston.Ramos.Palatine:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Rainelle.Findlay, Millston.Rainelle.Quogue, Millston.Rainelle.Steger, Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood, Millston.Osyka.Chloride ]
      Millston.Ramos.Marfa:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Rainelle.Findlay, Millston.Rainelle.Quogue, Millston.Rainelle.Steger, Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood, Millston.Osyka.Chloride ]
      Millston.Ramos.Quinwood:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Rainelle.Findlay, Millston.Rainelle.Quogue, Millston.Rainelle.Steger, Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood, Millston.Osyka.Chloride ]
      Millston.Rainelle.Findlay:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Hoagland, Millston.Ramos.Mabelle, Millston.Ramos.Palatine, Millston.Ramos.Marfa, Millston.Ramos.Quinwood, Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood, Millston.Osyka.Chloride ]
      Millston.Rainelle.Quogue:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Hoagland, Millston.Ramos.Mabelle, Millston.Ramos.Palatine, Millston.Ramos.Marfa, Millston.Ramos.Quinwood, Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood, Millston.Osyka.Chloride ]
      Millston.Rainelle.Steger:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Hoagland, Millston.Ramos.Mabelle, Millston.Ramos.Palatine, Millston.Ramos.Marfa, Millston.Ramos.Quinwood, Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood, Millston.Osyka.Chloride ]
      Millston.Provencal.Bushland:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Hoagland, Millston.Ramos.Mabelle, Millston.Ramos.Palatine, Millston.Ramos.Marfa, Millston.Ramos.Quinwood, Millston.Rainelle.Findlay, Millston.Rainelle.Quogue, Millston.Rainelle.Steger, Millston.Osyka.Chloride ]
      Millston.Provencal.Dassel:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Hoagland, Millston.Ramos.Mabelle, Millston.Ramos.Palatine, Millston.Ramos.Marfa, Millston.Ramos.Quinwood, Millston.Rainelle.Findlay, Millston.Rainelle.Quogue, Millston.Rainelle.Steger, Millston.Osyka.Chloride ]
      Millston.Provencal.Norwood:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Hoagland, Millston.Ramos.Mabelle, Millston.Ramos.Palatine, Millston.Ramos.Marfa, Millston.Ramos.Quinwood, Millston.Rainelle.Findlay, Millston.Rainelle.Quogue, Millston.Rainelle.Steger, Millston.Osyka.Chloride ]
      Millston.Osyka.Chloride:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Hoagland, Millston.Ramos.Mabelle, Millston.Ramos.Palatine, Millston.Ramos.Marfa, Millston.Ramos.Quinwood, Millston.Rainelle.Findlay, Millston.Rainelle.Quogue, Millston.Rainelle.Steger, Millston.Provencal.Bushland, Millston.Provencal.Dassel, Millston.Provencal.Norwood ]
    TW5:
      Millston.Wondervu$1.McCaulley:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Wondervu$1.Bowden:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Wondervu$1.Oriskany:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Wondervu$1.Higginson:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TW6:
      Millston.Cassa.Helton:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Rainelle.Ledoux, Millston.Rainelle.Conner, Millston.Osyka.Garibaldi ]
      Millston.Cassa.Noyes:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Rainelle.Ledoux, Millston.Rainelle.Conner, Millston.Osyka.Garibaldi ]
      Millston.Cassa.Cornell:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Rainelle.Ledoux, Millston.Rainelle.Conner, Millston.Osyka.Garibaldi ]
      Millston.Cassa.Weinert:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Rainelle.Ledoux, Millston.Rainelle.Conner, Millston.Osyka.Garibaldi ]
      Millston.Rainelle.Ledoux:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Cassa.Helton, Millston.Cassa.Noyes, Millston.Cassa.Cornell, Millston.Cassa.Weinert, Millston.Osyka.Garibaldi ]
      Millston.Rainelle.Conner:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Cassa.Helton, Millston.Cassa.Noyes, Millston.Cassa.Cornell, Millston.Cassa.Weinert, Millston.Osyka.Garibaldi ]
      Millston.Osyka.Garibaldi:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Cassa.Helton, Millston.Cassa.Noyes, Millston.Cassa.Cornell, Millston.Cassa.Weinert, Millston.Rainelle.Ledoux, Millston.Rainelle.Conner ]
    TW7:
      Millston.Maumee.Norwood:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Hoven.Allison, Millston.Hoven.Noyes ]
      Millston.Maumee.Maryhill:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Hoven.Allison, Millston.Hoven.Noyes ]
      Millston.Hoven.Allison:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Norwood, Millston.Maumee.Maryhill ]
      Millston.Hoven.Noyes:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Norwood, Millston.Maumee.Maryhill ]
    TW8:
      Millston.Shirley.Goldsboro:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Shirley.Connell:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TW9:
      Millston.Shirley.McCaulley:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Shirley.Fabens:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TW10:
      Millston.Ramos.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Kaluaaha ]
      Millston.Provencal.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Kaluaaha ]
    TW11:
      Millston.Ramos.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Kaluaaha ]
      Millston.Provencal.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Calcasieu ]
    TW20:
      Millston.Provencal.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TW21:
      Millston.Provencal.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TW22:
      Millston.Provencal.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    TW23:
      Millston.Belgrade.Ronan:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Bennet:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B16:
      Millston.GlenAvon.Exton:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Bushland ]
      Millston.Maumee.Bushland:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Exton ]
    B17:
      eg_intr_md_for_dprsr.mirror_type:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B18:
      HillTop.McGonigle.Buncombe:
          live_start: parser
          live_end: 10
          mutually_exclusive_with: [  ]
    B19:
      Millston.Wondervu.$stkvalid:
          mutually_exclusive_with: [  ]
      HillTop.McCaskill.Tilton:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.Stennett.Standish:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Weatherby:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      Millston.Wondervu$0.$valid:
          live_start: 5
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Wondervu$1.$valid:
          mutually_exclusive_with: [  ]
    B20:
      eg_intr_md_for_dprsr.drop_ctl:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Lathrop:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.DeGraff:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    B21:
      Millston.Belgrade.Virgil:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Adona:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    B22:
      Millston.Calabash.Adona:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B23:
      Millston.Maumee.Dassel:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Ocoee ]
      Millston.GlenAvon.Ocoee:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Dassel ]
    B24:
      Millston.Calabash.Fabens:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B25:
      HillTop.Plains.Roachdale:
          live_start: 5
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Chaska:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Miller:
          live_start: parser
          live_end: 4
          mutually_exclusive_with: [  ]
    B26:
      Millston.Hayfield.Clarion:
          mutually_exclusive_with: [  ]
      Millston.Hayfield.Clyde:
          mutually_exclusive_with: [  ]
      Millston.Hayfield.Lathrop:
          live_start: 5
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Hayfield.Vichy:
          mutually_exclusive_with: [  ]
      Millston.Hayfield.AquaPark:
          mutually_exclusive_with: [  ]
    B27:
      Millston.Belgrade.Mankato:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Blencoe:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    B28:
      Millston.Hayfield.Blencoe:
          live_start: 5
          live_end: deparser
          mutually_exclusive_with: [  ]
    B29:
      Millston.Calabash.Goldsboro:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B30:
      Millston.Belgrade.Florin:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Connell:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    B31:
      Millston.Calabash.Connell:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B46:
      Millston.Osyka.Noyes:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    B61:
      Millston.Belgrade.Freeburg:
          mutually_exclusive_with: [  ]
      HillTop.Lamona.Pachuta:
          live_start: parser
          live_end: 4
          mutually_exclusive_with: [  ]
    B62:
      Millston.Belgrade.Willard:
          mutually_exclusive_with: [  ]
      HillTop.Edwards.SomesBar:
          live_start: 5
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.Freeny.Dunedin:
          live_start: parser
          live_end: 4
          mutually_exclusive_with: [  ]
    B63:
      HillTop.Wisdom.Stratford:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    H16:
      eg_intr_md.egress_port:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H17:
      HillTop.Plains.Miller:
          live_start: 5
          live_end: deparser
          mutually_exclusive_with: [  ]
      HillTop.Sonoma.Iberia:
          live_start: parser
          live_end: 0
          mutually_exclusive_with: [  ]
    H18:
      Millston.GlenAvon.Rexville:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Kaluaaha ]
      Millston.Maumee.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Rexville ]
    H19:
      HillTop.McCaskill.Whitewood:
          live_start: parser
          live_end: 4
          mutually_exclusive_with: [  ]
      HillTop.McCaskill.Grassflat:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H20:
      Millston.Belgrade.Davie:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Rugby:
          mutually_exclusive_with: [  ]
      HillTop.Edwards.RedElm:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.Edwards.Oriskany:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    H21:
      Millston.Belgrade.Requa:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Nenana:
          live_start: parser
          live_end: 4
          mutually_exclusive_with: [  ]
    H22:
      Millston.Wondervu$0.Bowden:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Wondervu$0.Oriskany:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Wondervu$0.Higginson:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H23:
      HillTop.Wisdom.Bowden:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Toklat:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Jenners:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    H24:
      Millston.Wondervu$0.McCaulley:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H25:
      Millston.Calabash.McCaulley:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H26:
      Millston.Calabash.Fabens:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H27:
      Millston.Belgrade.Florien:
          mutually_exclusive_with: [  ]
      HillTop.RossFork.Bicknell:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    H28:
      Millston.Hayfield.Harbor:
          live_start: 5
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Hayfield.Aguilita:
          live_start: 4
          live_end: deparser
          mutually_exclusive_with: [  ]
    H29:
      Millston.Belgrade.Bayshore:
          mutually_exclusive_with: [  ]
      HillTop.RossFork.CeeVee:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    H30:
      Millston.Hayfield.Bledsoe:
          live_start: 5
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Hayfield.Toklat:
          live_start: 5
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Hayfield.Moorcroft:
          live_start: 5
          live_end: deparser
          mutually_exclusive_with: [  ]
    H31:
      Millston.Hayfield.Grabill:
          live_start: 4
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Hayfield.Glassboro:
          live_start: 4
          live_end: deparser
          mutually_exclusive_with: [  ]
    H67:
      Millston.Belgrade.Florin:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Connell:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    H68:
      Millston.Calabash.Connell:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H69:
      Millston.Broadwell.LasVegas:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Grays.Mendocino ]
      Millston.Grays.Mendocino:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Broadwell.LasVegas ]
    H70:
      Millston.Grays.Chevak:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H71:
      Millston.Maumee.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H72:
      Millston.Hayfield.Avondale:
          live_start: 4
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Hayfield.Blitchton:
          live_start: 4
          live_end: deparser
          mutually_exclusive_with: [  ]
    H73:
      Millston.Calabash.Goldsboro:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H74:
      Millston.Cassa.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Provencal.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Grays.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Gotham.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Brookneal.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Osyka.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Hoven.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Shirley.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Broadwell.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Maumee.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Hayfield.$valid:
          live_start: 5
          live_end: deparser
          mutually_exclusive_with: [  ]
      HillTop.Stennett.Blairsden:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
    H80:
      Millston.Belgrade.Matheson:
          mutually_exclusive_with: [  ]
      HillTop.Edwards.PineCity:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    H81:
      Millston.Maumee.Maryhill:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Alameda, Millston.GlenAvon.PineCity, Millston.GlenAvon.Osterdock, Millston.GlenAvon.Fayette ]
      Millston.Maumee.Alameda:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Alameda, Millston.GlenAvon.PineCity, Millston.GlenAvon.Osterdock, Millston.GlenAvon.Fayette ]
      Millston.Maumee.PineCity:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Alameda, Millston.GlenAvon.PineCity, Millston.GlenAvon.Osterdock, Millston.GlenAvon.Fayette ]
      Millston.Maumee.Fayette:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Alameda, Millston.GlenAvon.PineCity, Millston.GlenAvon.Osterdock, Millston.GlenAvon.Fayette ]
      Millston.GlenAvon.Alameda:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Maryhill, Millston.Maumee.Alameda, Millston.Maumee.PineCity, Millston.Maumee.Fayette ]
      Millston.GlenAvon.PineCity:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Maryhill, Millston.Maumee.Alameda, Millston.Maumee.PineCity, Millston.Maumee.Fayette ]
      Millston.GlenAvon.Osterdock:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Maryhill, Millston.Maumee.Alameda, Millston.Maumee.PineCity, Millston.Maumee.Fayette ]
      Millston.GlenAvon.Fayette:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Maryhill, Millston.Maumee.Alameda, Millston.Maumee.PineCity, Millston.Maumee.Fayette ]
    H82:
      Millston.Ramos.Alameda:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Maryhill, Millston.Provencal.Alameda, Millston.Provencal.PineCity, Millston.Provencal.Fayette ]
      Millston.Ramos.PineCity:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Maryhill, Millston.Provencal.Alameda, Millston.Provencal.PineCity, Millston.Provencal.Fayette ]
      Millston.Ramos.Osterdock:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Maryhill, Millston.Provencal.Alameda, Millston.Provencal.PineCity, Millston.Provencal.Fayette ]
      Millston.Ramos.Fayette:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Provencal.Maryhill, Millston.Provencal.Alameda, Millston.Provencal.PineCity, Millston.Provencal.Fayette ]
      Millston.Provencal.Maryhill:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Alameda, Millston.Ramos.PineCity, Millston.Ramos.Osterdock, Millston.Ramos.Fayette ]
      Millston.Provencal.Alameda:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Alameda, Millston.Ramos.PineCity, Millston.Ramos.Osterdock, Millston.Ramos.Fayette ]
      Millston.Provencal.PineCity:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Alameda, Millston.Ramos.PineCity, Millston.Ramos.Osterdock, Millston.Ramos.Fayette ]
      Millston.Provencal.Fayette:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Ramos.Alameda, Millston.Ramos.PineCity, Millston.Ramos.Osterdock, Millston.Ramos.Fayette ]
    H87:
      Millston.Calabash.Adona:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    H88:
      HillTop.Edwards.Renick:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    H91:
      Millston.Belgrade.Virgil:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Adona:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    W16:
      Millston.GlenAvon.Hoagland:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Kaluaaha ]
      Millston.GlenAvon.Mabelle:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Kaluaaha ]
      Millston.GlenAvon.Palatine:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Kaluaaha ]
      Millston.GlenAvon.Marfa:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Kaluaaha ]
      Millston.GlenAvon.Quinwood:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Kaluaaha ]
      Millston.Maumee.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Hoagland, Millston.GlenAvon.Mabelle, Millston.GlenAvon.Palatine, Millston.GlenAvon.Marfa, Millston.GlenAvon.Quinwood ]
    W17:
      Millston.GlenAvon.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Kaluaaha ]
      Millston.Maumee.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Kaluaaha ]
    W18:
      Millston.GlenAvon.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.Maumee.Kaluaaha ]
      Millston.Maumee.Kaluaaha:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [ Millston.GlenAvon.Calcasieu ]
    W19:
      Millston.Maumee.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W20:
      Millston.Maumee.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W21:
      Millston.Maumee.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W22:
      Millston.Maumee.Calcasieu:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W23:
      Millston.Belgrade.$valid:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
      Millston.Calabash.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Rainelle.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.GlenAvon.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Ramos.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Bergton.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Pawtucket.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
      Millston.Buckhorn.$valid:
          live_start: parser
          live_end: deparser
          mutually_exclusive_with: [  ]
    W24:
      Millston.Belgrade.Chaska:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Miller:
          live_start: parser
          live_end: 4
          mutually_exclusive_with: [  ]
    W25:
      Millston.Belgrade.Ronan:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Bennet:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    W26:
      Millston.Belgrade.Corinth:
          mutually_exclusive_with: [  ]
      HillTop.Lewiston.Staunton:
          live_start: parser
          live_end: 6
          mutually_exclusive_with: [  ]
    W27:
      eg_intr_md.egress_rid:
          live_start: parser
          live_end: 0
          mutually_exclusive_with: [  ]
    W28:
      Millston.Belgrade.Waipahu:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Allgood:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Shabbona:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Anacortes:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Piqua:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Westhoff:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.RioPecos:
          live_start: parser
          live_end: 4
          mutually_exclusive_with: [  ]
      HillTop.Bessie.Peebles:
          live_start: parser
          live_end: 6
          mutually_exclusive_with: [  ]
    W29:
      Millston.Belgrade.Rockport:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Union:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Onycha:
          live_start: parser
          live_end: 11
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Dyess:
          live_start: parser
          live_end: 4
          mutually_exclusive_with: [  ]
    W30:
      Millston.Belgrade.Selawik:
          mutually_exclusive_with: [  ]
      Millston.Belgrade.Sudbury:
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Waubun:
          live_start: parser
          live_end: 2
          mutually_exclusive_with: [  ]
      HillTop.Wisdom.Dolores:
          live_start: parser
          live_end: 5
          mutually_exclusive_with: [  ]
    W31:
      eg_intr_md.egress_qid:
          live_start: parser
          live_end: 4
          mutually_exclusive_with: [  ]
parser ingress:
  start: $entry_point
  init_zero: [ W14, H1, W0, H53, B42, B58, B13, B10, B14, H50, B7, B8, H56, H63, H48, H55, W8, H37, W7, B56, B57, H4, W4, H3, B44, B59, B2, B45, H62, H34, B12, B11, H85, B38, B15, H14, W11, B5, W10, W1, W9, H66, H95, B3, W39, H11, H40, H61, H41, H42, H43, H90, H65, H5, W38, W49, B55, H9, H32, B40, B6, B9, W51, W37, W36, H83, W3, W40, W44, W45, W46, H84, H59, H58, H60, H2, B36, H86, H64, H46, H8, H12, H44, B43, B60, B41, B4, W5, H49, H47, H13, H45, H15, H52, B54 ]
  bitwise_or: [ B12, B54, H95 ]
  hdr_len_adj: 16
  states:
    $entry_point:  # from state ingress::$entry_point
      *:
        save: { half : 0..1 }
        buf_req: 2
        next: start
    start:  # from state ingress::start
      match: [ half ]
      value_set Guion 2:
        handle: 511
        field_mapping:
          ig_intr_md.ingress_port(0..8) : half(0..8)
        0..1: H53  # bit[7..15] -> H53 bit[8..0]: ingress::HillTop.Tiburon.Arnold
        7..10: W14  # bit[66..79] -> W14 bit[21..8]: ingress::HillTop.Lamona.Fristoe
        10..11: H1  # bit[84..95] -> H1 bit[11..0]: ingress::HillTop.Lamona.Traverse
        10..13: W0  # bit[110..111] -> W0 bit[1..0]: ingress::HillTop.Lamona.Whitefish
        12: B34  # bit[103] -> B34 bit[0]: ingress::HillTop.Lamona.Pachuta
        shift: 16
        buf_req: 16
        next: Nuyaka
      0x****:
        0..1: H53  # bit[7..15] -> H53 bit[8..0]: ingress::HillTop.Tiburon.Arnold
        7..10: W14  # bit[66..79] -> W14 bit[21..8]: ingress::HillTop.Lamona.Fristoe
        10..11: H1  # bit[84..95] -> H1 bit[11..0]: ingress::HillTop.Lamona.Traverse
        10..13: W0  # bit[110..111] -> W0 bit[1..0]: ingress::HillTop.Lamona.Whitefish
        12: B34  # bit[103] -> B34 bit[0]: ingress::HillTop.Lamona.Pachuta
        save: { half : 28..29, byte0 : 30 }
        shift: 16
        buf_req: 31
        next: Mentone
    Nuyaka:  # from state ingress::Nuyaka
      *:
        14..17: W48
            # - bit[112..117] -> W48 bit[31..26]: ingress::Millston.Hayfield.Blitchton
            # - bit[118..127] -> W48 bit[25..16]: ingress::Millston.Hayfield.Avondale
            # - bit[128..131] -> W48 bit[15..12]: ingress::Millston.Hayfield.Glassboro
            # - bit[132..143] -> W48 bit[11..0]: ingress::Millston.Hayfield.Grabill
        21: B47
            # - bit[168..169] -> B47 bit[7..6]: ingress::Millston.Hayfield.AquaPark
            # - bit[170..172] -> B47 bit[5..3]: ingress::Millston.Hayfield.Vichy
        B54: 2  # value 1 -> B54 bit[1]: ingress::Millston.Hayfield.$valid
        shift: 24
        buf_req: 24
        next: Nuyaka.$oob_stall_0
    Nuyaka.$oob_stall_0:  # from state ingress::Nuyaka.$oob_stall_0
      *:
        save: { half : 12..13, byte0 : 14 }
        buf_req: 15
        next: Mentone
    Mentone:  # from state ingress::Mentone
      match: [ byte0, half ]
      0x**9100:
        0..3: W12
            # - bit[0..23] -> W12 bit[31..8]: ingress::Millston.Calabash.Adona
            # - bit[24..31] -> W12 bit[7..0]: ingress::Millston.Calabash.Connell[23:16].16-23
        4..5: H54  # ingress::Millston.Calabash.Connell[15:0].0-15
        6..7: H36  # ingress::Millston.Calabash.Goldsboro[23:8].8-23
        8..11: W6
            # - bit[64..71] -> W6 bit[31..24]: ingress::Millston.Calabash.Goldsboro[7:0].0-7
            # - bit[72..95] -> W6 bit[23..0]: ingress::Millston.Calabash.Fabens
        12: B53  # ingress::Millston.Calabash.McCaulley[15:8].8-15
        13: B50  # ingress::Millston.Calabash.McCaulley[7:0].0-7
        B54: 4  # value 1 -> B54 bit[2]: ingress::Millston.Calabash.$valid
        save: { half : 16..17, byte0 : 18 }
        shift: 14
        buf_req: 19
        next: Elvaston
      0x**88a8:
        0..3: W12
            # - bit[0..23] -> W12 bit[31..8]: ingress::Millston.Calabash.Adona
            # - bit[24..31] -> W12 bit[7..0]: ingress::Millston.Calabash.Connell[23:16].16-23
        4..5: H54  # ingress::Millston.Calabash.Connell[15:0].0-15
        6..7: H36  # ingress::Millston.Calabash.Goldsboro[23:8].8-23
        8..11: W6
            # - bit[64..71] -> W6 bit[31..24]: ingress::Millston.Calabash.Goldsboro[7:0].0-7
            # - bit[72..95] -> W6 bit[23..0]: ingress::Millston.Calabash.Fabens
        12: B53  # ingress::Millston.Calabash.McCaulley[15:8].8-15
        13: B50  # ingress::Millston.Calabash.McCaulley[7:0].0-7
        B54: 4  # value 1 -> B54 bit[2]: ingress::Millston.Calabash.$valid
        save: { half : 16..17, byte0 : 18 }
        shift: 14
        buf_req: 19
        next: Elvaston
      0x**8100:
        0..3: W12
            # - bit[0..23] -> W12 bit[31..8]: ingress::Millston.Calabash.Adona
            # - bit[24..31] -> W12 bit[7..0]: ingress::Millston.Calabash.Connell[23:16].16-23
        4..5: H54  # ingress::Millston.Calabash.Connell[15:0].0-15
        6..7: H36  # ingress::Millston.Calabash.Goldsboro[23:8].8-23
        8..11: W6
            # - bit[64..71] -> W6 bit[31..24]: ingress::Millston.Calabash.Goldsboro[7:0].0-7
            # - bit[72..95] -> W6 bit[23..0]: ingress::Millston.Calabash.Fabens
        12: B53  # ingress::Millston.Calabash.McCaulley[15:8].8-15
        13: B50  # ingress::Millston.Calabash.McCaulley[7:0].0-7
        B54: 4  # value 1 -> B54 bit[2]: ingress::Millston.Calabash.$valid
        save: { half : 16..17, byte0 : 18 }
        shift: 14
        buf_req: 19
        next: Elvaston
      0x**0806:
        0..3: W12
            # - bit[0..23] -> W12 bit[31..8]: ingress::Millston.Calabash.Adona
            # - bit[24..31] -> W12 bit[7..0]: ingress::Millston.Calabash.Connell[23:16].16-23
        4..5: H54  # ingress::Millston.Calabash.Connell[15:0].0-15
        6..7: H36  # ingress::Millston.Calabash.Goldsboro[23:8].8-23
        8..11: W6
            # - bit[64..71] -> W6 bit[31..24]: ingress::Millston.Calabash.Goldsboro[7:0].0-7
            # - bit[72..95] -> W6 bit[23..0]: ingress::Millston.Calabash.Fabens
        12: B53  # ingress::Millston.Calabash.McCaulley[15:8].8-15
        13: B50  # ingress::Millston.Calabash.McCaulley[7:0].0-7
        B54: 4  # value 1 -> B54 bit[2]: ingress::Millston.Calabash.$valid
        save: { half : 14..15, byte0 : 16, byte1 : 17 }
        shift: 14
        buf_req: 18
        next: Corvallis
      0x450800:
        0..3: W12
            # - bit[0..23] -> W12 bit[31..8]: ingress::Millston.Calabash.Adona
            # - bit[24..31] -> W12 bit[7..0]: ingress::Millston.Calabash.Connell[23:16].16-23
        4..5: H54  # ingress::Millston.Calabash.Connell[15:0].0-15
        6..7: H36  # ingress::Millston.Calabash.Goldsboro[23:8].8-23
        8..11: W6
            # - bit[64..71] -> W6 bit[31..24]: ingress::Millston.Calabash.Goldsboro[7:0].0-7
            # - bit[72..95] -> W6 bit[23..0]: ingress::Millston.Calabash.Fabens
        12: B53  # ingress::Millston.Calabash.McCaulley[15:8].8-15
        13: B50  # ingress::Millston.Calabash.McCaulley[7:0].0-7
        B54: 4  # value 1 -> B54 bit[2]: ingress::Millston.Calabash.$valid
        shift: 14
        buf_req: 14
        next: Belmont
      0x*50800:
        0..3: W12
            # - bit[0..23] -> W12 bit[31..8]: ingress::Millston.Calabash.Adona
            # - bit[24..31] -> W12 bit[7..0]: ingress::Millston.Calabash.Connell[23:16].16-23
        4..5: H54  # ingress::Millston.Calabash.Connell[15:0].0-15
        6..7: H36  # ingress::Millston.Calabash.Goldsboro[23:8].8-23
        8..11: W6
            # - bit[64..71] -> W6 bit[31..24]: ingress::Millston.Calabash.Goldsboro[7:0].0-7
            # - bit[72..95] -> W6 bit[23..0]: ingress::Millston.Calabash.Fabens
        12: B53  # ingress::Millston.Calabash.McCaulley[15:8].8-15
        13: B50  # ingress::Millston.Calabash.McCaulley[7:0].0-7
        B54: 4  # value 1 -> B54 bit[2]: ingress::Millston.Calabash.$valid
        shift: 14
        buf_req: 14
        next: Gastonia
      0x**0800:
        0..3: W12
            # - bit[0..23] -> W12 bit[31..8]: ingress::Millston.Calabash.Adona
            # - bit[24..31] -> W12 bit[7..0]: ingress::Millston.Calabash.Connell[23:16].16-23
        4..5: H54  # ingress::Millston.Calabash.Connell[15:0].0-15
        6..7: H36  # ingress::Millston.Calabash.Goldsboro[23:8].8-23
        8..11: W6
            # - bit[64..71] -> W6 bit[31..24]: ingress::Millston.Calabash.Goldsboro[7:0].0-7
            # - bit[72..95] -> W6 bit[23..0]: ingress::Millston.Calabash.Fabens
        12: B53  # ingress::Millston.Calabash.McCaulley[15:8].8-15
        13: B50  # ingress::Millston.Calabash.McCaulley[7:0].0-7
        B54: 4  # value 1 -> B54 bit[2]: ingress::Millston.Calabash.$valid
        shift: 14
        buf_req: 14
        next: Hillsview
      0x6*86dd:
        0..3: W12
            # - bit[0..23] -> W12 bit[31..8]: ingress::Millston.Calabash.Adona
            # - bit[24..31] -> W12 bit[7..0]: ingress::Millston.Calabash.Connell[23:16].16-23
        4..5: H54  # ingress::Millston.Calabash.Connell[15:0].0-15
        6..7: H36  # ingress::Millston.Calabash.Goldsboro[23:8].8-23
        8..11: W6
            # - bit[64..71] -> W6 bit[31..24]: ingress::Millston.Calabash.Goldsboro[7:0].0-7
            # - bit[72..95] -> W6 bit[23..0]: ingress::Millston.Calabash.Fabens
        12: B53  # ingress::Millston.Calabash.McCaulley[15:8].8-15
        13: B50  # ingress::Millston.Calabash.McCaulley[7:0].0-7
        B54: 4  # value 1 -> B54 bit[2]: ingress::Millston.Calabash.$valid
        shift: 14
        buf_req: 14
        next: Westbury
      0x**86dd:
        0..3: W12
            # - bit[0..23] -> W12 bit[31..8]: ingress::Millston.Calabash.Adona
            # - bit[24..31] -> W12 bit[7..0]: ingress::Millston.Calabash.Connell[23:16].16-23
        4..5: H54  # ingress::Millston.Calabash.Connell[15:0].0-15
        6..7: H36  # ingress::Millston.Calabash.Goldsboro[23:8].8-23
        8..11: W6
            # - bit[64..71] -> W6 bit[31..24]: ingress::Millston.Calabash.Goldsboro[7:0].0-7
            # - bit[72..95] -> W6 bit[23..0]: ingress::Millston.Calabash.Fabens
        12: B53  # ingress::Millston.Calabash.McCaulley[15:8].8-15
        13: B50  # ingress::Millston.Calabash.McCaulley[7:0].0-7
        B54: 4  # value 1 -> B54 bit[2]: ingress::Millston.Calabash.$valid
        shift: 14
        buf_req: 14
        next: Gambrills
      0x**8808:
        0..3: W12
            # - bit[0..23] -> W12 bit[31..8]: ingress::Millston.Calabash.Adona
            # - bit[24..31] -> W12 bit[7..0]: ingress::Millston.Calabash.Connell[23:16].16-23
        4..5: H54  # ingress::Millston.Calabash.Connell[15:0].0-15
        6..7: H36  # ingress::Millston.Calabash.Goldsboro[23:8].8-23
        8..11: W6
            # - bit[64..71] -> W6 bit[31..24]: ingress::Millston.Calabash.Goldsboro[7:0].0-7
            # - bit[72..95] -> W6 bit[23..0]: ingress::Millston.Calabash.Fabens
        12: B53  # ingress::Millston.Calabash.McCaulley[15:8].8-15
        13: B50  # ingress::Millston.Calabash.McCaulley[7:0].0-7
        B54: 4  # value 1 -> B54 bit[2]: ingress::Millston.Calabash.$valid
        shift: 14
        buf_req: 14
        next: Masontown
      0x******:
        0..3: W12
            # - bit[0..23] -> W12 bit[31..8]: ingress::Millston.Calabash.Adona
            # - bit[24..31] -> W12 bit[7..0]: ingress::Millston.Calabash.Connell[23:16].16-23
        4..5: H54  # ingress::Millston.Calabash.Connell[15:0].0-15
        6..7: H36  # ingress::Millston.Calabash.Goldsboro[23:8].8-23
        8..11: W6
            # - bit[64..71] -> W6 bit[31..24]: ingress::Millston.Calabash.Goldsboro[7:0].0-7
            # - bit[72..95] -> W6 bit[23..0]: ingress::Millston.Calabash.Fabens
        12: B53  # ingress::Millston.Calabash.McCaulley[15:8].8-15
        13: B50  # ingress::Millston.Calabash.McCaulley[7:0].0-7
        B54: 4  # value 1 -> B54 bit[2]: ingress::Millston.Calabash.$valid
        shift: 14
        buf_req: 14
        next: end
    Elvaston:  # from state ingress::Elvaston
      match: [ byte0, half ]
      0x**8100:
        0..1: H0
            # - bit[0..2] -> H0 bit[15..13]: ingress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H0 bit[12]: ingress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H0 bit[11..0]: ingress::Millston.Wondervu[0].Bowden
        2: B51  # ingress::Millston.Wondervu[0].McCaulley[15:8].8-15
        3: B48  # ingress::Millston.Wondervu[0].McCaulley[7:0].0-7
        B12: 2  # value 2 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        save: { half : 6..7, byte0 : 8 }
        shift: 4
        buf_req: 9
        next: Elkville
      0x**0806:
        0..1: H0
            # - bit[0..2] -> H0 bit[15..13]: ingress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H0 bit[12]: ingress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H0 bit[11..0]: ingress::Millston.Wondervu[0].Bowden
        2: B51  # ingress::Millston.Wondervu[0].McCaulley[15:8].8-15
        3: B48  # ingress::Millston.Wondervu[0].McCaulley[7:0].0-7
        B12: 2  # value 2 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        save: { half : 4..5, byte0 : 6, byte1 : 7 }
        shift: 4
        buf_req: 8
        next: Corvallis
      0x450800:
        0..1: H0
            # - bit[0..2] -> H0 bit[15..13]: ingress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H0 bit[12]: ingress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H0 bit[11..0]: ingress::Millston.Wondervu[0].Bowden
        2: B51  # ingress::Millston.Wondervu[0].McCaulley[15:8].8-15
        3: B48  # ingress::Millston.Wondervu[0].McCaulley[7:0].0-7
        B12: 2  # value 2 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Belmont
      0x*50800:
        0..1: H0
            # - bit[0..2] -> H0 bit[15..13]: ingress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H0 bit[12]: ingress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H0 bit[11..0]: ingress::Millston.Wondervu[0].Bowden
        2: B51  # ingress::Millston.Wondervu[0].McCaulley[15:8].8-15
        3: B48  # ingress::Millston.Wondervu[0].McCaulley[7:0].0-7
        B12: 2  # value 2 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Gastonia
      0x**0800:
        0..1: H0
            # - bit[0..2] -> H0 bit[15..13]: ingress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H0 bit[12]: ingress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H0 bit[11..0]: ingress::Millston.Wondervu[0].Bowden
        2: B51  # ingress::Millston.Wondervu[0].McCaulley[15:8].8-15
        3: B48  # ingress::Millston.Wondervu[0].McCaulley[7:0].0-7
        B12: 2  # value 2 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Hillsview
      0x6*86dd:
        0..1: H0
            # - bit[0..2] -> H0 bit[15..13]: ingress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H0 bit[12]: ingress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H0 bit[11..0]: ingress::Millston.Wondervu[0].Bowden
        2: B51  # ingress::Millston.Wondervu[0].McCaulley[15:8].8-15
        3: B48  # ingress::Millston.Wondervu[0].McCaulley[7:0].0-7
        B12: 2  # value 2 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Westbury
      0x6*86dd:
        0..1: H0
            # - bit[0..2] -> H0 bit[15..13]: ingress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H0 bit[12]: ingress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H0 bit[11..0]: ingress::Millston.Wondervu[0].Bowden
        2: B51  # ingress::Millston.Wondervu[0].McCaulley[15:8].8-15
        3: B48  # ingress::Millston.Wondervu[0].McCaulley[7:0].0-7
        B12: 2  # value 2 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Westbury
      0x**86dd:
        0..1: H0
            # - bit[0..2] -> H0 bit[15..13]: ingress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H0 bit[12]: ingress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H0 bit[11..0]: ingress::Millston.Wondervu[0].Bowden
        2: B51  # ingress::Millston.Wondervu[0].McCaulley[15:8].8-15
        3: B48  # ingress::Millston.Wondervu[0].McCaulley[7:0].0-7
        B12: 2  # value 2 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Gambrills
      0x**8808:
        0..1: H0
            # - bit[0..2] -> H0 bit[15..13]: ingress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H0 bit[12]: ingress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H0 bit[11..0]: ingress::Millston.Wondervu[0].Bowden
        2: B51  # ingress::Millston.Wondervu[0].McCaulley[15:8].8-15
        3: B48  # ingress::Millston.Wondervu[0].McCaulley[7:0].0-7
        B12: 2  # value 2 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Masontown
      0x******:
        0..1: H0
            # - bit[0..2] -> H0 bit[15..13]: ingress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H0 bit[12]: ingress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H0 bit[11..0]: ingress::Millston.Wondervu[0].Bowden
        2: B51  # ingress::Millston.Wondervu[0].McCaulley[15:8].8-15
        3: B48  # ingress::Millston.Wondervu[0].McCaulley[7:0].0-7
        B12: 2  # value 2 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: end
    Elkville:  # from state ingress::Elkville
      match: [ byte0, half ]
      0x**0806:
        0..1: TH24
            # - bit[0..2] -> TH24 bit[15..13]: ingress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TH24 bit[12]: ingress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TH24 bit[11..0]: ingress::Millston.Wondervu[1].Bowden
        2: B52  # ingress::Millston.Wondervu[1].McCaulley[15:8].8-15
        3: B49  # ingress::Millston.Wondervu[1].McCaulley[7:0].0-7
        B12: 1  # value 1 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        save: { half : 4..5, byte0 : 6, byte1 : 7 }
        shift: 4
        buf_req: 8
        next: Corvallis
      0x450800:
        0..1: TH24
            # - bit[0..2] -> TH24 bit[15..13]: ingress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TH24 bit[12]: ingress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TH24 bit[11..0]: ingress::Millston.Wondervu[1].Bowden
        2: B52  # ingress::Millston.Wondervu[1].McCaulley[15:8].8-15
        3: B49  # ingress::Millston.Wondervu[1].McCaulley[7:0].0-7
        B12: 1  # value 1 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Belmont
      0x*50800:
        0..1: TH24
            # - bit[0..2] -> TH24 bit[15..13]: ingress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TH24 bit[12]: ingress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TH24 bit[11..0]: ingress::Millston.Wondervu[1].Bowden
        2: B52  # ingress::Millston.Wondervu[1].McCaulley[15:8].8-15
        3: B49  # ingress::Millston.Wondervu[1].McCaulley[7:0].0-7
        B12: 1  # value 1 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Gastonia
      0x**0800:
        0..1: TH24
            # - bit[0..2] -> TH24 bit[15..13]: ingress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TH24 bit[12]: ingress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TH24 bit[11..0]: ingress::Millston.Wondervu[1].Bowden
        2: B52  # ingress::Millston.Wondervu[1].McCaulley[15:8].8-15
        3: B49  # ingress::Millston.Wondervu[1].McCaulley[7:0].0-7
        B12: 1  # value 1 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Hillsview
      0x6*86dd:
        0..1: TH24
            # - bit[0..2] -> TH24 bit[15..13]: ingress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TH24 bit[12]: ingress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TH24 bit[11..0]: ingress::Millston.Wondervu[1].Bowden
        2: B52  # ingress::Millston.Wondervu[1].McCaulley[15:8].8-15
        3: B49  # ingress::Millston.Wondervu[1].McCaulley[7:0].0-7
        B12: 1  # value 1 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Westbury
      0x6*86dd:
        0..1: TH24
            # - bit[0..2] -> TH24 bit[15..13]: ingress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TH24 bit[12]: ingress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TH24 bit[11..0]: ingress::Millston.Wondervu[1].Bowden
        2: B52  # ingress::Millston.Wondervu[1].McCaulley[15:8].8-15
        3: B49  # ingress::Millston.Wondervu[1].McCaulley[7:0].0-7
        B12: 1  # value 1 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Westbury
      0x**86dd:
        0..1: TH24
            # - bit[0..2] -> TH24 bit[15..13]: ingress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TH24 bit[12]: ingress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TH24 bit[11..0]: ingress::Millston.Wondervu[1].Bowden
        2: B52  # ingress::Millston.Wondervu[1].McCaulley[15:8].8-15
        3: B49  # ingress::Millston.Wondervu[1].McCaulley[7:0].0-7
        B12: 1  # value 1 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Gambrills
      0x**8808:
        0..1: TH24
            # - bit[0..2] -> TH24 bit[15..13]: ingress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TH24 bit[12]: ingress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TH24 bit[11..0]: ingress::Millston.Wondervu[1].Bowden
        2: B52  # ingress::Millston.Wondervu[1].McCaulley[15:8].8-15
        3: B49  # ingress::Millston.Wondervu[1].McCaulley[7:0].0-7
        B12: 1  # value 1 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Masontown
      0x******:
        0..1: TH24
            # - bit[0..2] -> TH24 bit[15..13]: ingress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TH24 bit[12]: ingress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TH24 bit[11..0]: ingress::Millston.Wondervu[1].Bowden
        2: B52  # ingress::Millston.Wondervu[1].McCaulley[15:8].8-15
        3: B49  # ingress::Millston.Wondervu[1].McCaulley[7:0].0-7
        B12: 1  # value 1 -> B12 bit[1..0]: ingress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: end
    Corvallis:  # from state ingress::Corvallis
      match: [ half, byte0, byte1 ]
      0x00010800:
        0..3: TW1
            # - bit[0..15] -> TW1 bit[31..16]: ingress::Millston.Rainelle.Conner
            # - bit[16..31] -> TW1 bit[15..0]: ingress::Millston.Rainelle.Ledoux
        4..5: TH0
            # - bit[32..39] -> TH0 bit[15..8]: ingress::Millston.Rainelle.Steger
            # - bit[40..47] -> TH0 bit[7..0]: ingress::Millston.Rainelle.Quogue
        6..7: H35  # ingress::Millston.Rainelle.Findlay
        B54: 8  # value 1 -> B54 bit[3]: ingress::Millston.Rainelle.$valid
        shift: 8
        buf_req: 8
        next: end
      0x********:
        buf_req: 0
        next: end
    Belmont:  # from state ingress::Belmont
      *:
        checksum 0:
          type: VERIFY
          mask: [ 0, 1, 2..3, 4..5, 6, 6..7, 8, 9, 10..11, 12..15, 16..19 ]
          swap: 0
          start: 1
          end: 1
          dest: H63(0)
        0..1: H89
            # - bit[0..3] -> H89 bit[15..12]: ingress::Millston.GlenAvon.Fayette
            # - bit[4..7] -> H89 bit[11..8]: ingress::Millston.GlenAvon.Osterdock
            # - bit[8..13] -> H89 bit[7..2]: ingress::Millston.GlenAvon.PineCity
            # - bit[14..15] -> H89 bit[1..0]: ingress::Millston.GlenAvon.Alameda
        2..3: H38  # ingress::Millston.GlenAvon.Rexville
        4..7: TW0
            # - bit[32..47] -> TW0 bit[31..16]: ingress::Millston.GlenAvon.Quinwood
            # - bit[48] -> TW0 bit[15]: ingress::Millston.GlenAvon.Marfa
            # - bit[49] -> TW0 bit[14]: ingress::Millston.GlenAvon.Palatine
            # - bit[50] -> TW0 bit[13]: ingress::Millston.GlenAvon.Mabelle
            # - bit[51..63] -> TW0 bit[12..0]: ingress::Millston.GlenAvon.Hoagland
        8: TB1  # ingress::Millston.GlenAvon.Exton
        8: B59  # ingress::HillTop.RossFork.Exton
        9: B33  # ingress::Millston.GlenAvon.Ocoee
        10..11: TH25  # ingress::Millston.GlenAvon.Hackett
        12..15: W32  # ingress::Millston.GlenAvon.Kaluaaha
        16..19: W33  # ingress::Millston.GlenAvon.Calcasieu
        B54: 16  # value 1 -> B54 bit[4]: ingress::Millston.GlenAvon.$valid
        save: { half : 6..7, byte0 : 9 }
        shift: 20
        buf_req: 20
        next: Belmont.$split_0
    Belmont.$split_0:  # from state ingress::Belmont.$split_0
      match: [ half, byte0 ]
      0o*0000004:
        B13: 1  # value 1 -> B13 bit[3..0]: ingress::HillTop.Aldan.Parkville
        save: { byte1 : 0 }
        buf_req: 1
        next: Baytown
      0o*0000051:
        B13: 1  # value 1 -> B13 bit[3..0]: ingress::HillTop.Aldan.Parkville
        buf_req: 0
        next: Lynch
      0o*0000001:
        B13: 1  # value 1 -> B13 bit[3..0]: ingress::HillTop.Aldan.Parkville
        buf_req: 0
        next: BealCity
      0o*0000021:
        B13: 1  # value 1 -> B13 bit[3..0]: ingress::HillTop.Aldan.Parkville
        save: { half : 2..3 }
        buf_req: 4
        next: Toluca
      0o*0000006:
        B13: 1  # value 1 -> B13 bit[3..0]: ingress::HillTop.Aldan.Parkville
        buf_req: 0
        next: Readsboro
      0o*0000057:
        B13: 1  # value 1 -> B13 bit[3..0]: ingress::HillTop.Aldan.Parkville
        save: { half : 0..1, byte0 : 2, byte1 : 3 }
        buf_req: 4
        next: Astor
      0o*0000000:
        B13: 1  # value 1 -> B13 bit[3..0]: ingress::HillTop.Aldan.Parkville
        buf_req: 0
        next: end
      0x****06:
        B13: 1  # value 1 -> B13 bit[3..0]: ingress::HillTop.Aldan.Parkville
        buf_req: 0
        next: Greenland
      0x******:
        B13: 1  # value 1 -> B13 bit[3..0]: ingress::HillTop.Aldan.Parkville
        buf_req: 0
        next: Shingler
    Baytown:  # from state ingress::Baytown
      match: [ byte1 ]
      0x45:
        B57: 8  # value 8 -> B57 bit[7..0]: ingress::HillTop.RossFork.McCaulley[15:8].8-15
        H34: 128  # value 4 -> H34 bit[7..5]: ingress::HillTop.RossFork.Joslin
        buf_req: 0
        next: McBrides
      0x**:
        B57: 8  # value 8 -> B57 bit[7..0]: ingress::HillTop.RossFork.McCaulley[15:8].8-15
        H34: 128  # value 4 -> H34 bit[7..5]: ingress::HillTop.RossFork.Joslin
        buf_req: 0
        next: Ocracoke
    McBrides:  # from state ingress::McBrides
      *:
        checksum 0:
          type: VERIFY
          mask: [ 0, 1, 2..3, 4..5, 6, 6..7, 8, 9, 10..11, 12..15, 16..19 ]
          swap: 0
          start: 1
          end: 1
          dest: H48(0)
        0..1: H83  # bit[8..13] -> H83 bit[7..2]: ingress::HillTop.Maddock.PineCity
        0..3: TW1
            # - bit[0..3] -> TW1 bit[31..28]: ingress::Millston.Ramos.Fayette
            # - bit[4..7] -> TW1 bit[27..24]: ingress::Millston.Ramos.Osterdock
            # - bit[8..13] -> TW1 bit[23..18]: ingress::Millston.Ramos.PineCity
            # - bit[14..15] -> TW1 bit[17..16]: ingress::Millston.Ramos.Alameda
            # - bit[16..31] -> TW1 bit[15..0]: ingress::Millston.Ramos.Rexville
        4..7: TW2
            # - bit[32..47] -> TW2 bit[31..16]: ingress::Millston.Ramos.Quinwood
            # - bit[48] -> TW2 bit[15]: ingress::Millston.Ramos.Marfa
            # - bit[49] -> TW2 bit[14]: ingress::Millston.Ramos.Palatine
            # - bit[50] -> TW2 bit[13]: ingress::Millston.Ramos.Mabelle
            # - bit[51..63] -> TW2 bit[12..0]: ingress::Millston.Ramos.Hoagland
        8: B58  # ingress::HillTop.Aldan.Kenbridge
        8..9: TH1
            # - bit[64..71] -> TH1 bit[15..8]: ingress::Millston.Ramos.Exton
            # - bit[72..79] -> TH1 bit[7..0]: ingress::Millston.Ramos.Ocoee
        9: B42  # ingress::HillTop.Aldan.Vinemont
        10..11: TH2  # ingress::Millston.Ramos.Hackett
        12..15: TW13  # ingress::Millston.Ramos.Kaluaaha
        12..15: W37  # ingress::HillTop.Maddock.Kaluaaha
        B10: 16  # value 1 -> B10 bit[5..4]: ingress::HillTop.Aldan.Mystic[1:0].0-1
        B54: 32  # value 1 -> B54 bit[5]: ingress::Millston.Ramos.$valid
        save: { half : 6..7, byte0 : 9 }
        shift: 16
        buf_req: 20
        next: McBrides.$split_0
    McBrides.$split_0:  # from state ingress::McBrides.$split_0
      match: [ half, byte0 ]
      0o*0000001:
        0..3: TW14  # ingress::Millston.Ramos.Calcasieu
        0..3: W36  # ingress::HillTop.Maddock.Calcasieu
        shift: 4
        buf_req: 4
        next: Hapeville
      0o*0000021:
        0..3: TW14  # ingress::Millston.Ramos.Calcasieu
        0..3: W36  # ingress::HillTop.Maddock.Calcasieu
        shift: 4
        buf_req: 4
        next: Barnhill
      0o*0000006:
        0..3: TW14  # ingress::Millston.Ramos.Calcasieu
        0..3: W36  # ingress::HillTop.Maddock.Calcasieu
        shift: 4
        buf_req: 4
        next: NantyGlo
      0o*0000000:
        0..3: TW14  # ingress::Millston.Ramos.Calcasieu
        0..3: W36  # ingress::HillTop.Maddock.Calcasieu
        shift: 4
        buf_req: 4
        next: end
      0x****06:
        0..3: TW14  # ingress::Millston.Ramos.Calcasieu
        0..3: W36  # ingress::HillTop.Maddock.Calcasieu
        shift: 4
        buf_req: 4
        next: Wildorado
      0x******:
        0..3: TW14  # ingress::Millston.Ramos.Calcasieu
        0..3: W36  # ingress::HillTop.Maddock.Calcasieu
        shift: 4
        buf_req: 4
        next: Dozier
    Hapeville:  # from state ingress::Hapeville
      *:
        0..1: H9  # ingress::HillTop.RossFork.Chevak
        0..3: W47
            # - bit[0..15] -> W47 bit[31..16]: ingress::Millston.Bergton.Chevak
            # - bit[16..31] -> W47 bit[15..0]: ingress::Millston.Bergton.Mendocino
        B54: 64  # value 1 -> B54 bit[6]: ingress::Millston.Bergton.$valid
        shift: 4
        buf_req: 4
        next: end
    Barnhill:  # from state ingress::Barnhill
      *:
        0..1: H9  # ingress::HillTop.RossFork.Chevak
        0..3: W47
            # - bit[0..15] -> W47 bit[31..16]: ingress::Millston.Bergton.Chevak
            # - bit[16..31] -> W47 bit[15..0]: ingress::Millston.Bergton.Mendocino
        2..3: H32  # ingress::HillTop.RossFork.Mendocino
        4..5: TH5  # ingress::Millston.Pawtucket.StarLake
        6..7: TH26  # ingress::Millston.Buckhorn.SoapLake
        B54: 192
            # - value 1 -> B54 bit[6]: ingress::Millston.Bergton.$valid
            # - value 1 -> B54 bit[7]: ingress::Millston.Pawtucket.$valid
        shift: 8
        buf_req: 8
        next: Barnhill.$split_0
    Barnhill.$split_0:  # from state ingress::Barnhill.$split_0
      *:
        H50: 1  # value 1 -> H50 bit[1..0]: ingress::HillTop.Aldan.Kearns[2:1].1-2
        H95: 1  # value 1 -> H95 bit[0]: ingress::Millston.Buckhorn.$valid
        buf_req: 0
        next: end
    NantyGlo:  # from state ingress::NantyGlo
      *:
        0..1: H9  # ingress::HillTop.RossFork.Chevak
        0..3: W47
            # - bit[0..15] -> W47 bit[31..16]: ingress::Millston.Bergton.Chevak
            # - bit[16..31] -> W47 bit[15..0]: ingress::Millston.Bergton.Mendocino
        2..3: H32  # ingress::HillTop.RossFork.Mendocino
        4..7: TW15  # ingress::Millston.Cassa.Chloride
        8..9: TH18  # ingress::Millston.Cassa.Garibaldi[31:16].16-31
        10..11: TH5  # ingress::Millston.Cassa.Garibaldi[15:0].0-15
        12..15: TW3
            # - bit[96..99] -> TW3 bit[31..28]: ingress::Millston.Cassa.Weinert
            # - bit[100..103] -> TW3 bit[27..24]: ingress::Millston.Cassa.Cornell
            # - bit[104..111] -> TW3 bit[23..16]: ingress::Millston.Cassa.Noyes
            # - bit[112..127] -> TW3 bit[15..0]: ingress::Millston.Cassa.Helton
        13: B40  # ingress::HillTop.RossFork.Kremlin
        B54: 64  # value 1 -> B54 bit[6]: ingress::Millston.Bergton.$valid
        shift: 16
        buf_req: 16
        next: NantyGlo.$split_0
    NantyGlo.$split_0:  # from state ingress::NantyGlo.$split_0
      *:
        0..1: TH26  # ingress::Millston.Buckhorn.SoapLake
        H50: 3  # value 3 -> H50 bit[1..0]: ingress::HillTop.Aldan.Kearns[2:1].1-2
        H95: 3
            # - value 1 -> H95 bit[1]: ingress::Millston.Cassa.$valid
            # - value 1 -> H95 bit[0]: ingress::Millston.Buckhorn.$valid
        shift: 2
        buf_req: 2
        next: end
    Wildorado:  # from state ingress::Wildorado
      *:
        B7: 1  # value 1 -> B7 bit[0]: ingress::HillTop.Aldan.Kearns[0:0].0-0
        H50: 2  # value 2 -> H50 bit[1..0]: ingress::HillTop.Aldan.Kearns[2:1].1-2
        buf_req: 0
        next: end
    Dozier:  # from state ingress::Dozier
      *:
        B7: 1  # value 1 -> B7 bit[0]: ingress::HillTop.Aldan.Kearns[0:0].0-0
        buf_req: 0
        next: end
    Ocracoke:  # from state ingress::Ocracoke
      *:
        0..1: H83  # bit[8..13] -> H83 bit[7..2]: ingress::HillTop.Maddock.PineCity
        B10: 48  # value 3 -> B10 bit[5..4]: ingress::HillTop.Aldan.Mystic[1:0].0-1
        buf_req: 2
        next: end
    Lynch:  # from state ingress::Lynch
      *:
        B56: 221  # value 221 -> B56 bit[7..0]: ingress::HillTop.RossFork.McCaulley[7:0].0-7
        B57: 134  # value 134 -> B57 bit[7..0]: ingress::HillTop.RossFork.McCaulley[15:8].8-15
        H34: 128  # value 4 -> H34 bit[7..5]: ingress::HillTop.RossFork.Joslin
        buf_req: 0
        next: Sanford
    Sanford:  # from state ingress::Sanford
      *:
        0: TB3
            # - bit[0..3] -> TB3 bit[7..4]: ingress::Millston.Provencal.Fayette
            # - bit[4..7] -> TB3 bit[3..0]: ingress::Millston.Provencal.PineCity[5:2].2-5
        0..1: H84  # bit[4..9] -> H84 bit[11..6]: ingress::HillTop.Sublett.PineCity
        1..2: H35
            # - bit[8..9] -> H35 bit[15..14]: ingress::Millston.Provencal.PineCity[1:0].0-1
            # - bit[10..11] -> H35 bit[13..12]: ingress::Millston.Provencal.Alameda
            # - bit[12..23] -> H35 bit[11..0]: ingress::Millston.Provencal.Maryhill[19:8].8-19
        3: B39  # ingress::Millston.Provencal.Maryhill[7:0].0-7
        4..7: TW1
            # - bit[32..47] -> TW1 bit[31..16]: ingress::Millston.Provencal.Norwood
            # - bit[48..55] -> TW1 bit[15..8]: ingress::Millston.Provencal.Dassel
            # - bit[56..63] -> TW1 bit[7..0]: ingress::Millston.Provencal.Bushland
        6: B42  # ingress::HillTop.Aldan.Vinemont
        7: B58  # ingress::HillTop.Aldan.Kenbridge
        8..9: TH2  # ingress::Millston.Provencal.Kaluaaha[127:112].112-127
        8..11: W40  # ingress::HillTop.Sublett.Kaluaaha[127:96].96-127
        10..11: TH1  # ingress::Millston.Provencal.Kaluaaha[111:96].96-111
        12..15: TW14  # ingress::Millston.Provencal.Kaluaaha[95:64].64-95
        12..15: W39  # ingress::HillTop.Sublett.Kaluaaha[95:64].64-95
        save: { byte1 : 6 }
        shift: 16
        buf_req: 16
        next: Sanford.$split_0
    Sanford.$split_0:  # from state ingress::Sanford.$split_0
      *:
        0..3: TW13  # ingress::Millston.Provencal.Kaluaaha[63:32].32-63
        0..3: W3  # ingress::HillTop.Sublett.Kaluaaha[63:32].32-63
        4..7: TW2  # ingress::Millston.Provencal.Kaluaaha[31:0].0-31
        4..7: W37  # ingress::HillTop.Sublett.Kaluaaha[31:0].0-31
        12..13: TH23  # ingress::Millston.Provencal.Calcasieu[95:80].80-95
        14: TB13  # ingress::Millston.Provencal.Calcasieu[79:72].72-79
        15: TB12  # ingress::Millston.Provencal.Calcasieu[71:64].64-71
        16..17: TH22  # ingress::Millston.Provencal.Calcasieu[63:48].48-63
        18..19: TH21  # ingress::Millston.Provencal.Calcasieu[47:32].32-47
        20..21: TH20  # ingress::Millston.Provencal.Calcasieu[31:16].16-31
        B10: 32  # value 2 -> B10 bit[5..4]: ingress::HillTop.Aldan.Mystic[1:0].0-1
        shift: 8
        buf_req: 22
        next: Sanford.$split_1
    Sanford.$split_1:  # from state ingress::Sanford.$split_1
      *:
        0..3: TW16  # ingress::Millston.Provencal.Calcasieu[127:96].96-127
        0..3: W36  # ingress::HillTop.Sublett.Calcasieu[127:96].96-127
        4..7: W46  # ingress::HillTop.Sublett.Calcasieu[95:64].64-95
        8..11: W45  # ingress::HillTop.Sublett.Calcasieu[63:32].32-63
        14..15: TH19  # ingress::Millston.Provencal.Calcasieu[15:0].0-15
        H95: 4  # value 1 -> H95 bit[2]: ingress::Millston.Provencal.$valid
        shift: 12
        buf_req: 16
        next: Sanford.$split_2
    Sanford.$split_2:  # from state ingress::Sanford.$split_2
      match: [ byte1 ]
      0x3a:
        0..3: W44  # ingress::HillTop.Sublett.Calcasieu[31:0].0-31
        shift: 4
        buf_req: 4
        next: Hapeville
      0x11:
        0..3: W44  # ingress::HillTop.Sublett.Calcasieu[31:0].0-31
        shift: 4
        buf_req: 4
        next: Barnhill
      0x06:
        0..3: W44  # ingress::HillTop.Sublett.Calcasieu[31:0].0-31
        shift: 4
        buf_req: 4
        next: NantyGlo
      0x**:
        0..3: W44  # ingress::HillTop.Sublett.Calcasieu[31:0].0-31
        shift: 4
        buf_req: 4
        next: end
    BealCity:  # from state ingress::BealCity
      *:
        0..1: H10  # ingress::Millston.Grays.Chevak
        2..3: H33  # ingress::Millston.Grays.Mendocino
        H95: 8  # value 1 -> H95 bit[3]: ingress::Millston.Grays.$valid
        shift: 4
        buf_req: 4
        next: end
    Toluca:  # from state ingress::Toluca
      match: [ half ]
      0x12b5:
        0..1: H10  # ingress::Millston.Grays.Chevak
        2..3: H33  # ingress::Millston.Grays.Mendocino
        4: TB14  # ingress::Millston.Gotham.StarLake[15:8].8-15
        4..7: W50  # bit[48..63] -> W50 bit[15..0]: ingress::Millston.Brookneal.SoapLake
        5: TB2  # ingress::Millston.Gotham.StarLake[7:0].0-7
        H56: 1  # value 1 -> H56 bit[1..0]: ingress::HillTop.Aldan.Malinta[2:1].1-2
        H95: 56
            # - value 1 -> H95 bit[3]: ingress::Millston.Grays.$valid
            # - value 1 -> H95 bit[4]: ingress::Millston.Gotham.$valid
            # - value 1 -> H95 bit[5]: ingress::Millston.Brookneal.$valid
        shift: 8
        buf_req: 8
        next: Goodwin
      0xff32:
        0..1: H10  # ingress::Millston.Grays.Chevak
        2..3: H33  # ingress::Millston.Grays.Mendocino
        4: TB14  # ingress::Millston.Gotham.StarLake[15:8].8-15
        4..7: W50  # bit[48..63] -> W50 bit[15..0]: ingress::Millston.Brookneal.SoapLake
        5: TB2  # ingress::Millston.Gotham.StarLake[7:0].0-7
        H56: 1  # value 1 -> H56 bit[1..0]: ingress::HillTop.Aldan.Malinta[2:1].1-2
        H95: 56
            # - value 1 -> H95 bit[3]: ingress::Millston.Grays.$valid
            # - value 1 -> H95 bit[4]: ingress::Millston.Gotham.$valid
            # - value 1 -> H95 bit[5]: ingress::Millston.Brookneal.$valid
        shift: 8
        buf_req: 8
        next: Goodwin
      0x****:
        0..1: H10  # ingress::Millston.Grays.Chevak
        2..3: H33  # ingress::Millston.Grays.Mendocino
        4: TB14  # ingress::Millston.Gotham.StarLake[15:8].8-15
        4..7: W50  # bit[48..63] -> W50 bit[15..0]: ingress::Millston.Brookneal.SoapLake
        5: TB2  # ingress::Millston.Gotham.StarLake[7:0].0-7
        H56: 1  # value 1 -> H56 bit[1..0]: ingress::HillTop.Aldan.Malinta[2:1].1-2
        H95: 56
            # - value 1 -> H95 bit[3]: ingress::Millston.Grays.$valid
            # - value 1 -> H95 bit[4]: ingress::Millston.Gotham.$valid
            # - value 1 -> H95 bit[5]: ingress::Millston.Brookneal.$valid
        shift: 8
        buf_req: 8
        next: end
    Goodwin:  # from state ingress::Goodwin
      *:
        0: TB0  # ingress::Millston.Hoven.Noyes
        1..2: TH4  # ingress::Millston.Hoven.Allison[23:8].8-23
        2..5: W49  # bit[32..47] -> W49 bit[15..0]: ingress::HillTop.RossFork.Everton
        3..4: TH3
            # - bit[24..31] -> TH3 bit[15..8]: ingress::Millston.Hoven.Allison[7:0].0-7
            # - bit[32..39] -> TH3 bit[7..0]: ingress::Millston.Hoven.Petrey[23:16].16-23
        5..6: TH27  # ingress::Millston.Hoven.Petrey[15:0].0-15
        6: B55  # ingress::HillTop.RossFork.Lafayette
        7: B32  # ingress::Millston.Hoven.Roosville
        8..11: W15
            # - bit[64..87] -> W15 bit[31..8]: ingress::Millston.Shirley.Adona
            # - bit[88..95] -> W15 bit[7..0]: ingress::Millston.Shirley.Connell[23:16].16-23
        12..13: H39  # ingress::Millston.Shirley.Connell[15:0].0-15
        16: B35  # ingress::Millston.Shirley.Goldsboro[7:0].0-7
        shift: 14
        buf_req: 17
        next: Goodwin.$split_0
    Goodwin.$split_0:  # from state ingress::Goodwin.$split_0
      *:
        0..1: H92  # ingress::Millston.Shirley.Goldsboro[23:8].8-23
        3..4: H93  # ingress::Millston.Shirley.Fabens[23:8].8-23
        5: B37  # ingress::Millston.Shirley.Fabens[7:0].0-7
        6: B57  # ingress::HillTop.RossFork.McCaulley[15:8].8-15
        6..7: H94  # ingress::Millston.Shirley.McCaulley
        7: B56  # ingress::HillTop.RossFork.McCaulley[7:0].0-7
        H34: 32  # value 1 -> H34 bit[7..5]: ingress::HillTop.RossFork.Joslin
        save: { byte1 : 8, half : 6..7 }
        shift: 8
        buf_req: 9
        next: Goodwin.$split_1
    Goodwin.$split_1:  # from state ingress::Goodwin.$split_1
      match: [ byte1, half ]
      0x**0806:
        H95: 384
            # - value 1 -> H95 bit[7]: ingress::Millston.Hoven.$valid
            # - value 1 -> H95 bit[8]: ingress::Millston.Shirley.$valid
        save: { half : 0..1, byte0 : 2, byte1 : 3 }
        buf_req: 4
        next: Corvallis
      0x450800:
        H95: 384
            # - value 1 -> H95 bit[7]: ingress::Millston.Hoven.$valid
            # - value 1 -> H95 bit[8]: ingress::Millston.Shirley.$valid
        buf_req: 0
        next: McBrides
      0x*50800:
        H95: 384
            # - value 1 -> H95 bit[7]: ingress::Millston.Hoven.$valid
            # - value 1 -> H95 bit[8]: ingress::Millston.Shirley.$valid
        buf_req: 0
        next: Bernice
      0x**0800:
        H95: 384
            # - value 1 -> H95 bit[7]: ingress::Millston.Hoven.$valid
            # - value 1 -> H95 bit[8]: ingress::Millston.Shirley.$valid
        buf_req: 0
        next: Ocracoke
      0x6*86dd:
        H95: 384
            # - value 1 -> H95 bit[7]: ingress::Millston.Hoven.$valid
            # - value 1 -> H95 bit[8]: ingress::Millston.Shirley.$valid
        buf_req: 0
        next: Sanford
      0x**86dd:
        H95: 384
            # - value 1 -> H95 bit[7]: ingress::Millston.Hoven.$valid
            # - value 1 -> H95 bit[8]: ingress::Millston.Shirley.$valid
        buf_req: 0
        next: Greenwood
      0x******:
        H95: 384
            # - value 1 -> H95 bit[7]: ingress::Millston.Hoven.$valid
            # - value 1 -> H95 bit[8]: ingress::Millston.Shirley.$valid
        buf_req: 0
        next: end
    Bernice:  # from state ingress::Bernice
      *:
        B10: 16  # value 1 -> B10 bit[5..4]: ingress::HillTop.Aldan.Mystic[1:0].0-1
        B14: 1  # value 1 -> B14 bit[0]: ingress::HillTop.Aldan.Mystic[2:2].2-2
        buf_req: 0
        next: end
    Greenwood:  # from state ingress::Greenwood
      *:
        B10: 32  # value 2 -> B10 bit[5..4]: ingress::HillTop.Aldan.Mystic[1:0].0-1
        B14: 1  # value 1 -> B14 bit[0]: ingress::HillTop.Aldan.Mystic[2:2].2-2
        buf_req: 0
        next: end
    Readsboro:  # from state ingress::Readsboro
      *:
        0..1: H10  # ingress::Millston.Grays.Chevak
        2..3: H33  # ingress::Millston.Grays.Mendocino
        4..7: TW1  # ingress::Millston.Osyka.Chloride
        8..11: TW2  # ingress::Millston.Osyka.Garibaldi
        12: TB0
            # - bit[96..99] -> TB0 bit[7..4]: ingress::Millston.Osyka.Weinert
            # - bit[100..103] -> TB0 bit[3..0]: ingress::Millston.Osyka.Cornell
        13: B32  # ingress::Millston.Osyka.Noyes
        14..15: TH0  # ingress::Millston.Osyka.Helton
        14..17: W50  # bit[128..143] -> W50 bit[15..0]: ingress::Millston.Brookneal.SoapLake
        H56: 3  # value 3 -> H56 bit[1..0]: ingress::HillTop.Aldan.Malinta[2:1].1-2
        shift: 18
        buf_req: 18
        next: Readsboro.$split_0
    Readsboro.$split_0:  # from state ingress::Readsboro.$split_0
      *:
        H95: 104
            # - value 1 -> H95 bit[3]: ingress::Millston.Grays.$valid
            # - value 1 -> H95 bit[6]: ingress::Millston.Osyka.$valid
            # - value 1 -> H95 bit[5]: ingress::Millston.Brookneal.$valid
        buf_req: 0
        next: end
    Astor:  # from state ingress::Astor
      match: [ half, byte0, byte1 ]
      0x00000800:
        0..1: TH0
            # - bit[0] -> TH0 bit[15]: ingress::Millston.Broadwell.Palmhurst
            # - bit[1] -> TH0 bit[14]: ingress::Millston.Broadwell.Comfrey
            # - bit[2] -> TH0 bit[13]: ingress::Millston.Broadwell.Kalida
            # - bit[3] -> TH0 bit[12]: ingress::Millston.Broadwell.Wallula
            # - bit[4] -> TH0 bit[11]: ingress::Millston.Broadwell.Dennison
            # - bit[5..7] -> TH0 bit[10..8]: ingress::Millston.Broadwell.Fairhaven
            # - bit[8..12] -> TH0 bit[7..3]: ingress::Millston.Broadwell.Noyes
            # - bit[13..15] -> TH0 bit[2..0]: ingress::Millston.Broadwell.Woodfield
        2: TB2  # ingress::Millston.Broadwell.LasVegas[15:8].8-15
        3: TB0  # ingress::Millston.Broadwell.LasVegas[7:0].0-7
        H95: 512  # value 1 -> H95 bit[9]: ingress::Millston.Broadwell.$valid
        save: { byte1 : 4 }
        shift: 4
        buf_req: 5
        next: Hohenwald
      0x000086dd:
        0..1: TH0
            # - bit[0] -> TH0 bit[15]: ingress::Millston.Broadwell.Palmhurst
            # - bit[1] -> TH0 bit[14]: ingress::Millston.Broadwell.Comfrey
            # - bit[2] -> TH0 bit[13]: ingress::Millston.Broadwell.Kalida
            # - bit[3] -> TH0 bit[12]: ingress::Millston.Broadwell.Wallula
            # - bit[4] -> TH0 bit[11]: ingress::Millston.Broadwell.Dennison
            # - bit[5..7] -> TH0 bit[10..8]: ingress::Millston.Broadwell.Fairhaven
            # - bit[8..12] -> TH0 bit[7..3]: ingress::Millston.Broadwell.Noyes
            # - bit[13..15] -> TH0 bit[2..0]: ingress::Millston.Broadwell.Woodfield
        2: TB2  # ingress::Millston.Broadwell.LasVegas[15:8].8-15
        3: TB0  # ingress::Millston.Broadwell.LasVegas[7:0].0-7
        H95: 512  # value 1 -> H95 bit[9]: ingress::Millston.Broadwell.$valid
        save: { byte1 : 4 }
        shift: 4
        buf_req: 5
        next: Eolia
      0x********:
        0..1: TH0
            # - bit[0] -> TH0 bit[15]: ingress::Millston.Broadwell.Palmhurst
            # - bit[1] -> TH0 bit[14]: ingress::Millston.Broadwell.Comfrey
            # - bit[2] -> TH0 bit[13]: ingress::Millston.Broadwell.Kalida
            # - bit[3] -> TH0 bit[12]: ingress::Millston.Broadwell.Wallula
            # - bit[4] -> TH0 bit[11]: ingress::Millston.Broadwell.Dennison
            # - bit[5..7] -> TH0 bit[10..8]: ingress::Millston.Broadwell.Fairhaven
            # - bit[8..12] -> TH0 bit[7..3]: ingress::Millston.Broadwell.Noyes
            # - bit[13..15] -> TH0 bit[2..0]: ingress::Millston.Broadwell.Woodfield
        2: TB2  # ingress::Millston.Broadwell.LasVegas[15:8].8-15
        3: TB0  # ingress::Millston.Broadwell.LasVegas[7:0].0-7
        H95: 512  # value 1 -> H95 bit[9]: ingress::Millston.Broadwell.$valid
        shift: 4
        buf_req: 4
        next: end
    Hohenwald:  # from state ingress::Hohenwald
      match: [ byte1 ]
      0x4*:
        save: { byte1 : 0 }
        buf_req: 1
        next: Sumner
      0x**:
        buf_req: 0
        next: end
    Sumner:  # from state ingress::Sumner
      match: [ byte1 ]
      0x*5:
        H34: 64  # value 2 -> H34 bit[7..5]: ingress::HillTop.RossFork.Joslin
        buf_req: 0
        next: McBrides
      0x**:
        H34: 64  # value 2 -> H34 bit[7..5]: ingress::HillTop.RossFork.Joslin
        buf_req: 0
        next: Ocracoke
    Eolia:  # from state ingress::Eolia
      match: [ byte1 ]
      0x6*:
        H34: 64  # value 2 -> H34 bit[7..5]: ingress::HillTop.RossFork.Joslin
        buf_req: 0
        next: Sanford
      0x**:
        buf_req: 0
        next: end
    Greenland:  # from state ingress::Greenland
      *:
        B8: 1  # value 1 -> B8 bit[0]: ingress::HillTop.Aldan.Malinta[0:0].0-0
        H56: 2  # value 2 -> H56 bit[1..0]: ingress::HillTop.Aldan.Malinta[2:1].1-2
        buf_req: 0
        next: end
    Shingler:  # from state ingress::Shingler
      *:
        B8: 1  # value 1 -> B8 bit[0]: ingress::HillTop.Aldan.Malinta[0:0].0-0
        buf_req: 0
        next: end
    Gastonia:  # from state ingress::Gastonia
      *:
        B13: 5  # value 5 -> B13 bit[3..0]: ingress::HillTop.Aldan.Parkville
        buf_req: 0
        next: end
    Hillsview:  # from state ingress::Hillsview
      *:
        0..1: H89  # bit[8..13] -> H89 bit[7..2]: ingress::Millston.GlenAvon.PineCity
        8: B59  # ingress::HillTop.RossFork.Exton
        9: B33  # ingress::Millston.GlenAvon.Ocoee
        16..19: W33  # ingress::Millston.GlenAvon.Calcasieu
        B13: 3  # value 3 -> B13 bit[3..0]: ingress::HillTop.Aldan.Parkville
        buf_req: 20
        next: end
    Westbury:  # from state ingress::Westbury
      *:
        0..1: H89
            # - bit[0..3] -> H89 bit[15..12]: ingress::Millston.Maumee.Fayette
            # - bit[4..9] -> H89 bit[11..6]: ingress::Millston.Maumee.PineCity
            # - bit[10..11] -> H89 bit[5..4]: ingress::Millston.Maumee.Alameda
            # - bit[12..15] -> H89 bit[3..0]: ingress::Millston.Maumee.Maryhill[19:16].16-19
        2..3: H38  # ingress::Millston.Maumee.Maryhill[15:0].0-15
        4: B35  # ingress::Millston.Maumee.Norwood[15:8].8-15
        5: B37  # ingress::Millston.Maumee.Norwood[7:0].0-7
        6: B33  # ingress::Millston.Maumee.Dassel
        7: TB1  # ingress::Millston.Maumee.Bushland
        8..11: W35  # ingress::Millston.Maumee.Kaluaaha[127:96].96-127
        12..15: W34  # ingress::Millston.Maumee.Kaluaaha[95:64].64-95
        16..19: W15  # ingress::Millston.Maumee.Kaluaaha[63:32].32-63
        20..23: W33  # ingress::Millston.Maumee.Kaluaaha[31:0].0-31
        H95: 1024  # value 1 -> H95 bit[10]: ingress::Millston.Maumee.$valid
        save: { byte1 : 6 }
        shift: 7
        buf_req: 24
        next: Westbury.$split_0
    Westbury.$split_0:  # from state ingress::Westbury.$split_0
      *:
        0: B59  # ingress::HillTop.RossFork.Exton
        17..20: W32  # ingress::Millston.Maumee.Calcasieu[127:96].96-127
        21..24: W43  # ingress::Millston.Maumee.Calcasieu[95:64].64-95
        25..28: W42  # ingress::Millston.Maumee.Calcasieu[63:32].32-63
        B13: 2  # value 2 -> B13 bit[3..0]: ingress::HillTop.Aldan.Parkville
        shift: 29
        buf_req: 29
        next: Westbury.$split_1
    Westbury.$split_1:  # from state ingress::Westbury.$split_1
      match: [ byte1 ]
      0x3a:
        0..3: W41  # ingress::Millston.Maumee.Calcasieu[31:0].0-31
        shift: 4
        buf_req: 4
        next: BealCity
      0x11:
        0..3: W41  # ingress::Millston.Maumee.Calcasieu[31:0].0-31
        save: { half : 6..7 }
        shift: 4
        buf_req: 8
        next: Makawao
      0x06:
        0..3: W41  # ingress::Millston.Maumee.Calcasieu[31:0].0-31
        shift: 4
        buf_req: 4
        next: Readsboro
      0x04:
        0..3: W41  # ingress::Millston.Maumee.Calcasieu[31:0].0-31
        save: { byte1 : 4 }
        shift: 4
        buf_req: 5
        next: Baytown
      0x29:
        0..3: W41  # ingress::Millston.Maumee.Calcasieu[31:0].0-31
        shift: 4
        buf_req: 4
        next: Mather
      0x**:
        0..3: W41  # ingress::Millston.Maumee.Calcasieu[31:0].0-31
        shift: 4
        buf_req: 4
        next: end
    Makawao:  # from state ingress::Makawao
      match: [ half ]
      0x****:
        0..1: H10  # ingress::Millston.Grays.Chevak
        2..3: H33  # ingress::Millston.Grays.Mendocino
        4: TB14  # ingress::Millston.Gotham.StarLake[15:8].8-15
        4..7: W50  # bit[48..63] -> W50 bit[15..0]: ingress::Millston.Brookneal.SoapLake
        5: TB2  # ingress::Millston.Gotham.StarLake[7:0].0-7
        H56: 1  # value 1 -> H56 bit[1..0]: ingress::HillTop.Aldan.Malinta[2:1].1-2
        H95: 56
            # - value 1 -> H95 bit[3]: ingress::Millston.Grays.$valid
            # - value 1 -> H95 bit[4]: ingress::Millston.Gotham.$valid
            # - value 1 -> H95 bit[5]: ingress::Millston.Brookneal.$valid
        shift: 8
        buf_req: 8
        next: end
    Mather:  # from state ingress::Mather
      *:
        B56: 221  # value 221 -> B56 bit[7..0]: ingress::HillTop.RossFork.McCaulley[7:0].0-7
        B57: 134  # value 134 -> B57 bit[7..0]: ingress::HillTop.RossFork.McCaulley[15:8].8-15
        H34: 128  # value 4 -> H34 bit[7..5]: ingress::HillTop.RossFork.Joslin
        buf_req: 0
        next: Sanford
    Gambrills:  # from state ingress::Gambrills
      *:
        B13: 6  # value 6 -> B13 bit[3..0]: ingress::HillTop.Aldan.Parkville
        buf_req: 0
        next: end
    Masontown:  # from state ingress::Masontown
      *:
        B13: 8  # value 8 -> B13 bit[3..0]: ingress::HillTop.Aldan.Parkville
        buf_req: 0
        next: end
deparser ingress:
  dictionary:
    H6: B54(0)
        # - bit[15..8]: ingress::Millston.Belgrade.Roachdale if ingress::Millston.Belgrade.$valid
        # - bit[7..5]: ingress::Millston.Belgrade.Rugby if ingress::Millston.Belgrade.$valid
        # - bit[4]: ingress::Millston.Belgrade.Davie if ingress::Millston.Belgrade.$valid
        # - bit[3..0]: ingress::Millston.Belgrade.Cacao if ingress::Millston.Belgrade.$valid
    B36: B54(0)  # ingress::Millston.Belgrade.Mankato if ingress::Millston.Belgrade.$valid
    W13: B54(0)
        # - bit[31..8]: ingress::Millston.Belgrade.Virgil if ingress::Millston.Belgrade.$valid
        # - bit[7..0]: ingress::Millston.Belgrade.Florin.16-23 if ingress::Millston.Belgrade.$valid
    H63: B54(0)  # ingress::Millston.Belgrade.Florin.0-15 if ingress::Millston.Belgrade.$valid
    TW12: B54(0)  # ingress::Millston.Belgrade.Ronan if ingress::Millston.Belgrade.$valid
    H51: B54(0)  # ingress::Millston.Belgrade.Corinth if ingress::Millston.Belgrade.$valid
    B11: B54(0)
        # - bit[7..4]: ingress::Millston.Belgrade.__pad_0 if ingress::Millston.Belgrade.$valid
        # - bit[3..1]: ingress::Millston.Belgrade.Union if ingress::Millston.Belgrade.$valid
        # - bit[0]: ingress::Millston.Belgrade.Rockport if ingress::Millston.Belgrade.$valid
    B9: B54(0)
        # - bit[7..6]: ingress::Millston.Belgrade.__pad_1 if ingress::Millston.Belgrade.$valid
        # - bit[5]: ingress::Millston.Belgrade.Anacortes if ingress::Millston.Belgrade.$valid
        # - bit[4]: ingress::Millston.Belgrade.Shabbona if ingress::Millston.Belgrade.$valid
        # - bit[3..1]: ingress::Millston.Belgrade.Allgood if ingress::Millston.Belgrade.$valid
        # - bit[0]: ingress::Millston.Belgrade.Waipahu if ingress::Millston.Belgrade.$valid
    B34: B54(0)
        # - bit[7..1]: ingress::Millston.Belgrade.__pad_2 if ingress::Millston.Belgrade.$valid
        # - bit[0]: ingress::Millston.Belgrade.Freeburg if ingress::Millston.Belgrade.$valid
    W1: B54(0)
        # - bit[31..8]: ingress::Millston.Belgrade.__pad_3 if ingress::Millston.Belgrade.$valid
        # - bit[7..2]: ingress::Millston.Belgrade.Sudbury if ingress::Millston.Belgrade.$valid
        # - bit[1..0]: ingress::Millston.Belgrade.Selawik if ingress::Millston.Belgrade.$valid
    B7: B54(0)
        # - bit[7..3]: ingress::Millston.Belgrade.__pad_4 if ingress::Millston.Belgrade.$valid
        # - bit[2..0]: ingress::Millston.Belgrade.Willard if ingress::Millston.Belgrade.$valid
    H90: B54(0)
        # - bit[15..6]: ingress::Millston.Belgrade.__pad_5 if ingress::Millston.Belgrade.$valid
        # - bit[5..0]: ingress::Millston.Belgrade.Matheson if ingress::Millston.Belgrade.$valid
    H48: B54(0)
        # - bit[15..9]: ingress::Millston.Belgrade.__pad_6 if ingress::Millston.Belgrade.$valid
        # - bit[8..0]: ingress::Millston.Belgrade.Chaska if ingress::Millston.Belgrade.$valid
    H2: B54(0)
        # - bit[15..12]: ingress::Millston.Belgrade.__pad_7 if ingress::Millston.Belgrade.$valid
        # - bit[11..0]: ingress::Millston.Belgrade.Requa if ingress::Millston.Belgrade.$valid
    H4: B54(0)
        # - bit[15..12]: ingress::Millston.Belgrade.__pad_8 if ingress::Millston.Belgrade.$valid
        # - bit[11..0]: ingress::Millston.Belgrade.Bayshore if ingress::Millston.Belgrade.$valid
    H3: B54(0)
        # - bit[15..12]: ingress::Millston.Belgrade.__pad_9 if ingress::Millston.Belgrade.$valid
        # - bit[11..0]: ingress::Millston.Belgrade.Florien if ingress::Millston.Belgrade.$valid
    W12: B54(2)
        # - bit[31..8]: ingress::Millston.Calabash.Adona if ingress::Millston.Calabash.$valid
        # - bit[7..0]: ingress::Millston.Calabash.Connell.16-23 if ingress::Millston.Calabash.$valid
    H54: B54(2)  # ingress::Millston.Calabash.Connell.0-15 if ingress::Millston.Calabash.$valid
    H36: B54(2)  # ingress::Millston.Calabash.Goldsboro.8-23 if ingress::Millston.Calabash.$valid
    W6: B54(2)
        # - bit[31..24]: ingress::Millston.Calabash.Goldsboro.0-7 if ingress::Millston.Calabash.$valid
        # - bit[23..0]: ingress::Millston.Calabash.Fabens if ingress::Millston.Calabash.$valid
    B53: B54(2)  # ingress::Millston.Calabash.McCaulley.8-15 if ingress::Millston.Calabash.$valid
    B50: B54(2)  # ingress::Millston.Calabash.McCaulley.0-7 if ingress::Millston.Calabash.$valid
    H0: B12(1)
        # - bit[15..13]: ingress::Millston.Wondervu[0].Higginson if ingress::Millston.Wondervu[0].$valid
        # - bit[12]: ingress::Millston.Wondervu[0].Oriskany if ingress::Millston.Wondervu[0].$valid
        # - bit[11..0]: ingress::Millston.Wondervu[0].Bowden if ingress::Millston.Wondervu[0].$valid
    B51: B12(1)  # ingress::Millston.Wondervu[0].McCaulley.8-15 if ingress::Millston.Wondervu[0].$valid
    B48: B12(1)  # ingress::Millston.Wondervu[0].McCaulley.0-7 if ingress::Millston.Wondervu[0].$valid
    TH24: B12(0)
        # - bit[15..13]: ingress::Millston.Wondervu[1].Higginson if ingress::Millston.Wondervu[1].$valid
        # - bit[12]: ingress::Millston.Wondervu[1].Oriskany if ingress::Millston.Wondervu[1].$valid
        # - bit[11..0]: ingress::Millston.Wondervu[1].Bowden if ingress::Millston.Wondervu[1].$valid
    B52: B12(0)  # ingress::Millston.Wondervu[1].McCaulley.8-15 if ingress::Millston.Wondervu[1].$valid
    B49: B12(0)  # ingress::Millston.Wondervu[1].McCaulley.0-7 if ingress::Millston.Wondervu[1].$valid
    H89: B54(4)
        # - bit[15..12]: ingress::Millston.GlenAvon.Fayette if ingress::Millston.GlenAvon.$valid
        # - bit[11..8]: ingress::Millston.GlenAvon.Osterdock if ingress::Millston.GlenAvon.$valid
        # - bit[7..2]: ingress::Millston.GlenAvon.PineCity if ingress::Millston.GlenAvon.$valid
        # - bit[1..0]: ingress::Millston.GlenAvon.Alameda if ingress::Millston.GlenAvon.$valid
    H38: B54(4)  # ingress::Millston.GlenAvon.Rexville if ingress::Millston.GlenAvon.$valid
    TW0: B54(4)
        # - bit[31..16]: ingress::Millston.GlenAvon.Quinwood if ingress::Millston.GlenAvon.$valid
        # - bit[15]: ingress::Millston.GlenAvon.Marfa if ingress::Millston.GlenAvon.$valid
        # - bit[14]: ingress::Millston.GlenAvon.Palatine if ingress::Millston.GlenAvon.$valid
        # - bit[13]: ingress::Millston.GlenAvon.Mabelle if ingress::Millston.GlenAvon.$valid
        # - bit[12..0]: ingress::Millston.GlenAvon.Hoagland if ingress::Millston.GlenAvon.$valid
    TB1: B54(4)  # ingress::Millston.GlenAvon.Exton if ingress::Millston.GlenAvon.$valid
    B33: B54(4)  # ingress::Millston.GlenAvon.Ocoee if ingress::Millston.GlenAvon.$valid
    TH25: B54(4)  # ingress::Millston.GlenAvon.Hackett if ingress::Millston.GlenAvon.$valid
    W32: B54(4)  # ingress::Millston.GlenAvon.Kaluaaha if ingress::Millston.GlenAvon.$valid
    W33: B54(4)  # ingress::Millston.GlenAvon.Calcasieu if ingress::Millston.GlenAvon.$valid
    H89: H95(10)
        # - bit[15..12]: ingress::Millston.Maumee.Fayette if ingress::Millston.Maumee.$valid
        # - bit[11..6]: ingress::Millston.Maumee.PineCity if ingress::Millston.Maumee.$valid
        # - bit[5..4]: ingress::Millston.Maumee.Alameda if ingress::Millston.Maumee.$valid
        # - bit[3..0]: ingress::Millston.Maumee.Maryhill.16-19 if ingress::Millston.Maumee.$valid
    H38: H95(10)  # ingress::Millston.Maumee.Maryhill.0-15 if ingress::Millston.Maumee.$valid
    B35: H95(10)  # ingress::Millston.Maumee.Norwood.8-15 if ingress::Millston.Maumee.$valid
    B37: H95(10)  # ingress::Millston.Maumee.Norwood.0-7 if ingress::Millston.Maumee.$valid
    B33: H95(10)  # ingress::Millston.Maumee.Dassel if ingress::Millston.Maumee.$valid
    TB1: H95(10)  # ingress::Millston.Maumee.Bushland if ingress::Millston.Maumee.$valid
    W35: H95(10)  # ingress::Millston.Maumee.Kaluaaha.96-127 if ingress::Millston.Maumee.$valid
    W34: H95(10)  # ingress::Millston.Maumee.Kaluaaha.64-95 if ingress::Millston.Maumee.$valid
    W15: H95(10)  # ingress::Millston.Maumee.Kaluaaha.32-63 if ingress::Millston.Maumee.$valid
    W33: H95(10)  # ingress::Millston.Maumee.Kaluaaha.0-31 if ingress::Millston.Maumee.$valid
    W32: H95(10)  # ingress::Millston.Maumee.Calcasieu.96-127 if ingress::Millston.Maumee.$valid
    W43: H95(10)  # ingress::Millston.Maumee.Calcasieu.64-95 if ingress::Millston.Maumee.$valid
    W42: H95(10)  # ingress::Millston.Maumee.Calcasieu.32-63 if ingress::Millston.Maumee.$valid
    W41: H95(10)  # ingress::Millston.Maumee.Calcasieu.0-31 if ingress::Millston.Maumee.$valid
    TH0: H95(9)
        # - bit[15]: ingress::Millston.Broadwell.Palmhurst if ingress::Millston.Broadwell.$valid
        # - bit[14]: ingress::Millston.Broadwell.Comfrey if ingress::Millston.Broadwell.$valid
        # - bit[13]: ingress::Millston.Broadwell.Kalida if ingress::Millston.Broadwell.$valid
        # - bit[12]: ingress::Millston.Broadwell.Wallula if ingress::Millston.Broadwell.$valid
        # - bit[11]: ingress::Millston.Broadwell.Dennison if ingress::Millston.Broadwell.$valid
        # - bit[10..8]: ingress::Millston.Broadwell.Fairhaven if ingress::Millston.Broadwell.$valid
        # - bit[7..3]: ingress::Millston.Broadwell.Noyes if ingress::Millston.Broadwell.$valid
        # - bit[2..0]: ingress::Millston.Broadwell.Woodfield if ingress::Millston.Broadwell.$valid
    TB2: H95(9)  # ingress::Millston.Broadwell.LasVegas.8-15 if ingress::Millston.Broadwell.$valid
    TB0: H95(9)  # ingress::Millston.Broadwell.LasVegas.0-7 if ingress::Millston.Broadwell.$valid
    H10: H95(3)  # ingress::Millston.Grays.Chevak if ingress::Millston.Grays.$valid
    H33: H95(3)  # ingress::Millston.Grays.Mendocino if ingress::Millston.Grays.$valid
    TB14: H95(4)  # ingress::Millston.Gotham.StarLake.8-15 if ingress::Millston.Gotham.$valid
    TB2: H95(4)  # ingress::Millston.Gotham.StarLake.0-7 if ingress::Millston.Gotham.$valid
    TW1: H95(6)  # ingress::Millston.Osyka.Chloride if ingress::Millston.Osyka.$valid
    TW2: H95(6)  # ingress::Millston.Osyka.Garibaldi if ingress::Millston.Osyka.$valid
    TB0: H95(6)
        # - bit[7..4]: ingress::Millston.Osyka.Weinert if ingress::Millston.Osyka.$valid
        # - bit[3..0]: ingress::Millston.Osyka.Cornell if ingress::Millston.Osyka.$valid
    B32: H95(6)  # ingress::Millston.Osyka.Noyes if ingress::Millston.Osyka.$valid
    TH0: H95(6)  # ingress::Millston.Osyka.Helton if ingress::Millston.Osyka.$valid
    checksum 0: H95(5)  # ingress::Millston.Brookneal.$valid
    TB0: H95(7)  # ingress::Millston.Hoven.Noyes if ingress::Millston.Hoven.$valid
    TH4: H95(7)  # ingress::Millston.Hoven.Allison.8-23 if ingress::Millston.Hoven.$valid
    TH3: H95(7)
        # - bit[15..8]: ingress::Millston.Hoven.Allison.0-7 if ingress::Millston.Hoven.$valid
        # - bit[7..0]: ingress::Millston.Hoven.Petrey.16-23 if ingress::Millston.Hoven.$valid
    TH27: H95(7)  # ingress::Millston.Hoven.Petrey.0-15 if ingress::Millston.Hoven.$valid
    B32: H95(7)  # ingress::Millston.Hoven.Roosville if ingress::Millston.Hoven.$valid
    W15: H95(8)
        # - bit[31..8]: ingress::Millston.Shirley.Adona if ingress::Millston.Shirley.$valid
        # - bit[7..0]: ingress::Millston.Shirley.Connell.16-23 if ingress::Millston.Shirley.$valid
    H39: H95(8)  # ingress::Millston.Shirley.Connell.0-15 if ingress::Millston.Shirley.$valid
    H92: H95(8)  # ingress::Millston.Shirley.Goldsboro.8-23 if ingress::Millston.Shirley.$valid
    B35: H95(8)  # ingress::Millston.Shirley.Goldsboro.0-7 if ingress::Millston.Shirley.$valid
    H93: H95(8)  # ingress::Millston.Shirley.Fabens.8-23 if ingress::Millston.Shirley.$valid
    B37: H95(8)  # ingress::Millston.Shirley.Fabens.0-7 if ingress::Millston.Shirley.$valid
    H94: H95(8)  # ingress::Millston.Shirley.McCaulley if ingress::Millston.Shirley.$valid
    TW1: B54(5)
        # - bit[31..28]: ingress::Millston.Ramos.Fayette if ingress::Millston.Ramos.$valid
        # - bit[27..24]: ingress::Millston.Ramos.Osterdock if ingress::Millston.Ramos.$valid
        # - bit[23..18]: ingress::Millston.Ramos.PineCity if ingress::Millston.Ramos.$valid
        # - bit[17..16]: ingress::Millston.Ramos.Alameda if ingress::Millston.Ramos.$valid
        # - bit[15..0]: ingress::Millston.Ramos.Rexville if ingress::Millston.Ramos.$valid
    TW2: B54(5)
        # - bit[31..16]: ingress::Millston.Ramos.Quinwood if ingress::Millston.Ramos.$valid
        # - bit[15]: ingress::Millston.Ramos.Marfa if ingress::Millston.Ramos.$valid
        # - bit[14]: ingress::Millston.Ramos.Palatine if ingress::Millston.Ramos.$valid
        # - bit[13]: ingress::Millston.Ramos.Mabelle if ingress::Millston.Ramos.$valid
        # - bit[12..0]: ingress::Millston.Ramos.Hoagland if ingress::Millston.Ramos.$valid
    TH1: B54(5)
        # - bit[15..8]: ingress::Millston.Ramos.Exton if ingress::Millston.Ramos.$valid
        # - bit[7..0]: ingress::Millston.Ramos.Ocoee if ingress::Millston.Ramos.$valid
    TH2: B54(5)  # ingress::Millston.Ramos.Hackett if ingress::Millston.Ramos.$valid
    TW13: B54(5)  # ingress::Millston.Ramos.Kaluaaha if ingress::Millston.Ramos.$valid
    TW14: B54(5)  # ingress::Millston.Ramos.Calcasieu if ingress::Millston.Ramos.$valid
    TB3: H95(2)
        # - bit[7..4]: ingress::Millston.Provencal.Fayette if ingress::Millston.Provencal.$valid
        # - bit[3..0]: ingress::Millston.Provencal.PineCity.2-5 if ingress::Millston.Provencal.$valid
    H35: H95(2)
        # - bit[15..14]: ingress::Millston.Provencal.PineCity.0-1 if ingress::Millston.Provencal.$valid
        # - bit[13..12]: ingress::Millston.Provencal.Alameda if ingress::Millston.Provencal.$valid
        # - bit[11..0]: ingress::Millston.Provencal.Maryhill.8-19 if ingress::Millston.Provencal.$valid
    B39: H95(2)  # ingress::Millston.Provencal.Maryhill.0-7 if ingress::Millston.Provencal.$valid
    TW1: H95(2)
        # - bit[31..16]: ingress::Millston.Provencal.Norwood if ingress::Millston.Provencal.$valid
        # - bit[15..8]: ingress::Millston.Provencal.Dassel if ingress::Millston.Provencal.$valid
        # - bit[7..0]: ingress::Millston.Provencal.Bushland if ingress::Millston.Provencal.$valid
    TH2: H95(2)  # ingress::Millston.Provencal.Kaluaaha.112-127 if ingress::Millston.Provencal.$valid
    TH1: H95(2)  # ingress::Millston.Provencal.Kaluaaha.96-111 if ingress::Millston.Provencal.$valid
    TW14: H95(2)  # ingress::Millston.Provencal.Kaluaaha.64-95 if ingress::Millston.Provencal.$valid
    TW13: H95(2)  # ingress::Millston.Provencal.Kaluaaha.32-63 if ingress::Millston.Provencal.$valid
    TW2: H95(2)  # ingress::Millston.Provencal.Kaluaaha.0-31 if ingress::Millston.Provencal.$valid
    TW16: H95(2)  # ingress::Millston.Provencal.Calcasieu.96-127 if ingress::Millston.Provencal.$valid
    TH23: H95(2)  # ingress::Millston.Provencal.Calcasieu.80-95 if ingress::Millston.Provencal.$valid
    TB13: H95(2)  # ingress::Millston.Provencal.Calcasieu.72-79 if ingress::Millston.Provencal.$valid
    TB12: H95(2)  # ingress::Millston.Provencal.Calcasieu.64-71 if ingress::Millston.Provencal.$valid
    TH22: H95(2)  # ingress::Millston.Provencal.Calcasieu.48-63 if ingress::Millston.Provencal.$valid
    TH21: H95(2)  # ingress::Millston.Provencal.Calcasieu.32-47 if ingress::Millston.Provencal.$valid
    TH20: H95(2)  # ingress::Millston.Provencal.Calcasieu.16-31 if ingress::Millston.Provencal.$valid
    TH19: H95(2)  # ingress::Millston.Provencal.Calcasieu.0-15 if ingress::Millston.Provencal.$valid
    W47: B54(6)
        # - bit[31..16]: ingress::Millston.Bergton.Chevak if ingress::Millston.Bergton.$valid
        # - bit[15..0]: ingress::Millston.Bergton.Mendocino if ingress::Millston.Bergton.$valid
    TW15: H95(1)  # ingress::Millston.Cassa.Chloride if ingress::Millston.Cassa.$valid
    TH18: H95(1)  # ingress::Millston.Cassa.Garibaldi.16-31 if ingress::Millston.Cassa.$valid
    TH5: H95(1)  # ingress::Millston.Cassa.Garibaldi.0-15 if ingress::Millston.Cassa.$valid
    TW3: H95(1)
        # - bit[31..28]: ingress::Millston.Cassa.Weinert if ingress::Millston.Cassa.$valid
        # - bit[27..24]: ingress::Millston.Cassa.Cornell if ingress::Millston.Cassa.$valid
        # - bit[23..16]: ingress::Millston.Cassa.Noyes if ingress::Millston.Cassa.$valid
        # - bit[15..0]: ingress::Millston.Cassa.Helton if ingress::Millston.Cassa.$valid
    TH5: B54(7)  # ingress::Millston.Pawtucket.StarLake if ingress::Millston.Pawtucket.$valid
    TH26: H95(0)  # ingress::Millston.Buckhorn.SoapLake if ingress::Millston.Buckhorn.$valid
    TW1: B54(3)
        # - bit[31..16]: ingress::Millston.Rainelle.Conner if ingress::Millston.Rainelle.$valid
        # - bit[15..0]: ingress::Millston.Rainelle.Ledoux if ingress::Millston.Rainelle.$valid
    TH0: B54(3)
        # - bit[15..8]: ingress::Millston.Rainelle.Steger if ingress::Millston.Rainelle.$valid
        # - bit[7..0]: ingress::Millston.Rainelle.Quogue if ingress::Millston.Rainelle.$valid
    H35: B54(3)  # ingress::Millston.Rainelle.Findlay if ingress::Millston.Rainelle.$valid
  checksum 0: 
    - W51: { }  # ingress::HillTop.RossFork.Bucktown
    - W50(0..15): { }  # bit[15..0]: ingress::Millston.Brookneal.SoapLake
  egress_unicast_port: W2(0..8)  # bit[8..0]: ingress::ig_intr_md_for_tm.ucast_egress_port
  icos: B8(0..2)  # bit[2..0]: ingress::ig_intr_md_for_tm.ingress_cos
  qid: B13(0..4)  # bit[4..0]: ingress::ig_intr_md_for_tm.qid
  copy_to_cpu: H52(0..0)  # bit[0]: ingress::ig_intr_md_for_tm.copy_to_cpu
  xid: H8  # ingress::ig_intr_md_for_tm.level1_exclusion_id
  yid: W9(0..8)  # bit[8..0]: ingress::ig_intr_md_for_tm.level2_exclusion_id
  rid: H5  # ingress::ig_intr_md_for_tm.rid
  drop_ctl: B15(0..2)  # bit[2..0]: ingress::ig_intr_md_for_dprsr.drop_ctl
  egress_multicast_group_0:
    - H7  # ingress::ig_intr_md_for_tm.mcast_grp_a
  hash_lag_ecmp_mcast_1:
    - H50(0..12)  # bit[12..0]: ingress::ig_intr_md_for_tm.level2_mcast_hash
  learning:
    select: B0(0..2)  # bit[2..0]: ingress::ig_intr_md_for_dprsr.digest_type
    1:
      - B0(0..2)  # bit[2..0]: ingress::ig_intr_md_for_dprsr.digest_type
      - H37  # ingress::HillTop.RossFork.Goldsboro.8-23
      - W8(0..7)  # bit[7..0]: ingress::HillTop.RossFork.Goldsboro.0-7
      - W7(0..23)  # bit[23..0]: ingress::HillTop.RossFork.Fabens
      - H4(0..11)  # bit[11..0]: ingress::HillTop.RossFork.CeeVee
      - W4(0..19)  # bit[19..0]: ingress::HillTop.RossFork.Quebrada
    2:
      - B0(0..2)  # bit[2..0]: ingress::ig_intr_md_for_dprsr.digest_type
      - H4(0..11)  # bit[11..0]: ingress::HillTop.RossFork.CeeVee
      - H92  # ingress::Millston.Shirley.Goldsboro.8-23
      - B35  # ingress::Millston.Shirley.Goldsboro.0-7
      - H93  # ingress::Millston.Shirley.Fabens.8-23
      - B37  # ingress::Millston.Shirley.Fabens.0-7
      - W32  # ingress::Millston.GlenAvon.Kaluaaha
      - W35  # ingress::Millston.Maumee.Kaluaaha.96-127
      - W34  # ingress::Millston.Maumee.Kaluaaha.64-95
      - W15  # ingress::Millston.Maumee.Kaluaaha.32-63
      - W33  # ingress::Millston.Maumee.Kaluaaha.0-31
      - B53  # ingress::Millston.Calabash.McCaulley.8-15
      - B50  # ingress::Millston.Calabash.McCaulley.0-7
      - W49(0..15)  # bit[15..0]: ingress::HillTop.RossFork.Everton
      - B55  # ingress::HillTop.RossFork.Lafayette
      - B32  # ingress::Millston.Hoven.Roosville
    context_json:
      1:
        - [ HillTop.RossFork.Goldsboro, 1, 16, 7, 8]
        - [ HillTop.RossFork.Goldsboro, 6, 8, 7, 0]
        - [ HillTop.RossFork.Fabens, 8, 24, 7, 0]
        - [ HillTop.RossFork.CeeVee, 11, 12, 3, 0]
        - [ HillTop.RossFork.Quebrada, 14, 20, 3, 0]
      2:
        - [ HillTop.RossFork.CeeVee, 1, 12, 3, 0]
        - [ Millston.Shirley.Goldsboro, 3, 16, 7, 8]
        - [ Millston.Shirley.Goldsboro, 5, 8, 7, 0]
        - [ Millston.Shirley.Fabens, 6, 16, 7, 8]
        - [ Millston.Shirley.Fabens, 8, 8, 7, 0]
        - [ Millston.GlenAvon.Kaluaaha, 9, 32, 7, 0]
        - [ Millston.Maumee.Kaluaaha, 13, 32, 7, 96]
        - [ Millston.Maumee.Kaluaaha, 17, 32, 7, 64]
        - [ Millston.Maumee.Kaluaaha, 21, 32, 7, 32]
        - [ Millston.Maumee.Kaluaaha, 25, 32, 7, 0]
        - [ Millston.Calabash.McCaulley, 29, 8, 7, 8]
        - [ Millston.Calabash.McCaulley, 30, 8, 7, 0]
        - [ HillTop.RossFork.Everton, 33, 16, 7, 0]
        - [ HillTop.RossFork.Lafayette, 35, 8, 7, 0]
        - [ Millston.Hoven.Roosville, 36, 8, 7, 0]
      name: [ Newhalem, Westville ]
  mirror:
    select: B1(0..2)  # bit[2..0]: ingress::ig_intr_md_for_dprsr.mirror_type
    1:
      - H34(0..9)  # bit[9..0]: ingress::HillTop.Minturn.Grassflat
      - B38  # ingress::HillTop.Plains.Roachdale
      - H57(0..8)  # bit[8..0]: ingress::HillTop.Plains.Miller
parser egress:
  start: $entry_point
  init_zero: [ B21, H91, B30, H67, W29, W28, H21, W30, H23, B27, TW23, W25, TB10, W24, B25, B63, B19, B20, B62, H20, H80, H88, H19, B18, B61, W26, H29, H27, H74, W23 ]
  bitwise_or: [ B19, H74, W23 ]
  hdr_len_adj: 27
  meta_opt: 8191
  states:
    $entry_point:  # from state egress::$entry_point
      *:
        save: { half : 0..1, byte0 : 27 }
        buf_req: 28
        next: start
    start:  # from state egress::start
      match: [ half, byte0 ]
      0b*******00100001*********:
        0..1: H16  # bit[7..15] -> H16 bit[8..0]: egress::eg_intr_md.egress_port
        17..20: W27  # bit[152..167] -> W27 bit[15..0]: egress::eg_intr_md.egress_rid
        19..22: W31  # bit[179..183] -> W31 bit[4..0]: egress::eg_intr_md.egress_qid
        25..26: H17  # egress::HillTop.Sonoma.Iberia
        save: { byte1 : 27 }
        shift: 27
        buf_req: 28
        next: Rumson
      0x****00:
        0..1: H16  # bit[7..15] -> H16 bit[8..0]: egress::eg_intr_md.egress_port
        17..20: W27  # bit[152..167] -> W27 bit[15..0]: egress::eg_intr_md.egress_rid
        19..22: W31  # bit[179..183] -> W31 bit[4..0]: egress::eg_intr_md.egress_qid
        25..26: H17  # egress::HillTop.Sonoma.Iberia
        shift: 27
        buf_req: 27
        next: Moxley
      0x******:
        0..1: H16  # bit[7..15] -> H16 bit[8..0]: egress::eg_intr_md.egress_port
        17..20: W27  # bit[152..167] -> W27 bit[15..0]: egress::eg_intr_md.egress_rid
        19..22: W31  # bit[179..183] -> W31 bit[4..0]: egress::eg_intr_md.egress_qid
        25..26: H17  # egress::HillTop.Sonoma.Iberia
        save: { byte1 : 27 }
        shift: 27
        buf_req: 28
        next: Stout
    Rumson:  # from state egress::Rumson
      match: [ byte1 ]
      0x00:
        B63: 1  # value 1 -> B63 bit[0]: egress::HillTop.Wisdom.Stratford
        buf_req: 0
        next: Moxley
      0x**:
        B63: 1  # value 1 -> B63 bit[0]: egress::HillTop.Wisdom.Stratford
        save: { byte1 : 0 }
        buf_req: 1
        next: Stout
    Moxley:  # from state egress::Moxley
      *:
        0..1: H20
            # - bit[8..10] -> H20 bit[7..5]: egress::Millston.Belgrade.Rugby
            # - bit[11] -> H20 bit[4]: egress::Millston.Belgrade.Davie
        2: B27  # egress::Millston.Belgrade.Mankato
        3..4: H91  # egress::Millston.Belgrade.Virgil[23:8].8-23
        5: B21  # egress::Millston.Belgrade.Virgil[7:0].0-7
        6..7: H67  # egress::Millston.Belgrade.Florin[23:8].8-23
        7..10: W25  # bit[80..87] -> W25 bit[7..0]: egress::Millston.Belgrade.Ronan[23:16].16-23
        8: B30  # egress::Millston.Belgrade.Florin[7:0].0-7
        9: TB10  # egress::Millston.Belgrade.Ronan[31:24].24-31
        9..12: TW23  # bit[88..103] -> TW23 bit[15..0]: egress::Millston.Belgrade.Ronan[15:0].0-15
        11..14: W26  # bit[104..119] -> W26 bit[15..0]: egress::Millston.Belgrade.Corinth
        12..15: W29
            # - bit[124..126] -> W29 bit[3..1]: egress::Millston.Belgrade.Union
            # - bit[127] -> W29 bit[0]: egress::Millston.Belgrade.Rockport
        23..24: H80  # bit[194..199] -> H80 bit[5..0]: egress::Millston.Belgrade.Matheson
        shift: 13
        buf_req: 25
        next: Moxley.$oob_stall_0
    Moxley.$oob_stall_0:  # from state egress::Moxley.$oob_stall_0
      *:
        save: { byte1 : 23 }
        buf_req: 24
        next: Moxley.$split_0
    Moxley.$split_0:  # from state egress::Moxley.$split_0
      match: [ byte1 ]
      0x00:
        0..3: W28
            # - bit[26] -> W28 bit[5]: egress::Millston.Belgrade.Anacortes
            # - bit[27] -> W28 bit[4]: egress::Millston.Belgrade.Shabbona
            # - bit[28..30] -> W28 bit[3..1]: egress::Millston.Belgrade.Allgood
            # - bit[31] -> W28 bit[0]: egress::Millston.Belgrade.Waipahu
        4: B61  # bit[39] -> B61 bit[0]: egress::Millston.Belgrade.Freeburg
        5..8: W30
            # - bit[64..69] -> W30 bit[7..2]: egress::Millston.Belgrade.Sudbury
            # - bit[70..71] -> W30 bit[1..0]: egress::Millston.Belgrade.Selawik
        9: B62  # bit[77..79] -> B62 bit[2..0]: egress::Millston.Belgrade.Willard
        11..14: W24  # bit[104..111] -> W24 bit[15..8]: egress::Millston.Belgrade.Chaska[7:0].0-7
        12: B25  # bit[103] -> B25 bit[0]: egress::Millston.Belgrade.Chaska[8:8].8-8
        14..15: H21  # bit[116..127] -> H21 bit[11..0]: egress::Millston.Belgrade.Requa
        16..17: H29  # bit[132..143] -> H29 bit[11..0]: egress::Millston.Belgrade.Bayshore
        18..19: H27  # bit[148..159] -> H27 bit[11..0]: egress::Millston.Belgrade.Florien
        W23: 1  # value 1 -> W23 bit[0]: egress::Millston.Belgrade.$valid
        shift: 20
        buf_req: 20
        next: Decorah
      0x**:
        0..3: W28
            # - bit[26] -> W28 bit[5]: egress::Millston.Belgrade.Anacortes
            # - bit[27] -> W28 bit[4]: egress::Millston.Belgrade.Shabbona
            # - bit[28..30] -> W28 bit[3..1]: egress::Millston.Belgrade.Allgood
            # - bit[31] -> W28 bit[0]: egress::Millston.Belgrade.Waipahu
        4: B61  # bit[39] -> B61 bit[0]: egress::Millston.Belgrade.Freeburg
        5..8: W30
            # - bit[64..69] -> W30 bit[7..2]: egress::Millston.Belgrade.Sudbury
            # - bit[70..71] -> W30 bit[1..0]: egress::Millston.Belgrade.Selawik
        9: B62  # bit[77..79] -> B62 bit[2..0]: egress::Millston.Belgrade.Willard
        11..14: W24  # bit[104..111] -> W24 bit[15..8]: egress::Millston.Belgrade.Chaska[7:0].0-7
        12: B25  # bit[103] -> B25 bit[0]: egress::Millston.Belgrade.Chaska[8:8].8-8
        14..15: H21  # bit[116..127] -> H21 bit[11..0]: egress::Millston.Belgrade.Requa
        16..17: H29  # bit[132..143] -> H29 bit[11..0]: egress::Millston.Belgrade.Bayshore
        18..19: H27  # bit[148..159] -> H27 bit[11..0]: egress::Millston.Belgrade.Florien
        W23: 1  # value 1 -> W23 bit[0]: egress::Millston.Belgrade.$valid
        shift: 20
        buf_req: 20
        next: Decorah
    Decorah:  # from state egress::Decorah
      *:
        0..1: H87  # egress::Millston.Calabash.Adona[23:8].8-23
        2: B22  # egress::Millston.Calabash.Adona[7:0].0-7
        3..4: H68  # egress::Millston.Calabash.Connell[23:8].8-23
        5: B31  # egress::Millston.Calabash.Connell[7:0].0-7
        6: B29  # egress::Millston.Calabash.Goldsboro[23:16].16-23
        7..8: H73  # egress::Millston.Calabash.Goldsboro[15:0].0-15
        9: B24  # egress::Millston.Calabash.Fabens[23:16].16-23
        10..11: H26  # egress::Millston.Calabash.Fabens[15:0].0-15
        W23: 2  # value 1 -> W23 bit[1]: egress::Millston.Calabash.$valid
        save: { half : 12..13, byte0 : 14 }
        shift: 12
        buf_req: 15
        next: Decorah.$split_0
    Decorah.$split_0:  # from state egress::Decorah.$split_0
      match: [ byte0, half ]
      0x**9100:
        0..1: H25  # egress::Millston.Calabash.McCaulley
        save: { half : 4..5, byte0 : 6 }
        shift: 2
        buf_req: 7
        next: Elvaston
      0x**88a8:
        0..1: H25  # egress::Millston.Calabash.McCaulley
        save: { half : 4..5, byte0 : 6 }
        shift: 2
        buf_req: 7
        next: Elvaston
      0x**8100:
        0..1: H25  # egress::Millston.Calabash.McCaulley
        save: { half : 4..5, byte0 : 6 }
        shift: 2
        buf_req: 7
        next: Elvaston
      0x**0806:
        0..1: H25  # egress::Millston.Calabash.McCaulley
        save: { half : 2..3, byte0 : 4, byte1 : 5 }
        shift: 2
        buf_req: 6
        next: Corvallis
      0x450800:
        0..1: H25  # egress::Millston.Calabash.McCaulley
        save: { half : 8..9, byte0 : 11 }
        shift: 2
        buf_req: 12
        next: Belmont
      0x*50800:
        0..1: H25  # egress::Millston.Calabash.McCaulley
        shift: 2
        buf_req: 2
        next: end
      0x**0800:
        0..1: H25  # egress::Millston.Calabash.McCaulley
        shift: 2
        buf_req: 2
        next: Hillsview
      0x6*86dd:
        0..1: H25  # egress::Millston.Calabash.McCaulley
        shift: 2
        buf_req: 2
        next: Westbury
      0x**86dd:
        0..1: H25  # egress::Millston.Calabash.McCaulley
        shift: 2
        buf_req: 2
        next: end
      0x**8808:
        0..1: H25  # egress::Millston.Calabash.McCaulley
        shift: 2
        buf_req: 2
        next: end
      0x******:
        0..1: H25  # egress::Millston.Calabash.McCaulley
        shift: 2
        buf_req: 2
        next: end
    Elvaston:  # from state egress::Elvaston
      match: [ byte0, half ]
      0x**8100:
        0..1: H22
            # - bit[0..2] -> H22 bit[15..13]: egress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H22 bit[12]: egress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H22 bit[11..0]: egress::Millston.Wondervu[0].Bowden
        2..3: H24  # egress::Millston.Wondervu[0].McCaulley
        B19: 2  # value 2 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        save: { half : 6..7, byte0 : 8 }
        shift: 4
        buf_req: 9
        next: Elkville
      0x**0806:
        0..1: H22
            # - bit[0..2] -> H22 bit[15..13]: egress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H22 bit[12]: egress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H22 bit[11..0]: egress::Millston.Wondervu[0].Bowden
        2..3: H24  # egress::Millston.Wondervu[0].McCaulley
        B19: 2  # value 2 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        save: { half : 4..5, byte0 : 6, byte1 : 7 }
        shift: 4
        buf_req: 8
        next: Corvallis
      0x450800:
        0..1: H22
            # - bit[0..2] -> H22 bit[15..13]: egress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H22 bit[12]: egress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H22 bit[11..0]: egress::Millston.Wondervu[0].Bowden
        2..3: H24  # egress::Millston.Wondervu[0].McCaulley
        B19: 2  # value 2 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        save: { half : 10..11, byte0 : 13 }
        shift: 4
        buf_req: 14
        next: Belmont
      0x*50800:
        0..1: H22
            # - bit[0..2] -> H22 bit[15..13]: egress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H22 bit[12]: egress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H22 bit[11..0]: egress::Millston.Wondervu[0].Bowden
        2..3: H24  # egress::Millston.Wondervu[0].McCaulley
        B19: 2  # value 2 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: end
      0x**0800:
        0..1: H22
            # - bit[0..2] -> H22 bit[15..13]: egress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H22 bit[12]: egress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H22 bit[11..0]: egress::Millston.Wondervu[0].Bowden
        2..3: H24  # egress::Millston.Wondervu[0].McCaulley
        B19: 2  # value 2 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Hillsview
      0x6*86dd:
        0..1: H22
            # - bit[0..2] -> H22 bit[15..13]: egress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H22 bit[12]: egress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H22 bit[11..0]: egress::Millston.Wondervu[0].Bowden
        2..3: H24  # egress::Millston.Wondervu[0].McCaulley
        B19: 2  # value 2 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Westbury
      0x6*86dd:
        0..1: H22
            # - bit[0..2] -> H22 bit[15..13]: egress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H22 bit[12]: egress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H22 bit[11..0]: egress::Millston.Wondervu[0].Bowden
        2..3: H24  # egress::Millston.Wondervu[0].McCaulley
        B19: 2  # value 2 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Westbury
      0x**86dd:
        0..1: H22
            # - bit[0..2] -> H22 bit[15..13]: egress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H22 bit[12]: egress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H22 bit[11..0]: egress::Millston.Wondervu[0].Bowden
        2..3: H24  # egress::Millston.Wondervu[0].McCaulley
        B19: 2  # value 2 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: end
      0x**8808:
        0..1: H22
            # - bit[0..2] -> H22 bit[15..13]: egress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H22 bit[12]: egress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H22 bit[11..0]: egress::Millston.Wondervu[0].Bowden
        2..3: H24  # egress::Millston.Wondervu[0].McCaulley
        B19: 2  # value 2 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: end
      0x******:
        0..1: H22
            # - bit[0..2] -> H22 bit[15..13]: egress::Millston.Wondervu[0].Higginson
            # - bit[3] -> H22 bit[12]: egress::Millston.Wondervu[0].Oriskany
            # - bit[4..15] -> H22 bit[11..0]: egress::Millston.Wondervu[0].Bowden
        2..3: H24  # egress::Millston.Wondervu[0].McCaulley
        B19: 2  # value 2 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: end
    Elkville:  # from state egress::Elkville
      match: [ byte0, half ]
      0x**0806:
        0..3: TW5
            # - bit[0..2] -> TW5 bit[31..29]: egress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TW5 bit[28]: egress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TW5 bit[27..16]: egress::Millston.Wondervu[1].Bowden
            # - bit[16..31] -> TW5 bit[15..0]: egress::Millston.Wondervu[1].McCaulley
        B19: 1  # value 1 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        save: { half : 4..5, byte0 : 6, byte1 : 7 }
        shift: 4
        buf_req: 8
        next: Corvallis
      0x450800:
        0..3: TW5
            # - bit[0..2] -> TW5 bit[31..29]: egress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TW5 bit[28]: egress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TW5 bit[27..16]: egress::Millston.Wondervu[1].Bowden
            # - bit[16..31] -> TW5 bit[15..0]: egress::Millston.Wondervu[1].McCaulley
        B19: 1  # value 1 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        save: { half : 10..11, byte0 : 13 }
        shift: 4
        buf_req: 14
        next: Belmont
      0x*50800:
        0..3: TW5
            # - bit[0..2] -> TW5 bit[31..29]: egress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TW5 bit[28]: egress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TW5 bit[27..16]: egress::Millston.Wondervu[1].Bowden
            # - bit[16..31] -> TW5 bit[15..0]: egress::Millston.Wondervu[1].McCaulley
        B19: 1  # value 1 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: end
      0x**0800:
        0..3: TW5
            # - bit[0..2] -> TW5 bit[31..29]: egress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TW5 bit[28]: egress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TW5 bit[27..16]: egress::Millston.Wondervu[1].Bowden
            # - bit[16..31] -> TW5 bit[15..0]: egress::Millston.Wondervu[1].McCaulley
        B19: 1  # value 1 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Hillsview
      0x6*86dd:
        0..3: TW5
            # - bit[0..2] -> TW5 bit[31..29]: egress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TW5 bit[28]: egress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TW5 bit[27..16]: egress::Millston.Wondervu[1].Bowden
            # - bit[16..31] -> TW5 bit[15..0]: egress::Millston.Wondervu[1].McCaulley
        B19: 1  # value 1 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Westbury
      0x6*86dd:
        0..3: TW5
            # - bit[0..2] -> TW5 bit[31..29]: egress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TW5 bit[28]: egress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TW5 bit[27..16]: egress::Millston.Wondervu[1].Bowden
            # - bit[16..31] -> TW5 bit[15..0]: egress::Millston.Wondervu[1].McCaulley
        B19: 1  # value 1 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: Westbury
      0x**86dd:
        0..3: TW5
            # - bit[0..2] -> TW5 bit[31..29]: egress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TW5 bit[28]: egress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TW5 bit[27..16]: egress::Millston.Wondervu[1].Bowden
            # - bit[16..31] -> TW5 bit[15..0]: egress::Millston.Wondervu[1].McCaulley
        B19: 1  # value 1 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: end
      0x**8808:
        0..3: TW5
            # - bit[0..2] -> TW5 bit[31..29]: egress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TW5 bit[28]: egress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TW5 bit[27..16]: egress::Millston.Wondervu[1].Bowden
            # - bit[16..31] -> TW5 bit[15..0]: egress::Millston.Wondervu[1].McCaulley
        B19: 1  # value 1 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: end
      0x******:
        0..3: TW5
            # - bit[0..2] -> TW5 bit[31..29]: egress::Millston.Wondervu[1].Higginson
            # - bit[3] -> TW5 bit[28]: egress::Millston.Wondervu[1].Oriskany
            # - bit[4..15] -> TW5 bit[27..16]: egress::Millston.Wondervu[1].Bowden
            # - bit[16..31] -> TW5 bit[15..0]: egress::Millston.Wondervu[1].McCaulley
        B19: 1  # value 1 -> B19 bit[1..0]: egress::Millston.Wondervu.$stkvalid
        shift: 4
        buf_req: 4
        next: end
    Corvallis:  # from state egress::Corvallis
      match: [ half, byte0, byte1 ]
      0x00010800:
        0..3: TW6
            # - bit[0..15] -> TW6 bit[31..16]: egress::Millston.Rainelle.Conner
            # - bit[16..31] -> TW6 bit[15..0]: egress::Millston.Rainelle.Ledoux
        4..7: TW4
            # - bit[32..39] -> TW4 bit[31..24]: egress::Millston.Rainelle.Steger
            # - bit[40..47] -> TW4 bit[23..16]: egress::Millston.Rainelle.Quogue
            # - bit[48..63] -> TW4 bit[15..0]: egress::Millston.Rainelle.Findlay
        W23: 4  # value 1 -> W23 bit[2]: egress::Millston.Rainelle.$valid
        shift: 8
        buf_req: 8
        next: end
      0x********:
        buf_req: 0
        next: end
    Belmont:  # from state egress::Belmont
      match: [ half, byte0 ]
      0o*0000004:
        0..1: H81
            # - bit[0..3] -> H81 bit[15..12]: egress::Millston.GlenAvon.Fayette
            # - bit[4..7] -> H81 bit[11..8]: egress::Millston.GlenAvon.Osterdock
            # - bit[8..13] -> H81 bit[7..2]: egress::Millston.GlenAvon.PineCity
            # - bit[14..15] -> H81 bit[1..0]: egress::Millston.GlenAvon.Alameda
        2..3: H18  # egress::Millston.GlenAvon.Rexville
        4..7: W16
            # - bit[32..47] -> W16 bit[31..16]: egress::Millston.GlenAvon.Quinwood
            # - bit[48] -> W16 bit[15]: egress::Millston.GlenAvon.Marfa
            # - bit[49] -> W16 bit[14]: egress::Millston.GlenAvon.Palatine
            # - bit[50] -> W16 bit[13]: egress::Millston.GlenAvon.Mabelle
            # - bit[51..63] -> W16 bit[12..0]: egress::Millston.GlenAvon.Hoagland
        8: B16  # egress::Millston.GlenAvon.Exton
        9: B23  # egress::Millston.GlenAvon.Ocoee
        10: TB20  # egress::Millston.GlenAvon.Hackett[15:8].8-15
        11: TB11  # egress::Millston.GlenAvon.Hackett[7:0].0-7
        12..15: W17  # egress::Millston.GlenAvon.Kaluaaha
        16..19: W18  # egress::Millston.GlenAvon.Calcasieu
        W23: 8  # value 1 -> W23 bit[3]: egress::Millston.GlenAvon.$valid
        save: { byte1 : 20 }
        shift: 20
        buf_req: 21
        next: Baytown
      0o*0000051:
        0..1: H81
            # - bit[0..3] -> H81 bit[15..12]: egress::Millston.GlenAvon.Fayette
            # - bit[4..7] -> H81 bit[11..8]: egress::Millston.GlenAvon.Osterdock
            # - bit[8..13] -> H81 bit[7..2]: egress::Millston.GlenAvon.PineCity
            # - bit[14..15] -> H81 bit[1..0]: egress::Millston.GlenAvon.Alameda
        2..3: H18  # egress::Millston.GlenAvon.Rexville
        4..7: W16
            # - bit[32..47] -> W16 bit[31..16]: egress::Millston.GlenAvon.Quinwood
            # - bit[48] -> W16 bit[15]: egress::Millston.GlenAvon.Marfa
            # - bit[49] -> W16 bit[14]: egress::Millston.GlenAvon.Palatine
            # - bit[50] -> W16 bit[13]: egress::Millston.GlenAvon.Mabelle
            # - bit[51..63] -> W16 bit[12..0]: egress::Millston.GlenAvon.Hoagland
        8: B16  # egress::Millston.GlenAvon.Exton
        9: B23  # egress::Millston.GlenAvon.Ocoee
        10: TB20  # egress::Millston.GlenAvon.Hackett[15:8].8-15
        11: TB11  # egress::Millston.GlenAvon.Hackett[7:0].0-7
        12..15: W17  # egress::Millston.GlenAvon.Kaluaaha
        16..19: W18  # egress::Millston.GlenAvon.Calcasieu
        W23: 8  # value 1 -> W23 bit[3]: egress::Millston.GlenAvon.$valid
        shift: 20
        buf_req: 20
        next: Sanford
      0o*0000001:
        0..1: H81
            # - bit[0..3] -> H81 bit[15..12]: egress::Millston.GlenAvon.Fayette
            # - bit[4..7] -> H81 bit[11..8]: egress::Millston.GlenAvon.Osterdock
            # - bit[8..13] -> H81 bit[7..2]: egress::Millston.GlenAvon.PineCity
            # - bit[14..15] -> H81 bit[1..0]: egress::Millston.GlenAvon.Alameda
        2..3: H18  # egress::Millston.GlenAvon.Rexville
        4..7: W16
            # - bit[32..47] -> W16 bit[31..16]: egress::Millston.GlenAvon.Quinwood
            # - bit[48] -> W16 bit[15]: egress::Millston.GlenAvon.Marfa
            # - bit[49] -> W16 bit[14]: egress::Millston.GlenAvon.Palatine
            # - bit[50] -> W16 bit[13]: egress::Millston.GlenAvon.Mabelle
            # - bit[51..63] -> W16 bit[12..0]: egress::Millston.GlenAvon.Hoagland
        8: B16  # egress::Millston.GlenAvon.Exton
        9: B23  # egress::Millston.GlenAvon.Ocoee
        10: TB20  # egress::Millston.GlenAvon.Hackett[15:8].8-15
        11: TB11  # egress::Millston.GlenAvon.Hackett[7:0].0-7
        12..15: W17  # egress::Millston.GlenAvon.Kaluaaha
        16..19: W18  # egress::Millston.GlenAvon.Calcasieu
        W23: 8  # value 1 -> W23 bit[3]: egress::Millston.GlenAvon.$valid
        shift: 20
        buf_req: 20
        next: BealCity
      0o*0000021:
        0..1: H81
            # - bit[0..3] -> H81 bit[15..12]: egress::Millston.GlenAvon.Fayette
            # - bit[4..7] -> H81 bit[11..8]: egress::Millston.GlenAvon.Osterdock
            # - bit[8..13] -> H81 bit[7..2]: egress::Millston.GlenAvon.PineCity
            # - bit[14..15] -> H81 bit[1..0]: egress::Millston.GlenAvon.Alameda
        2..3: H18  # egress::Millston.GlenAvon.Rexville
        4..7: W16
            # - bit[32..47] -> W16 bit[31..16]: egress::Millston.GlenAvon.Quinwood
            # - bit[48] -> W16 bit[15]: egress::Millston.GlenAvon.Marfa
            # - bit[49] -> W16 bit[14]: egress::Millston.GlenAvon.Palatine
            # - bit[50] -> W16 bit[13]: egress::Millston.GlenAvon.Mabelle
            # - bit[51..63] -> W16 bit[12..0]: egress::Millston.GlenAvon.Hoagland
        8: B16  # egress::Millston.GlenAvon.Exton
        9: B23  # egress::Millston.GlenAvon.Ocoee
        10: TB20  # egress::Millston.GlenAvon.Hackett[15:8].8-15
        11: TB11  # egress::Millston.GlenAvon.Hackett[7:0].0-7
        12..15: W17  # egress::Millston.GlenAvon.Kaluaaha
        16..19: W18  # egress::Millston.GlenAvon.Calcasieu
        W23: 8  # value 1 -> W23 bit[3]: egress::Millston.GlenAvon.$valid
        shift: 20
        buf_req: 20
        next: Toluca
      0o*0000006:
        0..1: H81
            # - bit[0..3] -> H81 bit[15..12]: egress::Millston.GlenAvon.Fayette
            # - bit[4..7] -> H81 bit[11..8]: egress::Millston.GlenAvon.Osterdock
            # - bit[8..13] -> H81 bit[7..2]: egress::Millston.GlenAvon.PineCity
            # - bit[14..15] -> H81 bit[1..0]: egress::Millston.GlenAvon.Alameda
        2..3: H18  # egress::Millston.GlenAvon.Rexville
        4..7: W16
            # - bit[32..47] -> W16 bit[31..16]: egress::Millston.GlenAvon.Quinwood
            # - bit[48] -> W16 bit[15]: egress::Millston.GlenAvon.Marfa
            # - bit[49] -> W16 bit[14]: egress::Millston.GlenAvon.Palatine
            # - bit[50] -> W16 bit[13]: egress::Millston.GlenAvon.Mabelle
            # - bit[51..63] -> W16 bit[12..0]: egress::Millston.GlenAvon.Hoagland
        8: B16  # egress::Millston.GlenAvon.Exton
        9: B23  # egress::Millston.GlenAvon.Ocoee
        10: TB20  # egress::Millston.GlenAvon.Hackett[15:8].8-15
        11: TB11  # egress::Millston.GlenAvon.Hackett[7:0].0-7
        12..15: W17  # egress::Millston.GlenAvon.Kaluaaha
        16..19: W18  # egress::Millston.GlenAvon.Calcasieu
        W23: 8  # value 1 -> W23 bit[3]: egress::Millston.GlenAvon.$valid
        shift: 20
        buf_req: 20
        next: Readsboro
      0o*0000057:
        0..1: H81
            # - bit[0..3] -> H81 bit[15..12]: egress::Millston.GlenAvon.Fayette
            # - bit[4..7] -> H81 bit[11..8]: egress::Millston.GlenAvon.Osterdock
            # - bit[8..13] -> H81 bit[7..2]: egress::Millston.GlenAvon.PineCity
            # - bit[14..15] -> H81 bit[1..0]: egress::Millston.GlenAvon.Alameda
        2..3: H18  # egress::Millston.GlenAvon.Rexville
        4..7: W16
            # - bit[32..47] -> W16 bit[31..16]: egress::Millston.GlenAvon.Quinwood
            # - bit[48] -> W16 bit[15]: egress::Millston.GlenAvon.Marfa
            # - bit[49] -> W16 bit[14]: egress::Millston.GlenAvon.Palatine
            # - bit[50] -> W16 bit[13]: egress::Millston.GlenAvon.Mabelle
            # - bit[51..63] -> W16 bit[12..0]: egress::Millston.GlenAvon.Hoagland
        8: B16  # egress::Millston.GlenAvon.Exton
        9: B23  # egress::Millston.GlenAvon.Ocoee
        10: TB20  # egress::Millston.GlenAvon.Hackett[15:8].8-15
        11: TB11  # egress::Millston.GlenAvon.Hackett[7:0].0-7
        12..15: W17  # egress::Millston.GlenAvon.Kaluaaha
        16..19: W18  # egress::Millston.GlenAvon.Calcasieu
        W23: 8  # value 1 -> W23 bit[3]: egress::Millston.GlenAvon.$valid
        save: { half : 20..21, byte0 : 22, byte1 : 23 }
        shift: 20
        buf_req: 24
        next: Astor
      0o*0000000:
        0..1: H81
            # - bit[0..3] -> H81 bit[15..12]: egress::Millston.GlenAvon.Fayette
            # - bit[4..7] -> H81 bit[11..8]: egress::Millston.GlenAvon.Osterdock
            # - bit[8..13] -> H81 bit[7..2]: egress::Millston.GlenAvon.PineCity
            # - bit[14..15] -> H81 bit[1..0]: egress::Millston.GlenAvon.Alameda
        2..3: H18  # egress::Millston.GlenAvon.Rexville
        4..7: W16
            # - bit[32..47] -> W16 bit[31..16]: egress::Millston.GlenAvon.Quinwood
            # - bit[48] -> W16 bit[15]: egress::Millston.GlenAvon.Marfa
            # - bit[49] -> W16 bit[14]: egress::Millston.GlenAvon.Palatine
            # - bit[50] -> W16 bit[13]: egress::Millston.GlenAvon.Mabelle
            # - bit[51..63] -> W16 bit[12..0]: egress::Millston.GlenAvon.Hoagland
        8: B16  # egress::Millston.GlenAvon.Exton
        9: B23  # egress::Millston.GlenAvon.Ocoee
        10: TB20  # egress::Millston.GlenAvon.Hackett[15:8].8-15
        11: TB11  # egress::Millston.GlenAvon.Hackett[7:0].0-7
        12..15: W17  # egress::Millston.GlenAvon.Kaluaaha
        16..19: W18  # egress::Millston.GlenAvon.Calcasieu
        W23: 8  # value 1 -> W23 bit[3]: egress::Millston.GlenAvon.$valid
        shift: 20
        buf_req: 20
        next: end
      0x****06:
        0..1: H81
            # - bit[0..3] -> H81 bit[15..12]: egress::Millston.GlenAvon.Fayette
            # - bit[4..7] -> H81 bit[11..8]: egress::Millston.GlenAvon.Osterdock
            # - bit[8..13] -> H81 bit[7..2]: egress::Millston.GlenAvon.PineCity
            # - bit[14..15] -> H81 bit[1..0]: egress::Millston.GlenAvon.Alameda
        2..3: H18  # egress::Millston.GlenAvon.Rexville
        4..7: W16
            # - bit[32..47] -> W16 bit[31..16]: egress::Millston.GlenAvon.Quinwood
            # - bit[48] -> W16 bit[15]: egress::Millston.GlenAvon.Marfa
            # - bit[49] -> W16 bit[14]: egress::Millston.GlenAvon.Palatine
            # - bit[50] -> W16 bit[13]: egress::Millston.GlenAvon.Mabelle
            # - bit[51..63] -> W16 bit[12..0]: egress::Millston.GlenAvon.Hoagland
        8: B16  # egress::Millston.GlenAvon.Exton
        9: B23  # egress::Millston.GlenAvon.Ocoee
        10: TB20  # egress::Millston.GlenAvon.Hackett[15:8].8-15
        11: TB11  # egress::Millston.GlenAvon.Hackett[7:0].0-7
        12..15: W17  # egress::Millston.GlenAvon.Kaluaaha
        16..19: W18  # egress::Millston.GlenAvon.Calcasieu
        W23: 8  # value 1 -> W23 bit[3]: egress::Millston.GlenAvon.$valid
        shift: 20
        buf_req: 20
        next: end
      0x******:
        0..1: H81
            # - bit[0..3] -> H81 bit[15..12]: egress::Millston.GlenAvon.Fayette
            # - bit[4..7] -> H81 bit[11..8]: egress::Millston.GlenAvon.Osterdock
            # - bit[8..13] -> H81 bit[7..2]: egress::Millston.GlenAvon.PineCity
            # - bit[14..15] -> H81 bit[1..0]: egress::Millston.GlenAvon.Alameda
        2..3: H18  # egress::Millston.GlenAvon.Rexville
        4..7: W16
            # - bit[32..47] -> W16 bit[31..16]: egress::Millston.GlenAvon.Quinwood
            # - bit[48] -> W16 bit[15]: egress::Millston.GlenAvon.Marfa
            # - bit[49] -> W16 bit[14]: egress::Millston.GlenAvon.Palatine
            # - bit[50] -> W16 bit[13]: egress::Millston.GlenAvon.Mabelle
            # - bit[51..63] -> W16 bit[12..0]: egress::Millston.GlenAvon.Hoagland
        8: B16  # egress::Millston.GlenAvon.Exton
        9: B23  # egress::Millston.GlenAvon.Ocoee
        10: TB20  # egress::Millston.GlenAvon.Hackett[15:8].8-15
        11: TB11  # egress::Millston.GlenAvon.Hackett[7:0].0-7
        12..15: W17  # egress::Millston.GlenAvon.Kaluaaha
        16..19: W18  # egress::Millston.GlenAvon.Calcasieu
        W23: 8  # value 1 -> W23 bit[3]: egress::Millston.GlenAvon.$valid
        shift: 20
        buf_req: 20
        next: end
    Baytown:  # from state egress::Baytown
      match: [ byte1 ]
      0x45:
        save: { half : 6..7, byte0 : 9 }
        buf_req: 10
        next: McBrides
      0x**:
        buf_req: 0
        next: end
    McBrides:  # from state egress::McBrides
      match: [ half, byte0 ]
      0o*0000001:
        0..1: H82
            # - bit[0..3] -> H82 bit[15..12]: egress::Millston.Ramos.Fayette
            # - bit[4..7] -> H82 bit[11..8]: egress::Millston.Ramos.Osterdock
            # - bit[8..13] -> H82 bit[7..2]: egress::Millston.Ramos.PineCity
            # - bit[14..15] -> H82 bit[1..0]: egress::Millston.Ramos.Alameda
        2..3: TH15  # egress::Millston.Ramos.Rexville
        4..7: TW4
            # - bit[32..47] -> TW4 bit[31..16]: egress::Millston.Ramos.Quinwood
            # - bit[48] -> TW4 bit[15]: egress::Millston.Ramos.Marfa
            # - bit[49] -> TW4 bit[14]: egress::Millston.Ramos.Palatine
            # - bit[50] -> TW4 bit[13]: egress::Millston.Ramos.Mabelle
            # - bit[51..63] -> TW4 bit[12..0]: egress::Millston.Ramos.Hoagland
        8..9: TH6
            # - bit[64..71] -> TH6 bit[15..8]: egress::Millston.Ramos.Exton
            # - bit[72..79] -> TH6 bit[7..0]: egress::Millston.Ramos.Ocoee
        10: TB7  # egress::Millston.Ramos.Hackett[15:8].8-15
        11: TB6  # egress::Millston.Ramos.Hackett[7:0].0-7
        12..15: TW10  # egress::Millston.Ramos.Kaluaaha
        16..19: TW11  # egress::Millston.Ramos.Calcasieu
        W23: 16  # value 1 -> W23 bit[4]: egress::Millston.Ramos.$valid
        shift: 20
        buf_req: 20
        next: Hapeville
      0o*0000021:
        0..1: H82
            # - bit[0..3] -> H82 bit[15..12]: egress::Millston.Ramos.Fayette
            # - bit[4..7] -> H82 bit[11..8]: egress::Millston.Ramos.Osterdock
            # - bit[8..13] -> H82 bit[7..2]: egress::Millston.Ramos.PineCity
            # - bit[14..15] -> H82 bit[1..0]: egress::Millston.Ramos.Alameda
        2..3: TH15  # egress::Millston.Ramos.Rexville
        4..7: TW4
            # - bit[32..47] -> TW4 bit[31..16]: egress::Millston.Ramos.Quinwood
            # - bit[48] -> TW4 bit[15]: egress::Millston.Ramos.Marfa
            # - bit[49] -> TW4 bit[14]: egress::Millston.Ramos.Palatine
            # - bit[50] -> TW4 bit[13]: egress::Millston.Ramos.Mabelle
            # - bit[51..63] -> TW4 bit[12..0]: egress::Millston.Ramos.Hoagland
        8..9: TH6
            # - bit[64..71] -> TH6 bit[15..8]: egress::Millston.Ramos.Exton
            # - bit[72..79] -> TH6 bit[7..0]: egress::Millston.Ramos.Ocoee
        10: TB7  # egress::Millston.Ramos.Hackett[15:8].8-15
        11: TB6  # egress::Millston.Ramos.Hackett[7:0].0-7
        12..15: TW10  # egress::Millston.Ramos.Kaluaaha
        16..19: TW11  # egress::Millston.Ramos.Calcasieu
        W23: 16  # value 1 -> W23 bit[4]: egress::Millston.Ramos.$valid
        shift: 20
        buf_req: 20
        next: Barnhill
      0o*0000006:
        0..1: H82
            # - bit[0..3] -> H82 bit[15..12]: egress::Millston.Ramos.Fayette
            # - bit[4..7] -> H82 bit[11..8]: egress::Millston.Ramos.Osterdock
            # - bit[8..13] -> H82 bit[7..2]: egress::Millston.Ramos.PineCity
            # - bit[14..15] -> H82 bit[1..0]: egress::Millston.Ramos.Alameda
        2..3: TH15  # egress::Millston.Ramos.Rexville
        4..7: TW4
            # - bit[32..47] -> TW4 bit[31..16]: egress::Millston.Ramos.Quinwood
            # - bit[48] -> TW4 bit[15]: egress::Millston.Ramos.Marfa
            # - bit[49] -> TW4 bit[14]: egress::Millston.Ramos.Palatine
            # - bit[50] -> TW4 bit[13]: egress::Millston.Ramos.Mabelle
            # - bit[51..63] -> TW4 bit[12..0]: egress::Millston.Ramos.Hoagland
        8..9: TH6
            # - bit[64..71] -> TH6 bit[15..8]: egress::Millston.Ramos.Exton
            # - bit[72..79] -> TH6 bit[7..0]: egress::Millston.Ramos.Ocoee
        10: TB7  # egress::Millston.Ramos.Hackett[15:8].8-15
        11: TB6  # egress::Millston.Ramos.Hackett[7:0].0-7
        12..15: TW10  # egress::Millston.Ramos.Kaluaaha
        16..19: TW11  # egress::Millston.Ramos.Calcasieu
        W23: 16  # value 1 -> W23 bit[4]: egress::Millston.Ramos.$valid
        shift: 20
        buf_req: 20
        next: NantyGlo
      0o*0000000:
        0..1: H82
            # - bit[0..3] -> H82 bit[15..12]: egress::Millston.Ramos.Fayette
            # - bit[4..7] -> H82 bit[11..8]: egress::Millston.Ramos.Osterdock
            # - bit[8..13] -> H82 bit[7..2]: egress::Millston.Ramos.PineCity
            # - bit[14..15] -> H82 bit[1..0]: egress::Millston.Ramos.Alameda
        2..3: TH15  # egress::Millston.Ramos.Rexville
        4..7: TW4
            # - bit[32..47] -> TW4 bit[31..16]: egress::Millston.Ramos.Quinwood
            # - bit[48] -> TW4 bit[15]: egress::Millston.Ramos.Marfa
            # - bit[49] -> TW4 bit[14]: egress::Millston.Ramos.Palatine
            # - bit[50] -> TW4 bit[13]: egress::Millston.Ramos.Mabelle
            # - bit[51..63] -> TW4 bit[12..0]: egress::Millston.Ramos.Hoagland
        8..9: TH6
            # - bit[64..71] -> TH6 bit[15..8]: egress::Millston.Ramos.Exton
            # - bit[72..79] -> TH6 bit[7..0]: egress::Millston.Ramos.Ocoee
        10: TB7  # egress::Millston.Ramos.Hackett[15:8].8-15
        11: TB6  # egress::Millston.Ramos.Hackett[7:0].0-7
        12..15: TW10  # egress::Millston.Ramos.Kaluaaha
        16..19: TW11  # egress::Millston.Ramos.Calcasieu
        W23: 16  # value 1 -> W23 bit[4]: egress::Millston.Ramos.$valid
        shift: 20
        buf_req: 20
        next: end
      0x****06:
        0..1: H82
            # - bit[0..3] -> H82 bit[15..12]: egress::Millston.Ramos.Fayette
            # - bit[4..7] -> H82 bit[11..8]: egress::Millston.Ramos.Osterdock
            # - bit[8..13] -> H82 bit[7..2]: egress::Millston.Ramos.PineCity
            # - bit[14..15] -> H82 bit[1..0]: egress::Millston.Ramos.Alameda
        2..3: TH15  # egress::Millston.Ramos.Rexville
        4..7: TW4
            # - bit[32..47] -> TW4 bit[31..16]: egress::Millston.Ramos.Quinwood
            # - bit[48] -> TW4 bit[15]: egress::Millston.Ramos.Marfa
            # - bit[49] -> TW4 bit[14]: egress::Millston.Ramos.Palatine
            # - bit[50] -> TW4 bit[13]: egress::Millston.Ramos.Mabelle
            # - bit[51..63] -> TW4 bit[12..0]: egress::Millston.Ramos.Hoagland
        8..9: TH6
            # - bit[64..71] -> TH6 bit[15..8]: egress::Millston.Ramos.Exton
            # - bit[72..79] -> TH6 bit[7..0]: egress::Millston.Ramos.Ocoee
        10: TB7  # egress::Millston.Ramos.Hackett[15:8].8-15
        11: TB6  # egress::Millston.Ramos.Hackett[7:0].0-7
        12..15: TW10  # egress::Millston.Ramos.Kaluaaha
        16..19: TW11  # egress::Millston.Ramos.Calcasieu
        W23: 16  # value 1 -> W23 bit[4]: egress::Millston.Ramos.$valid
        shift: 20
        buf_req: 20
        next: end
      0x******:
        0..1: H82
            # - bit[0..3] -> H82 bit[15..12]: egress::Millston.Ramos.Fayette
            # - bit[4..7] -> H82 bit[11..8]: egress::Millston.Ramos.Osterdock
            # - bit[8..13] -> H82 bit[7..2]: egress::Millston.Ramos.PineCity
            # - bit[14..15] -> H82 bit[1..0]: egress::Millston.Ramos.Alameda
        2..3: TH15  # egress::Millston.Ramos.Rexville
        4..7: TW4
            # - bit[32..47] -> TW4 bit[31..16]: egress::Millston.Ramos.Quinwood
            # - bit[48] -> TW4 bit[15]: egress::Millston.Ramos.Marfa
            # - bit[49] -> TW4 bit[14]: egress::Millston.Ramos.Palatine
            # - bit[50] -> TW4 bit[13]: egress::Millston.Ramos.Mabelle
            # - bit[51..63] -> TW4 bit[12..0]: egress::Millston.Ramos.Hoagland
        8..9: TH6
            # - bit[64..71] -> TH6 bit[15..8]: egress::Millston.Ramos.Exton
            # - bit[72..79] -> TH6 bit[7..0]: egress::Millston.Ramos.Ocoee
        10: TB7  # egress::Millston.Ramos.Hackett[15:8].8-15
        11: TB6  # egress::Millston.Ramos.Hackett[7:0].0-7
        12..15: TW10  # egress::Millston.Ramos.Kaluaaha
        16..19: TW11  # egress::Millston.Ramos.Calcasieu
        W23: 16  # value 1 -> W23 bit[4]: egress::Millston.Ramos.$valid
        shift: 20
        buf_req: 20
        next: end
    Hapeville:  # from state egress::Hapeville
      *:
        0..1: TH8  # egress::Millston.Bergton.Chevak
        2..3: TH7  # egress::Millston.Bergton.Mendocino
        W23: 32  # value 1 -> W23 bit[5]: egress::Millston.Bergton.$valid
        shift: 4
        buf_req: 4
        next: end
    Barnhill:  # from state egress::Barnhill
      *:
        0..1: TH8  # egress::Millston.Bergton.Chevak
        2..3: TH7  # egress::Millston.Bergton.Mendocino
        4..5: TH11  # egress::Millston.Pawtucket.StarLake
        6..7: TH31  # egress::Millston.Buckhorn.SoapLake
        W23: 224
            # - value 1 -> W23 bit[5]: egress::Millston.Bergton.$valid
            # - value 1 -> W23 bit[6]: egress::Millston.Pawtucket.$valid
            # - value 1 -> W23 bit[7]: egress::Millston.Buckhorn.$valid
        shift: 8
        buf_req: 8
        next: end
    NantyGlo:  # from state egress::NantyGlo
      *:
        0..1: TH8  # egress::Millston.Bergton.Chevak
        2..3: TH7  # egress::Millston.Bergton.Mendocino
        4..5: TH12  # egress::Millston.Cassa.Chloride[31:16].16-31
        6..7: TH11  # egress::Millston.Cassa.Chloride[15:0].0-15
        12..15: TW6
            # - bit[96..99] -> TW6 bit[31..28]: egress::Millston.Cassa.Weinert
            # - bit[100..103] -> TW6 bit[27..24]: egress::Millston.Cassa.Cornell
            # - bit[104..111] -> TW6 bit[23..16]: egress::Millston.Cassa.Noyes
            # - bit[112..127] -> TW6 bit[15..0]: egress::Millston.Cassa.Helton
        W23: 160
            # - value 1 -> W23 bit[5]: egress::Millston.Bergton.$valid
            # - value 1 -> W23 bit[7]: egress::Millston.Buckhorn.$valid
        shift: 8
        buf_req: 16
        next: NantyGlo.$split_0
    NantyGlo.$split_0:  # from state egress::NantyGlo.$split_0
      *:
        0..1: TH14  # egress::Millston.Cassa.Garibaldi[31:16].16-31
        2..3: TH13  # egress::Millston.Cassa.Garibaldi[15:0].0-15
        8..9: TH31  # egress::Millston.Buckhorn.SoapLake
        H74: 1  # value 1 -> H74 bit[0]: egress::Millston.Cassa.$valid
        shift: 10
        buf_req: 10
        next: end
    Sanford:  # from state egress::Sanford
      *:
        0..1: H82
            # - bit[0..3] -> H82 bit[15..12]: egress::Millston.Provencal.Fayette
            # - bit[4..9] -> H82 bit[11..6]: egress::Millston.Provencal.PineCity
            # - bit[10..11] -> H82 bit[5..4]: egress::Millston.Provencal.Alameda
            # - bit[12..15] -> H82 bit[3..0]: egress::Millston.Provencal.Maryhill[19:16].16-19
        2..3: TH30  # egress::Millston.Provencal.Maryhill[15:0].0-15
        4..7: TW4
            # - bit[32..47] -> TW4 bit[31..16]: egress::Millston.Provencal.Norwood
            # - bit[48..55] -> TW4 bit[15..8]: egress::Millston.Provencal.Dassel
            # - bit[56..63] -> TW4 bit[7..0]: egress::Millston.Provencal.Bushland
        8..9: TH16  # egress::Millston.Provencal.Kaluaaha[127:112].112-127
        10..11: TH15  # egress::Millston.Provencal.Kaluaaha[111:96].96-111
        14: TB7  # egress::Millston.Provencal.Kaluaaha[79:72].72-79
        15: TB6  # egress::Millston.Provencal.Kaluaaha[71:64].64-71
        16..19: TW11  # egress::Millston.Provencal.Kaluaaha[63:32].32-63
        20..23: TW10  # egress::Millston.Provencal.Kaluaaha[31:0].0-31
        24..27: TW22  # egress::Millston.Provencal.Calcasieu[127:96].96-127
        save: { byte1 : 6 }
        shift: 12
        buf_req: 28
        next: Sanford.$split_0
    Sanford.$split_0:  # from state egress::Sanford.$split_0
      match: [ byte1 ]
      0x3a:
        0..1: TH6  # egress::Millston.Provencal.Kaluaaha[95:80].80-95
        16..19: TW21  # egress::Millston.Provencal.Calcasieu[95:64].64-95
        20..23: TW20  # egress::Millston.Provencal.Calcasieu[63:32].32-63
        24..25: TH17  # egress::Millston.Provencal.Calcasieu[31:16].16-31
        26: TB9  # egress::Millston.Provencal.Calcasieu[15:8].8-15
        27: TB8  # egress::Millston.Provencal.Calcasieu[7:0].0-7
        H74: 2  # value 1 -> H74 bit[1]: egress::Millston.Provencal.$valid
        shift: 28
        buf_req: 28
        next: Hapeville
      0x11:
        0..1: TH6  # egress::Millston.Provencal.Kaluaaha[95:80].80-95
        16..19: TW21  # egress::Millston.Provencal.Calcasieu[95:64].64-95
        20..23: TW20  # egress::Millston.Provencal.Calcasieu[63:32].32-63
        24..25: TH17  # egress::Millston.Provencal.Calcasieu[31:16].16-31
        26: TB9  # egress::Millston.Provencal.Calcasieu[15:8].8-15
        27: TB8  # egress::Millston.Provencal.Calcasieu[7:0].0-7
        H74: 2  # value 1 -> H74 bit[1]: egress::Millston.Provencal.$valid
        shift: 28
        buf_req: 28
        next: Barnhill
      0x06:
        0..1: TH6  # egress::Millston.Provencal.Kaluaaha[95:80].80-95
        16..19: TW21  # egress::Millston.Provencal.Calcasieu[95:64].64-95
        20..23: TW20  # egress::Millston.Provencal.Calcasieu[63:32].32-63
        24..25: TH17  # egress::Millston.Provencal.Calcasieu[31:16].16-31
        26: TB9  # egress::Millston.Provencal.Calcasieu[15:8].8-15
        27: TB8  # egress::Millston.Provencal.Calcasieu[7:0].0-7
        H74: 2  # value 1 -> H74 bit[1]: egress::Millston.Provencal.$valid
        shift: 28
        buf_req: 28
        next: NantyGlo
      0x**:
        0..1: TH6  # egress::Millston.Provencal.Kaluaaha[95:80].80-95
        16..19: TW21  # egress::Millston.Provencal.Calcasieu[95:64].64-95
        20..23: TW20  # egress::Millston.Provencal.Calcasieu[63:32].32-63
        24..25: TH17  # egress::Millston.Provencal.Calcasieu[31:16].16-31
        26: TB9  # egress::Millston.Provencal.Calcasieu[15:8].8-15
        27: TB8  # egress::Millston.Provencal.Calcasieu[7:0].0-7
        H74: 2  # value 1 -> H74 bit[1]: egress::Millston.Provencal.$valid
        shift: 28
        buf_req: 28
        next: end
    BealCity:  # from state egress::BealCity
      *:
        0..1: H70  # egress::Millston.Grays.Chevak
        2..3: H69  # egress::Millston.Grays.Mendocino
        H74: 4  # value 1 -> H74 bit[2]: egress::Millston.Grays.$valid
        shift: 4
        buf_req: 4
        next: end
    Toluca:  # from state egress::Toluca
      *:
        0..1: H70  # egress::Millston.Grays.Chevak
        2..3: H69  # egress::Millston.Grays.Mendocino
        4..5: TH32  # egress::Millston.Gotham.StarLake
        6..7: TH33  # egress::Millston.Brookneal.SoapLake
        save: { half : 2..3 }
        shift: 8
        buf_req: 8
        next: Toluca.$split_0
    Toluca.$split_0:  # from state egress::Toluca.$split_0
      match: [ half ]
      0x12b5:
        H74: 28
            # - value 1 -> H74 bit[2]: egress::Millston.Grays.$valid
            # - value 1 -> H74 bit[3]: egress::Millston.Gotham.$valid
            # - value 1 -> H74 bit[4]: egress::Millston.Brookneal.$valid
        buf_req: 0
        next: Goodwin
      0xff32:
        H74: 28
            # - value 1 -> H74 bit[2]: egress::Millston.Grays.$valid
            # - value 1 -> H74 bit[3]: egress::Millston.Gotham.$valid
            # - value 1 -> H74 bit[4]: egress::Millston.Brookneal.$valid
        buf_req: 0
        next: Goodwin
      0x****:
        H74: 28
            # - value 1 -> H74 bit[2]: egress::Millston.Grays.$valid
            # - value 1 -> H74 bit[3]: egress::Millston.Gotham.$valid
            # - value 1 -> H74 bit[4]: egress::Millston.Brookneal.$valid
        buf_req: 0
        next: end
    Goodwin:  # from state egress::Goodwin
      *:
        0..3: TW7
            # - bit[0..7] -> TW7 bit[31..24]: egress::Millston.Hoven.Noyes
            # - bit[8..31] -> TW7 bit[23..0]: egress::Millston.Hoven.Allison
        4..5: TH10  # egress::Millston.Hoven.Petrey[23:8].8-23
        6..7: TH9
            # - bit[48..55] -> TH9 bit[15..8]: egress::Millston.Hoven.Petrey[7:0].0-7
            # - bit[56..63] -> TH9 bit[7..0]: egress::Millston.Hoven.Roosville
        8..9: TH34  # egress::Millston.Shirley.Adona[23:8].8-23
        10: TB4  # egress::Millston.Shirley.Adona[7:0].0-7
        11..14: TW8
            # - bit[88..111] -> TW8 bit[31..8]: egress::Millston.Shirley.Connell
            # - bit[112..119] -> TW8 bit[7..0]: egress::Millston.Shirley.Goldsboro[23:16].16-23
        15..16: TH35  # egress::Millston.Shirley.Goldsboro[15:0].0-15
        17..20: TW9
            # - bit[136..159] -> TW9 bit[31..8]: egress::Millston.Shirley.Fabens
            # - bit[160..167] -> TW9 bit[7..0]: egress::Millston.Shirley.McCaulley[15:8].8-15
        21: TB5  # egress::Millston.Shirley.McCaulley[7:0].0-7
        save: { byte1 : 22, half : 20..21 }
        shift: 22
        buf_req: 23
        next: Goodwin.$split_0
    Goodwin.$split_0:  # from state egress::Goodwin.$split_0
      match: [ byte1, half ]
      0x**0806:
        H74: 192
            # - value 1 -> H74 bit[6]: egress::Millston.Hoven.$valid
            # - value 1 -> H74 bit[7]: egress::Millston.Shirley.$valid
        save: { half : 0..1, byte0 : 2, byte1 : 3 }
        buf_req: 4
        next: Corvallis
      0x450800:
        H74: 192
            # - value 1 -> H74 bit[6]: egress::Millston.Hoven.$valid
            # - value 1 -> H74 bit[7]: egress::Millston.Shirley.$valid
        save: { half : 6..7, byte0 : 9 }
        buf_req: 10
        next: McBrides
      0x*50800:
        H74: 192
            # - value 1 -> H74 bit[6]: egress::Millston.Hoven.$valid
            # - value 1 -> H74 bit[7]: egress::Millston.Shirley.$valid
        buf_req: 0
        next: end
      0x**0800:
        H74: 192
            # - value 1 -> H74 bit[6]: egress::Millston.Hoven.$valid
            # - value 1 -> H74 bit[7]: egress::Millston.Shirley.$valid
        buf_req: 0
        next: end
      0x6*86dd:
        H74: 192
            # - value 1 -> H74 bit[6]: egress::Millston.Hoven.$valid
            # - value 1 -> H74 bit[7]: egress::Millston.Shirley.$valid
        buf_req: 0
        next: Sanford
      0x**86dd:
        H74: 192
            # - value 1 -> H74 bit[6]: egress::Millston.Hoven.$valid
            # - value 1 -> H74 bit[7]: egress::Millston.Shirley.$valid
        buf_req: 0
        next: end
      0x******:
        H74: 192
            # - value 1 -> H74 bit[6]: egress::Millston.Hoven.$valid
            # - value 1 -> H74 bit[7]: egress::Millston.Shirley.$valid
        buf_req: 0
        next: end
    Readsboro:  # from state egress::Readsboro
      *:
        0..1: H70  # egress::Millston.Grays.Chevak
        2..3: H69  # egress::Millston.Grays.Mendocino
        4..7: TW4  # egress::Millston.Osyka.Chloride
        8..11: TW6  # egress::Millston.Osyka.Garibaldi
        12: TB4
            # - bit[96..99] -> TB4 bit[7..4]: egress::Millston.Osyka.Weinert
            # - bit[100..103] -> TB4 bit[3..0]: egress::Millston.Osyka.Cornell
        13: B46  # egress::Millston.Osyka.Noyes
        14: TB6  # egress::Millston.Osyka.Helton[15:8].8-15
        15: TB5  # egress::Millston.Osyka.Helton[7:0].0-7
        16..17: TH33  # egress::Millston.Brookneal.SoapLake
        H74: 52
            # - value 1 -> H74 bit[2]: egress::Millston.Grays.$valid
            # - value 1 -> H74 bit[5]: egress::Millston.Osyka.$valid
            # - value 1 -> H74 bit[4]: egress::Millston.Brookneal.$valid
        shift: 18
        buf_req: 18
        next: end
    Astor:  # from state egress::Astor
      match: [ half, byte0, byte1 ]
      0x00000800:
        0: TB5
            # - bit[0] -> TB5 bit[7]: egress::Millston.Broadwell.Palmhurst
            # - bit[1] -> TB5 bit[6]: egress::Millston.Broadwell.Comfrey
            # - bit[2] -> TB5 bit[5]: egress::Millston.Broadwell.Kalida
            # - bit[3] -> TB5 bit[4]: egress::Millston.Broadwell.Wallula
            # - bit[4] -> TB5 bit[3]: egress::Millston.Broadwell.Dennison
            # - bit[5..7] -> TB5 bit[2..0]: egress::Millston.Broadwell.Fairhaven
        1: TB4
            # - bit[8..12] -> TB4 bit[7..3]: egress::Millston.Broadwell.Noyes
            # - bit[13..15] -> TB4 bit[2..0]: egress::Millston.Broadwell.Woodfield
        2..3: H69  # egress::Millston.Broadwell.LasVegas
        H74: 256  # value 1 -> H74 bit[8]: egress::Millston.Broadwell.$valid
        save: { byte1 : 4 }
        shift: 4
        buf_req: 5
        next: Hohenwald
      0x000086dd:
        0: TB5
            # - bit[0] -> TB5 bit[7]: egress::Millston.Broadwell.Palmhurst
            # - bit[1] -> TB5 bit[6]: egress::Millston.Broadwell.Comfrey
            # - bit[2] -> TB5 bit[5]: egress::Millston.Broadwell.Kalida
            # - bit[3] -> TB5 bit[4]: egress::Millston.Broadwell.Wallula
            # - bit[4] -> TB5 bit[3]: egress::Millston.Broadwell.Dennison
            # - bit[5..7] -> TB5 bit[2..0]: egress::Millston.Broadwell.Fairhaven
        1: TB4
            # - bit[8..12] -> TB4 bit[7..3]: egress::Millston.Broadwell.Noyes
            # - bit[13..15] -> TB4 bit[2..0]: egress::Millston.Broadwell.Woodfield
        2..3: H69  # egress::Millston.Broadwell.LasVegas
        H74: 256  # value 1 -> H74 bit[8]: egress::Millston.Broadwell.$valid
        save: { byte1 : 4 }
        shift: 4
        buf_req: 5
        next: Eolia
      0x********:
        0: TB5
            # - bit[0] -> TB5 bit[7]: egress::Millston.Broadwell.Palmhurst
            # - bit[1] -> TB5 bit[6]: egress::Millston.Broadwell.Comfrey
            # - bit[2] -> TB5 bit[5]: egress::Millston.Broadwell.Kalida
            # - bit[3] -> TB5 bit[4]: egress::Millston.Broadwell.Wallula
            # - bit[4] -> TB5 bit[3]: egress::Millston.Broadwell.Dennison
            # - bit[5..7] -> TB5 bit[2..0]: egress::Millston.Broadwell.Fairhaven
        1: TB4
            # - bit[8..12] -> TB4 bit[7..3]: egress::Millston.Broadwell.Noyes
            # - bit[13..15] -> TB4 bit[2..0]: egress::Millston.Broadwell.Woodfield
        2..3: H69  # egress::Millston.Broadwell.LasVegas
        H74: 256  # value 1 -> H74 bit[8]: egress::Millston.Broadwell.$valid
        shift: 4
        buf_req: 4
        next: end
    Hohenwald:  # from state egress::Hohenwald
      match: [ byte1 ]
      0x4*:
        save: { byte1 : 0 }
        buf_req: 1
        next: Sumner
      0x**:
        buf_req: 0
        next: end
    Sumner:  # from state egress::Sumner
      match: [ byte1 ]
      0x*5:
        save: { half : 6..7, byte0 : 9 }
        buf_req: 10
        next: McBrides
      0x**:
        buf_req: 0
        next: end
    Eolia:  # from state egress::Eolia
      match: [ byte1 ]
      0x6*:
        0..1: H82
            # - bit[0..3] -> H82 bit[15..12]: egress::Millston.Provencal.Fayette
            # - bit[4..9] -> H82 bit[11..6]: egress::Millston.Provencal.PineCity
            # - bit[10..11] -> H82 bit[5..4]: egress::Millston.Provencal.Alameda
            # - bit[12..15] -> H82 bit[3..0]: egress::Millston.Provencal.Maryhill[19:16].16-19
        2..3: TH30  # egress::Millston.Provencal.Maryhill[15:0].0-15
        4..7: TW4
            # - bit[32..47] -> TW4 bit[31..16]: egress::Millston.Provencal.Norwood
            # - bit[48..55] -> TW4 bit[15..8]: egress::Millston.Provencal.Dassel
            # - bit[56..63] -> TW4 bit[7..0]: egress::Millston.Provencal.Bushland
        8..9: TH16  # egress::Millston.Provencal.Kaluaaha[127:112].112-127
        10..11: TH15  # egress::Millston.Provencal.Kaluaaha[111:96].96-111
        14: TB7  # egress::Millston.Provencal.Kaluaaha[79:72].72-79
        15: TB6  # egress::Millston.Provencal.Kaluaaha[71:64].64-71
        16..19: TW11  # egress::Millston.Provencal.Kaluaaha[63:32].32-63
        20..23: TW10  # egress::Millston.Provencal.Kaluaaha[31:0].0-31
        24..27: TW22  # egress::Millston.Provencal.Calcasieu[127:96].96-127
        save: { byte1 : 6 }
        shift: 12
        buf_req: 28
        next: Sanford.$split_0
      0x**:
        buf_req: 0
        next: end
    Hillsview:  # from state egress::Hillsview
      *:
        0..1: H81  # bit[8..13] -> H81 bit[7..2]: egress::Millston.GlenAvon.PineCity
        9: B23  # egress::Millston.GlenAvon.Ocoee
        16..19: W18  # egress::Millston.GlenAvon.Calcasieu
        buf_req: 20
        next: end
    Westbury:  # from state egress::Westbury
      *:
        0..1: H81
            # - bit[0..3] -> H81 bit[15..12]: egress::Millston.Maumee.Fayette
            # - bit[4..9] -> H81 bit[11..6]: egress::Millston.Maumee.PineCity
            # - bit[10..11] -> H81 bit[5..4]: egress::Millston.Maumee.Alameda
            # - bit[12..15] -> H81 bit[3..0]: egress::Millston.Maumee.Maryhill[19:16].16-19
        2..5: TW7
            # - bit[16..31] -> TW7 bit[31..16]: egress::Millston.Maumee.Maryhill[15:0].0-15
            # - bit[32..47] -> TW7 bit[15..0]: egress::Millston.Maumee.Norwood
        6: B23  # egress::Millston.Maumee.Dassel
        7: B16  # egress::Millston.Maumee.Bushland
        8..9: H71  # egress::Millston.Maumee.Kaluaaha[127:112].112-127
        10..11: H18  # egress::Millston.Maumee.Kaluaaha[111:96].96-111
        12..15: W18  # egress::Millston.Maumee.Kaluaaha[95:64].64-95
        16..19: W17  # egress::Millston.Maumee.Kaluaaha[63:32].32-63
        20..23: W16  # egress::Millston.Maumee.Kaluaaha[31:0].0-31
        H74: 512  # value 1 -> H74 bit[9]: egress::Millston.Maumee.$valid
        save: { byte1 : 6 }
        shift: 24
        buf_req: 24
        next: Westbury.$split_0
    Westbury.$split_0:  # from state egress::Westbury.$split_0
      match: [ byte1 ]
      0x3a:
        0..3: W22  # egress::Millston.Maumee.Calcasieu[127:96].96-127
        4..7: W21  # egress::Millston.Maumee.Calcasieu[95:64].64-95
        8..11: W20  # egress::Millston.Maumee.Calcasieu[63:32].32-63
        12..15: W19  # egress::Millston.Maumee.Calcasieu[31:0].0-31
        shift: 16
        buf_req: 16
        next: BealCity
      0x11:
        0..3: W22  # egress::Millston.Maumee.Calcasieu[127:96].96-127
        4..7: W21  # egress::Millston.Maumee.Calcasieu[95:64].64-95
        8..11: W20  # egress::Millston.Maumee.Calcasieu[63:32].32-63
        12..15: W19  # egress::Millston.Maumee.Calcasieu[31:0].0-31
        shift: 16
        buf_req: 16
        next: Makawao
      0x06:
        0..3: W22  # egress::Millston.Maumee.Calcasieu[127:96].96-127
        4..7: W21  # egress::Millston.Maumee.Calcasieu[95:64].64-95
        8..11: W20  # egress::Millston.Maumee.Calcasieu[63:32].32-63
        12..15: W19  # egress::Millston.Maumee.Calcasieu[31:0].0-31
        shift: 16
        buf_req: 16
        next: Readsboro
      0x04:
        0..3: W22  # egress::Millston.Maumee.Calcasieu[127:96].96-127
        4..7: W21  # egress::Millston.Maumee.Calcasieu[95:64].64-95
        8..11: W20  # egress::Millston.Maumee.Calcasieu[63:32].32-63
        12..15: W19  # egress::Millston.Maumee.Calcasieu[31:0].0-31
        save: { byte1 : 16 }
        shift: 16
        buf_req: 17
        next: Baytown
      0x29:
        0..3: W22  # egress::Millston.Maumee.Calcasieu[127:96].96-127
        4..7: W21  # egress::Millston.Maumee.Calcasieu[95:64].64-95
        8..11: W20  # egress::Millston.Maumee.Calcasieu[63:32].32-63
        12..15: W19  # egress::Millston.Maumee.Calcasieu[31:0].0-31
        shift: 16
        buf_req: 16
        next: Sanford
      0x**:
        0..3: W22  # egress::Millston.Maumee.Calcasieu[127:96].96-127
        4..7: W21  # egress::Millston.Maumee.Calcasieu[95:64].64-95
        8..11: W20  # egress::Millston.Maumee.Calcasieu[63:32].32-63
        12..15: W19  # egress::Millston.Maumee.Calcasieu[31:0].0-31
        shift: 16
        buf_req: 16
        next: end
    Makawao:  # from state egress::Makawao
      *:
        0..1: H70  # egress::Millston.Grays.Chevak
        2..3: H69  # egress::Millston.Grays.Mendocino
        4..5: TH32  # egress::Millston.Gotham.StarLake
        6..7: TH33  # egress::Millston.Brookneal.SoapLake
        save: { half : 2..3 }
        shift: 8
        buf_req: 8
        next: Makawao.$split_0
    Makawao.$split_0:  # from state egress::Makawao.$split_0
      match: [ half ]
      0x****:
        H74: 28
            # - value 1 -> H74 bit[2]: egress::Millston.Grays.$valid
            # - value 1 -> H74 bit[3]: egress::Millston.Gotham.$valid
            # - value 1 -> H74 bit[4]: egress::Millston.Brookneal.$valid
        buf_req: 0
        next: end
    Stout:  # from state egress::Stout
      match: [ byte1 ]
      0x01:
        0..3: W24  # bit[16..23] -> W24 bit[15..8]: egress::HillTop.Wisdom.Miller[7:0].0-7
        1: B25  # bit[15] -> B25 bit[0]: egress::HillTop.Wisdom.Miller[8:8].8-8
        shift: 3
        buf_req: 4
        next: end
      0x02:
        0..3: W24  # bit[16..23] -> W24 bit[15..8]: egress::HillTop.Wisdom.Miller[7:0].0-7
        1: B25  # bit[15] -> B25 bit[0]: egress::HillTop.Wisdom.Miller[8:8].8-8
        shift: 3
        buf_req: 4
        next: end
      0x**:
        0..3: W24  # bit[16..23] -> W24 bit[15..8]: egress::HillTop.Wisdom.Miller[7:0].0-7
        1: B25  # bit[15] -> B25 bit[0]: egress::HillTop.Wisdom.Miller[8:8].8-8
        shift: 3
        buf_req: 4
        next: end
deparser egress:
  dictionary:
    H72: H74(10)
        # - bit[15..10]: egress::Millston.Hayfield.Blitchton if egress::Millston.Hayfield.$valid
        # - bit[9..0]: egress::Millston.Hayfield.Avondale if egress::Millston.Hayfield.$valid
    H31: H74(10)
        # - bit[15..12]: egress::Millston.Hayfield.Glassboro if egress::Millston.Hayfield.$valid
        # - bit[11..0]: egress::Millston.Hayfield.Grabill if egress::Millston.Hayfield.$valid
    H30: H74(10)
        # - bit[15..14]: egress::Millston.Hayfield.Moorcroft if egress::Millston.Hayfield.$valid
        # - bit[13..12]: egress::Millston.Hayfield.Toklat if egress::Millston.Hayfield.$valid
        # - bit[11..0]: egress::Millston.Hayfield.Bledsoe if egress::Millston.Hayfield.$valid
    B28: H74(10)  # egress::Millston.Hayfield.Blencoe if egress::Millston.Hayfield.$valid
    B26: H74(10)
        # - bit[7..6]: egress::Millston.Hayfield.AquaPark if egress::Millston.Hayfield.$valid
        # - bit[5..3]: egress::Millston.Hayfield.Vichy if egress::Millston.Hayfield.$valid
        # - bit[2]: egress::Millston.Hayfield.Lathrop if egress::Millston.Hayfield.$valid
        # - bit[1]: egress::Millston.Hayfield.Clyde if egress::Millston.Hayfield.$valid
        # - bit[0]: egress::Millston.Hayfield.Clarion if egress::Millston.Hayfield.$valid
    H28: H74(10)
        # - bit[15..12]: egress::Millston.Hayfield.Aguilita if egress::Millston.Hayfield.$valid
        # - bit[11..0]: egress::Millston.Hayfield.Harbor if egress::Millston.Hayfield.$valid
    H87: W23(1)  # egress::Millston.Calabash.Adona.8-23 if egress::Millston.Calabash.$valid
    B22: W23(1)  # egress::Millston.Calabash.Adona.0-7 if egress::Millston.Calabash.$valid
    H68: W23(1)  # egress::Millston.Calabash.Connell.8-23 if egress::Millston.Calabash.$valid
    B31: W23(1)  # egress::Millston.Calabash.Connell.0-7 if egress::Millston.Calabash.$valid
    B29: W23(1)  # egress::Millston.Calabash.Goldsboro.16-23 if egress::Millston.Calabash.$valid
    H73: W23(1)  # egress::Millston.Calabash.Goldsboro.0-15 if egress::Millston.Calabash.$valid
    B24: W23(1)  # egress::Millston.Calabash.Fabens.16-23 if egress::Millston.Calabash.$valid
    H26: W23(1)  # egress::Millston.Calabash.Fabens.0-15 if egress::Millston.Calabash.$valid
    H25: W23(1)  # egress::Millston.Calabash.McCaulley if egress::Millston.Calabash.$valid
    H22: B19(1)
        # - bit[15..13]: egress::Millston.Wondervu[0].Higginson if egress::Millston.Wondervu[0].$valid
        # - bit[12]: egress::Millston.Wondervu[0].Oriskany if egress::Millston.Wondervu[0].$valid
        # - bit[11..0]: egress::Millston.Wondervu[0].Bowden if egress::Millston.Wondervu[0].$valid
    H24: B19(1)  # egress::Millston.Wondervu[0].McCaulley if egress::Millston.Wondervu[0].$valid
    TW5: B19(0)
        # - bit[31..29]: egress::Millston.Wondervu[1].Higginson if egress::Millston.Wondervu[1].$valid
        # - bit[28]: egress::Millston.Wondervu[1].Oriskany if egress::Millston.Wondervu[1].$valid
        # - bit[27..16]: egress::Millston.Wondervu[1].Bowden if egress::Millston.Wondervu[1].$valid
        # - bit[15..0]: egress::Millston.Wondervu[1].McCaulley if egress::Millston.Wondervu[1].$valid
    H81: W23(3)
        # - bit[15..12]: egress::Millston.GlenAvon.Fayette if egress::Millston.GlenAvon.$valid
        # - bit[11..8]: egress::Millston.GlenAvon.Osterdock if egress::Millston.GlenAvon.$valid
        # - bit[7..2]: egress::Millston.GlenAvon.PineCity if egress::Millston.GlenAvon.$valid
        # - bit[1..0]: egress::Millston.GlenAvon.Alameda if egress::Millston.GlenAvon.$valid
    H18: W23(3)  # egress::Millston.GlenAvon.Rexville if egress::Millston.GlenAvon.$valid
    W16: W23(3)
        # - bit[31..16]: egress::Millston.GlenAvon.Quinwood if egress::Millston.GlenAvon.$valid
        # - bit[15]: egress::Millston.GlenAvon.Marfa if egress::Millston.GlenAvon.$valid
        # - bit[14]: egress::Millston.GlenAvon.Palatine if egress::Millston.GlenAvon.$valid
        # - bit[13]: egress::Millston.GlenAvon.Mabelle if egress::Millston.GlenAvon.$valid
        # - bit[12..0]: egress::Millston.GlenAvon.Hoagland if egress::Millston.GlenAvon.$valid
    B16: W23(3)  # egress::Millston.GlenAvon.Exton if egress::Millston.GlenAvon.$valid
    B23: W23(3)  # egress::Millston.GlenAvon.Ocoee if egress::Millston.GlenAvon.$valid
    checksum 0: W23(3)  # egress::Millston.GlenAvon.$valid
    W17: W23(3)  # egress::Millston.GlenAvon.Kaluaaha if egress::Millston.GlenAvon.$valid
    W18: W23(3)  # egress::Millston.GlenAvon.Calcasieu if egress::Millston.GlenAvon.$valid
    H81: H74(9)
        # - bit[15..12]: egress::Millston.Maumee.Fayette if egress::Millston.Maumee.$valid
        # - bit[11..6]: egress::Millston.Maumee.PineCity if egress::Millston.Maumee.$valid
        # - bit[5..4]: egress::Millston.Maumee.Alameda if egress::Millston.Maumee.$valid
        # - bit[3..0]: egress::Millston.Maumee.Maryhill.16-19 if egress::Millston.Maumee.$valid
    TW7: H74(9)
        # - bit[31..16]: egress::Millston.Maumee.Maryhill.0-15 if egress::Millston.Maumee.$valid
        # - bit[15..0]: egress::Millston.Maumee.Norwood if egress::Millston.Maumee.$valid
    B23: H74(9)  # egress::Millston.Maumee.Dassel if egress::Millston.Maumee.$valid
    B16: H74(9)  # egress::Millston.Maumee.Bushland if egress::Millston.Maumee.$valid
    H71: H74(9)  # egress::Millston.Maumee.Kaluaaha.112-127 if egress::Millston.Maumee.$valid
    H18: H74(9)  # egress::Millston.Maumee.Kaluaaha.96-111 if egress::Millston.Maumee.$valid
    W18: H74(9)  # egress::Millston.Maumee.Kaluaaha.64-95 if egress::Millston.Maumee.$valid
    W17: H74(9)  # egress::Millston.Maumee.Kaluaaha.32-63 if egress::Millston.Maumee.$valid
    W16: H74(9)  # egress::Millston.Maumee.Kaluaaha.0-31 if egress::Millston.Maumee.$valid
    W22: H74(9)  # egress::Millston.Maumee.Calcasieu.96-127 if egress::Millston.Maumee.$valid
    W21: H74(9)  # egress::Millston.Maumee.Calcasieu.64-95 if egress::Millston.Maumee.$valid
    W20: H74(9)  # egress::Millston.Maumee.Calcasieu.32-63 if egress::Millston.Maumee.$valid
    W19: H74(9)  # egress::Millston.Maumee.Calcasieu.0-31 if egress::Millston.Maumee.$valid
    TB5: H74(8)
        # - bit[7]: egress::Millston.Broadwell.Palmhurst if egress::Millston.Broadwell.$valid
        # - bit[6]: egress::Millston.Broadwell.Comfrey if egress::Millston.Broadwell.$valid
        # - bit[5]: egress::Millston.Broadwell.Kalida if egress::Millston.Broadwell.$valid
        # - bit[4]: egress::Millston.Broadwell.Wallula if egress::Millston.Broadwell.$valid
        # - bit[3]: egress::Millston.Broadwell.Dennison if egress::Millston.Broadwell.$valid
        # - bit[2..0]: egress::Millston.Broadwell.Fairhaven if egress::Millston.Broadwell.$valid
    TB4: H74(8)
        # - bit[7..3]: egress::Millston.Broadwell.Noyes if egress::Millston.Broadwell.$valid
        # - bit[2..0]: egress::Millston.Broadwell.Woodfield if egress::Millston.Broadwell.$valid
    H69: H74(8)  # egress::Millston.Broadwell.LasVegas if egress::Millston.Broadwell.$valid
    H70: H74(2)  # egress::Millston.Grays.Chevak if egress::Millston.Grays.$valid
    H69: H74(2)  # egress::Millston.Grays.Mendocino if egress::Millston.Grays.$valid
    TH32: H74(3)  # egress::Millston.Gotham.StarLake if egress::Millston.Gotham.$valid
    TW4: H74(5)  # egress::Millston.Osyka.Chloride if egress::Millston.Osyka.$valid
    TW6: H74(5)  # egress::Millston.Osyka.Garibaldi if egress::Millston.Osyka.$valid
    TB4: H74(5)
        # - bit[7..4]: egress::Millston.Osyka.Weinert if egress::Millston.Osyka.$valid
        # - bit[3..0]: egress::Millston.Osyka.Cornell if egress::Millston.Osyka.$valid
    B46: H74(5)  # egress::Millston.Osyka.Noyes if egress::Millston.Osyka.$valid
    TB6: H74(5)  # egress::Millston.Osyka.Helton.8-15 if egress::Millston.Osyka.$valid
    TB5: H74(5)  # egress::Millston.Osyka.Helton.0-7 if egress::Millston.Osyka.$valid
    TH33: H74(4)  # egress::Millston.Brookneal.SoapLake if egress::Millston.Brookneal.$valid
    TW7: H74(6)
        # - bit[31..24]: egress::Millston.Hoven.Noyes if egress::Millston.Hoven.$valid
        # - bit[23..0]: egress::Millston.Hoven.Allison if egress::Millston.Hoven.$valid
    TH10: H74(6)  # egress::Millston.Hoven.Petrey.8-23 if egress::Millston.Hoven.$valid
    TH9: H74(6)
        # - bit[15..8]: egress::Millston.Hoven.Petrey.0-7 if egress::Millston.Hoven.$valid
        # - bit[7..0]: egress::Millston.Hoven.Roosville if egress::Millston.Hoven.$valid
    TH34: H74(7)  # egress::Millston.Shirley.Adona.8-23 if egress::Millston.Shirley.$valid
    TB4: H74(7)  # egress::Millston.Shirley.Adona.0-7 if egress::Millston.Shirley.$valid
    TW8: H74(7)
        # - bit[31..8]: egress::Millston.Shirley.Connell if egress::Millston.Shirley.$valid
        # - bit[7..0]: egress::Millston.Shirley.Goldsboro.16-23 if egress::Millston.Shirley.$valid
    TH35: H74(7)  # egress::Millston.Shirley.Goldsboro.0-15 if egress::Millston.Shirley.$valid
    TW9: H74(7)
        # - bit[31..8]: egress::Millston.Shirley.Fabens if egress::Millston.Shirley.$valid
        # - bit[7..0]: egress::Millston.Shirley.McCaulley.8-15 if egress::Millston.Shirley.$valid
    TB5: H74(7)  # egress::Millston.Shirley.McCaulley.0-7 if egress::Millston.Shirley.$valid
    H82: W23(4)
        # - bit[15..12]: egress::Millston.Ramos.Fayette if egress::Millston.Ramos.$valid
        # - bit[11..8]: egress::Millston.Ramos.Osterdock if egress::Millston.Ramos.$valid
        # - bit[7..2]: egress::Millston.Ramos.PineCity if egress::Millston.Ramos.$valid
        # - bit[1..0]: egress::Millston.Ramos.Alameda if egress::Millston.Ramos.$valid
    TH15: W23(4)  # egress::Millston.Ramos.Rexville if egress::Millston.Ramos.$valid
    TW4: W23(4)
        # - bit[31..16]: egress::Millston.Ramos.Quinwood if egress::Millston.Ramos.$valid
        # - bit[15]: egress::Millston.Ramos.Marfa if egress::Millston.Ramos.$valid
        # - bit[14]: egress::Millston.Ramos.Palatine if egress::Millston.Ramos.$valid
        # - bit[13]: egress::Millston.Ramos.Mabelle if egress::Millston.Ramos.$valid
        # - bit[12..0]: egress::Millston.Ramos.Hoagland if egress::Millston.Ramos.$valid
    TH6: W23(4)
        # - bit[15..8]: egress::Millston.Ramos.Exton if egress::Millston.Ramos.$valid
        # - bit[7..0]: egress::Millston.Ramos.Ocoee if egress::Millston.Ramos.$valid
    checksum 1: W23(4)  # egress::Millston.Ramos.$valid
    TW10: W23(4)  # egress::Millston.Ramos.Kaluaaha if egress::Millston.Ramos.$valid
    TW11: W23(4)  # egress::Millston.Ramos.Calcasieu if egress::Millston.Ramos.$valid
    H82: H74(1)
        # - bit[15..12]: egress::Millston.Provencal.Fayette if egress::Millston.Provencal.$valid
        # - bit[11..6]: egress::Millston.Provencal.PineCity if egress::Millston.Provencal.$valid
        # - bit[5..4]: egress::Millston.Provencal.Alameda if egress::Millston.Provencal.$valid
        # - bit[3..0]: egress::Millston.Provencal.Maryhill.16-19 if egress::Millston.Provencal.$valid
    TH30: H74(1)  # egress::Millston.Provencal.Maryhill.0-15 if egress::Millston.Provencal.$valid
    TW4: H74(1)
        # - bit[31..16]: egress::Millston.Provencal.Norwood if egress::Millston.Provencal.$valid
        # - bit[15..8]: egress::Millston.Provencal.Dassel if egress::Millston.Provencal.$valid
        # - bit[7..0]: egress::Millston.Provencal.Bushland if egress::Millston.Provencal.$valid
    TH16: H74(1)  # egress::Millston.Provencal.Kaluaaha.112-127 if egress::Millston.Provencal.$valid
    TH15: H74(1)  # egress::Millston.Provencal.Kaluaaha.96-111 if egress::Millston.Provencal.$valid
    TH6: H74(1)  # egress::Millston.Provencal.Kaluaaha.80-95 if egress::Millston.Provencal.$valid
    TB7: H74(1)  # egress::Millston.Provencal.Kaluaaha.72-79 if egress::Millston.Provencal.$valid
    TB6: H74(1)  # egress::Millston.Provencal.Kaluaaha.64-71 if egress::Millston.Provencal.$valid
    TW11: H74(1)  # egress::Millston.Provencal.Kaluaaha.32-63 if egress::Millston.Provencal.$valid
    TW10: H74(1)  # egress::Millston.Provencal.Kaluaaha.0-31 if egress::Millston.Provencal.$valid
    TW22: H74(1)  # egress::Millston.Provencal.Calcasieu.96-127 if egress::Millston.Provencal.$valid
    TW21: H74(1)  # egress::Millston.Provencal.Calcasieu.64-95 if egress::Millston.Provencal.$valid
    TW20: H74(1)  # egress::Millston.Provencal.Calcasieu.32-63 if egress::Millston.Provencal.$valid
    TH17: H74(1)  # egress::Millston.Provencal.Calcasieu.16-31 if egress::Millston.Provencal.$valid
    TB9: H74(1)  # egress::Millston.Provencal.Calcasieu.8-15 if egress::Millston.Provencal.$valid
    TB8: H74(1)  # egress::Millston.Provencal.Calcasieu.0-7 if egress::Millston.Provencal.$valid
    TH8: W23(5)  # egress::Millston.Bergton.Chevak if egress::Millston.Bergton.$valid
    TH7: W23(5)  # egress::Millston.Bergton.Mendocino if egress::Millston.Bergton.$valid
    TH12: H74(0)  # egress::Millston.Cassa.Chloride.16-31 if egress::Millston.Cassa.$valid
    TH11: H74(0)  # egress::Millston.Cassa.Chloride.0-15 if egress::Millston.Cassa.$valid
    TH14: H74(0)  # egress::Millston.Cassa.Garibaldi.16-31 if egress::Millston.Cassa.$valid
    TH13: H74(0)  # egress::Millston.Cassa.Garibaldi.0-15 if egress::Millston.Cassa.$valid
    TW6: H74(0)
        # - bit[31..28]: egress::Millston.Cassa.Weinert if egress::Millston.Cassa.$valid
        # - bit[27..24]: egress::Millston.Cassa.Cornell if egress::Millston.Cassa.$valid
        # - bit[23..16]: egress::Millston.Cassa.Noyes if egress::Millston.Cassa.$valid
        # - bit[15..0]: egress::Millston.Cassa.Helton if egress::Millston.Cassa.$valid
    TH11: W23(6)  # egress::Millston.Pawtucket.StarLake if egress::Millston.Pawtucket.$valid
    TH31: W23(7)  # egress::Millston.Buckhorn.SoapLake if egress::Millston.Buckhorn.$valid
    TW6: W23(2)
        # - bit[31..16]: egress::Millston.Rainelle.Conner if egress::Millston.Rainelle.$valid
        # - bit[15..0]: egress::Millston.Rainelle.Ledoux if egress::Millston.Rainelle.$valid
    TW4: W23(2)
        # - bit[31..24]: egress::Millston.Rainelle.Steger if egress::Millston.Rainelle.$valid
        # - bit[23..16]: egress::Millston.Rainelle.Quogue if egress::Millston.Rainelle.$valid
        # - bit[15..0]: egress::Millston.Rainelle.Findlay if egress::Millston.Rainelle.$valid
  checksum 0: 
    - H81: { }
        # - bit[15..12]: egress::Millston.GlenAvon.Fayette
        # - bit[11..8]: egress::Millston.GlenAvon.Osterdock
        # - bit[7..2]: egress::Millston.GlenAvon.PineCity
        # - bit[1..0]: egress::Millston.GlenAvon.Alameda
    - H18: { }  # egress::Millston.GlenAvon.Rexville
    - W16: { }
        # - bit[31..16]: egress::Millston.GlenAvon.Quinwood
        # - bit[15]: egress::Millston.GlenAvon.Marfa
        # - bit[14]: egress::Millston.GlenAvon.Palatine
        # - bit[13]: egress::Millston.GlenAvon.Mabelle
        # - bit[12..0]: egress::Millston.GlenAvon.Hoagland
    - B16: { swap: 1 }  # egress::Millston.GlenAvon.Exton
    - B23: { }  # egress::Millston.GlenAvon.Ocoee
    - W17: { }  # egress::Millston.GlenAvon.Kaluaaha
    - W18: { }  # egress::Millston.GlenAvon.Calcasieu
  checksum 1: 
    - H82: { }
        # - bit[15..12]: egress::Millston.Ramos.Fayette
        # - bit[11..8]: egress::Millston.Ramos.Osterdock
        # - bit[7..2]: egress::Millston.Ramos.PineCity
        # - bit[1..0]: egress::Millston.Ramos.Alameda
    - TH15: { }  # egress::Millston.Ramos.Rexville
    - TW4: { }
        # - bit[31..16]: egress::Millston.Ramos.Quinwood
        # - bit[15]: egress::Millston.Ramos.Marfa
        # - bit[14]: egress::Millston.Ramos.Palatine
        # - bit[13]: egress::Millston.Ramos.Mabelle
        # - bit[12..0]: egress::Millston.Ramos.Hoagland
    - TH6: { }
        # - bit[15..8]: egress::Millston.Ramos.Exton
        # - bit[7..0]: egress::Millston.Ramos.Ocoee
    - TW10: { }  # egress::Millston.Ramos.Kaluaaha
    - TW11: { }  # egress::Millston.Ramos.Calcasieu
  drop_ctl: B20(0..2)  # bit[2..0]: egress::eg_intr_md_for_dprsr.drop_ctl
  egress_unicast_port: H16(0..8)  # bit[8..0]: egress::eg_intr_md.egress_port
  mirror:
    select: B17(0..2)  # bit[2..0]: egress::eg_intr_md_for_dprsr.mirror_type
    2:
      - H19(0..9)  # bit[9..0]: egress::HillTop.McCaskill.Grassflat
      - B25  # egress::HillTop.Plains.Roachdale
      - H17(0..8)  # bit[8..0]: egress::HillTop.Plains.Miller
stage 0 ingress:
  phase0_match Thaxton.$PORT_METADATA:
    p4:
      name: Thaxton.$PORT_METADATA
      size: 288
      preferred_match_type: exact
      match_type: exact
    size: 288
    p4_param_order:
      Tiburon.ingress_port: { type: exact, size: 9 }
    format: {Fristoe: 48..61, Traverse: 32..43, Pachuta: 24..24, Sopris: 16..17}
    constant_value: 0
    actions:
      set_port_metadata:
      - handle: 0x20000000
      - p4_param_order: { Fristoe: 14, Traverse: 12, Pachuta: 1, Sopris: 2 } 
  ternary_match Rotonda_0 0:
    p4: { name: Rotonda, size: 2, disable_atomic_modify : true }
    p4_param_order: 
      Millston.Ramos.$valid: { type: exact, size: 1, full_size: 1, key_name: "Ramos" }
      Millston.Provencal.$valid: { type: exact, size: 1, full_size: 1, key_name: "Provencal" }
    row: 11
    bus: 1
    column: 1
    hash_dist:
      0: { hash: 0, mask: 0xffff, shift: 0 }
      1: { hash: 0, mask: 0xffff, shift: 0 }
    input_xbar:
      ternary group 0: { 2: Millston.Provencal.$valid, 13: Millston.Ramos.$valid }
      exact group 0: { 0: HillTop.Maddock.Calcasieu, 32: HillTop.Maddock.Kaluaaha, 64: HillTop.Aldan.Vinemont }
      hash 0:
        0..15: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 72, { 8: HillTop.Maddock.Calcasieu, 40: HillTop.Maddock.Kaluaaha }, { })), 0..15)
      hash 1:
        0..15: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 72, { 0: HillTop.Aldan.Vinemont }, { })), 0..15)
      hash group 0:
        table: [0, 1]
        seed: 0x0
      exact group 0: { 0: HillTop.Sublett.Calcasieu.96-127, 32: HillTop.Sublett.Kaluaaha.0-31, 64: HillTop.Aldan.Vinemont, 72: HillTop.Sublett.Kaluaaha.32-63(8..31), 96: HillTop.Sublett.Kaluaaha.32-63(0..7), 104: HillTop.Sublett.Kaluaaha.64-95(8..31) }
      exact group 1: { 0: HillTop.Sublett.Kaluaaha.64-95(0..7), 8: HillTop.Sublett.Kaluaaha.96-127(8..31), 32: HillTop.Sublett.Kaluaaha.96-127(0..7), 40: HillTop.Sublett.Calcasieu.0-31(8..31), 64: HillTop.Sublett.Calcasieu.0-31(0..7), 72: HillTop.Sublett.Calcasieu.32-63(8..31), 96: HillTop.Sublett.Calcasieu.32-63(0..7), 104: HillTop.Sublett.Calcasieu.64-95(8..31) }
      exact group 2: { 0: HillTop.Sublett.Calcasieu.64-95(0..7), 8: Millston.Provencal.Maryhill.8-19(8..11), 16: Millston.Provencal.Maryhill.8-19(0..7), 24: Millston.Provencal.Maryhill.0-7 }
      hash 0:
        16..31: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 284, { 124: HillTop.Sublett.Calcasieu.96-127, 156: HillTop.Sublett.Kaluaaha.0-31 }, { })), 0..15)
      hash 1:
        16..31: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 284, { 0: HillTop.Aldan.Vinemont, 188: HillTop.Sublett.Kaluaaha.32-63(0..7), 196: HillTop.Sublett.Kaluaaha.32-63(8..31), 228: HillTop.Sublett.Kaluaaha.64-95(8..31) }, { })), 0..15)
      hash 2:
        16..31: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 284, { 36: HillTop.Sublett.Calcasieu.0-31(8..31), 220: HillTop.Sublett.Kaluaaha.64-95(0..7), 252: HillTop.Sublett.Kaluaaha.96-127(0..7), 260: HillTop.Sublett.Kaluaaha.96-127(8..31) }, { })), 0..15)
      hash 3:
        16..31: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 284, { 28: HillTop.Sublett.Calcasieu.0-31(0..7), 60: HillTop.Sublett.Calcasieu.32-63(0..7), 68: HillTop.Sublett.Calcasieu.32-63(8..31), 100: HillTop.Sublett.Calcasieu.64-95(8..31) }, { })), 0..15)
      hash 4:
        16..31: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 284, { 8: Millston.Provencal.Maryhill.0-7, 16: Millston.Provencal.Maryhill.8-19(0..7), 24: Millston.Provencal.Maryhill.8-19(8..11), 92: HillTop.Sublett.Calcasieu.64-95(0..7) }, { })), 0..15)
      hash group 0:
        table: [0, 1, 2, 3, 4]
        seed: 0x0
    match:
    - { group: 0, byte_config: 3, dirtcam: 0x5 }
    hit: [  _Cheyenne ]
    miss:  _Cheyenne
    indirect: Rotonda_0$tind
  ternary_indirect Rotonda_0$tind:
    row: 4
    bus: 0
    column: 5
    hash_dist:
      0: { hash: 0, mask: 0xffff, shift: 0 }
      1: { hash: 0, mask: 0xffff, shift: 0 }
    input_xbar:
      ternary group 0: { 2: Millston.Provencal.$valid, 13: Millston.Ramos.$valid }
      exact group 0: { 0: HillTop.Maddock.Calcasieu, 32: HillTop.Maddock.Kaluaaha, 64: HillTop.Aldan.Vinemont }
      hash 0:
        0..15: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 72, { 8: HillTop.Maddock.Calcasieu, 40: HillTop.Maddock.Kaluaaha }, { })), 0..15)
      hash 1:
        0..15: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 72, { 0: HillTop.Aldan.Vinemont }, { })), 0..15)
      hash group 0:
        table: [0, 1]
        seed: 0x0
      exact group 0: { 0: HillTop.Sublett.Calcasieu.96-127, 32: HillTop.Sublett.Kaluaaha.0-31, 64: HillTop.Aldan.Vinemont, 72: HillTop.Sublett.Kaluaaha.32-63(8..31), 96: HillTop.Sublett.Kaluaaha.32-63(0..7), 104: HillTop.Sublett.Kaluaaha.64-95(8..31) }
      exact group 1: { 0: HillTop.Sublett.Kaluaaha.64-95(0..7), 8: HillTop.Sublett.Kaluaaha.96-127(8..31), 32: HillTop.Sublett.Kaluaaha.96-127(0..7), 40: HillTop.Sublett.Calcasieu.0-31(8..31), 64: HillTop.Sublett.Calcasieu.0-31(0..7), 72: HillTop.Sublett.Calcasieu.32-63(8..31), 96: HillTop.Sublett.Calcasieu.32-63(0..7), 104: HillTop.Sublett.Calcasieu.64-95(8..31) }
      exact group 2: { 0: HillTop.Sublett.Calcasieu.64-95(0..7), 8: Millston.Provencal.Maryhill.8-19(8..11), 16: Millston.Provencal.Maryhill.8-19(0..7), 24: Millston.Provencal.Maryhill.0-7 }
      hash 0:
        16..31: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 284, { 124: HillTop.Sublett.Calcasieu.96-127, 156: HillTop.Sublett.Kaluaaha.0-31 }, { })), 0..15)
      hash 1:
        16..31: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 284, { 0: HillTop.Aldan.Vinemont, 188: HillTop.Sublett.Kaluaaha.32-63(0..7), 196: HillTop.Sublett.Kaluaaha.32-63(8..31), 228: HillTop.Sublett.Kaluaaha.64-95(8..31) }, { })), 0..15)
      hash 2:
        16..31: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 284, { 36: HillTop.Sublett.Calcasieu.0-31(8..31), 220: HillTop.Sublett.Kaluaaha.64-95(0..7), 252: HillTop.Sublett.Kaluaaha.96-127(0..7), 260: HillTop.Sublett.Kaluaaha.96-127(8..31) }, { })), 0..15)
      hash 3:
        16..31: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 284, { 28: HillTop.Sublett.Calcasieu.0-31(0..7), 60: HillTop.Sublett.Calcasieu.32-63(0..7), 68: HillTop.Sublett.Calcasieu.32-63(8..31), 100: HillTop.Sublett.Calcasieu.64-95(8..31) }, { })), 0..15)
      hash 4:
        16..31: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 284, { 8: Millston.Provencal.Maryhill.0-7, 16: Millston.Provencal.Maryhill.8-19(0..7), 24: Millston.Provencal.Maryhill.8-19(8..11), 92: HillTop.Sublett.Calcasieu.64-95(0..7) }, { })), 0..15)
      hash group 0:
        table: [0, 1, 2, 3, 4]
        seed: 0x0
    format: { action: 0..0 }
    action_bus: { 64..65 : hash_dist(0, lo), 66..67 : hash_dist(1, hi) }
    instruction: Rotonda_0$tind(action, $DEFAULT)
    actions:
      Kinard(0, 1):
      - default_action: { allowed: true }
      - handle: 0x20000001
      - next_table: 0
      - set H60, hash_dist(0, 0..15)
      Pendleton(1, 2):
      - default_action: { allowed: true }
      - handle: 0x20000002
      - next_table: 0
      - set H60, hash_dist(1, 0..15)
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x20000003
      - next_table: 0
    default_only_action: NoAction
  ternary_match _Cheyenne 1:
    p4: { name: Cheyenne, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      Millston.Calabash.Adona: { type: ternary, size: 24, full_size: 24, key_name: "Calabash.Adona" }
      Millston.Calabash.Connell: { type: ternary, size: 24, full_size: 24, key_name: "Calabash.Connell" }
      Millston.GlenAvon.Calcasieu: { type: ternary, size: 32, full_size: 32, key_name: "GlenAvon.Calcasieu" }
      Millston.Maumee.Calcasieu: { type: ternary, size: 128, full_size: 128, key_name: "Maumee.Calcasieu" }
      HillTop.RossFork.Joslin: { type: ternary, size: 3, full_size: 3, key_name: "RossFork.Joslin" }
      Millston.Maumee.$valid: { type: exact, size: 1, full_size: 1, key_name: "Maumee" }
    row: [ 0, 1, 2, 3, 4 ]
    bus: [ 0, 0, 0, 0, 0 ]
    column:
    - 0
    - 0
    - 0
    - 0
    - 0
    input_xbar:
      ternary group 1: { 0: Millston.Calabash.Adona(8..15), 8: Millston.Maumee.Calcasieu.96-127(24..31), 16: Millston.Maumee.Calcasieu.96-127(0..7), 24: Millston.Calabash.Adona(0..7), 32: Millston.Maumee.Calcasieu.96-127(16..23) }
      ternary group 2: { 0: Millston.Maumee.Calcasieu.0-31(24..31), 8: Millston.Maumee.Calcasieu.0-31(0..23), 32: Millston.Maumee.Calcasieu.32-63(24..31) }
      ternary group 3: { 0: Millston.Maumee.Calcasieu.96-127(8..15), 8: Millston.GlenAvon.Calcasieu(16..31), 24: Millston.GlenAvon.Calcasieu(0..15) }
      ternary group 4: { 0: Millston.Maumee.Calcasieu.32-63(16..23), 8: Millston.Maumee.Calcasieu.64-95(24..31), 16: Millston.Maumee.Calcasieu.32-63(0..15), 32: Millston.Maumee.Calcasieu.64-95(16..23) }
      ternary group 5: { 0: Millston.Maumee.Calcasieu.64-95(0..15), 21: HillTop.RossFork.Joslin, 24: Millston.Calabash.Connell.0-15(8..15), 32: Millston.Calabash.Connell.0-15(0..7) }
      byte group 0: { 2: Millston.Maumee.$valid }
      byte group 1: { 0: Millston.Calabash.Connell.16-23 }
      byte group 2: { 0: Millston.Calabash.Adona(16..23) }
    match:
    - { group: 1, byte_group: 1, byte_config: 0, dirtcam: 0x555 }
    - { group: 2, byte_group: 1, byte_config: 1, dirtcam: 0x555 }
    - { group: 3, byte_group: 2, byte_config: 0, dirtcam: 0x555 }
    - { group: 4, byte_group: 2, byte_config: 1, dirtcam: 0x555 }
    - { group: 5, byte_group: 0, byte_config: 0, dirtcam: 0x555 }
    hit: [  _Pacifica ]
    miss:  _Pacifica
    indirect: _Cheyenne$tind
  ternary_indirect _Cheyenne$tind:
    row: 3
    bus: 0
    column: 5
    input_xbar:
      ternary group 1: { 0: Millston.Calabash.Adona(8..15), 8: Millston.Maumee.Calcasieu.96-127(24..31), 16: Millston.Maumee.Calcasieu.96-127(0..7), 24: Millston.Calabash.Adona(0..7), 32: Millston.Maumee.Calcasieu.96-127(16..23) }
      ternary group 2: { 0: Millston.Maumee.Calcasieu.0-31(24..31), 8: Millston.Maumee.Calcasieu.0-31(0..23), 32: Millston.Maumee.Calcasieu.32-63(24..31) }
      ternary group 3: { 0: Millston.Maumee.Calcasieu.96-127(8..15), 8: Millston.GlenAvon.Calcasieu(16..31), 24: Millston.GlenAvon.Calcasieu(0..15) }
      ternary group 4: { 0: Millston.Maumee.Calcasieu.32-63(16..23), 8: Millston.Maumee.Calcasieu.64-95(24..31), 16: Millston.Maumee.Calcasieu.32-63(0..15), 32: Millston.Maumee.Calcasieu.64-95(16..23) }
      ternary group 5: { 0: Millston.Maumee.Calcasieu.64-95(0..15), 21: HillTop.RossFork.Joslin, 24: Millston.Calabash.Connell.0-15(8..15), 32: Millston.Calabash.Connell.0-15(0..7) }
      byte group 0: { 2: Millston.Maumee.$valid }
      byte group 1: { 0: Millston.Calabash.Connell.16-23 }
      byte group 2: { 0: Millston.Calabash.Adona(16..23) }
    format: { action: 0..0 }
    instruction: _Cheyenne$tind(action, $DEFAULT)
    actions:
      Aguila(0, 3):
      - default_action: { allowed: true }
      - handle: 0x20000013
      - next_table: 0
      - set HillTop.Wisdom.Onycha, 5
      - set HillTop.RossFork.Adona, Millston.Calabash.Adona
      - set HillTop.RossFork.Connell.0-15, Millston.Calabash.Connell.0-15
      - set HillTop.RossFork.Connell.16-23, Millston.Calabash.Connell.16-23
      - set HillTop.RossFork.Goldsboro.0-7, Millston.Calabash.Goldsboro.0-7
      - set HillTop.RossFork.Goldsboro.8-23, Millston.Calabash.Goldsboro.8-23
      - set HillTop.RossFork.Fabens, Millston.Calabash.Fabens
      - set Millston.Calabash.McCaulley.0-7, HillTop.RossFork.McCaulley.0-7
      - set Millston.Calabash.McCaulley.8-15, HillTop.RossFork.McCaulley.8-15
      - set HillTop.Edwards.Oriskany, 0
      - set HillTop.RossFork.Denhoff.0-0, HillTop.Aldan.Kearns.0-0
      - set HillTop.RossFork.Denhoff.1-2, HillTop.Aldan.Kearns.1-2
      - set HillTop.RossFork.Ocoee, HillTop.Aldan.Vinemont
      - set HillTop.RossFork.Exton, HillTop.Aldan.Kenbridge
      - set HillTop.RossFork.Naruna.0-1, HillTop.Aldan.Mystic.0-1
      - set HillTop.RossFork.Naruna.2-2, HillTop.Aldan.Mystic.2-2
      - set HillTop.Bessie.Chevak, HillTop.RossFork.Chevak
      - set HillTop.Bessie.Peebles, HillTop.Aldan.Kearns.0-0
      - or H63, H48, H63
      Kapowsin(1, 4):
      - default_action: { allowed: true }
      - handle: 0x20000014
      - next_table: 0
      - set HillTop.Wisdom.Onycha, 0
      - set HillTop.Edwards.Oriskany, Millston.Wondervu$0.Oriskany
      - set HillTop.RossFork.ElVerano, Millston.Wondervu$0.$valid
      - set HillTop.RossFork.Joslin, 0
      - set HillTop.RossFork.Adona, Millston.Calabash.Adona
      - set HillTop.RossFork.Connell.0-15, Millston.Calabash.Connell.0-15
      - set HillTop.RossFork.Connell.16-23, Millston.Calabash.Connell.16-23
      - set HillTop.RossFork.Goldsboro.0-7, Millston.Calabash.Goldsboro.0-7
      - set HillTop.RossFork.Goldsboro.8-23, Millston.Calabash.Goldsboro.8-23
      - set HillTop.RossFork.Fabens, Millston.Calabash.Fabens
      - set HillTop.RossFork.Naruna.0-1, HillTop.Aldan.Parkville(0..1)
      - set HillTop.RossFork.Naruna.2-2, HillTop.Aldan.Parkville(2..2)
      - set HillTop.RossFork.McCaulley.0-7, Millston.Calabash.McCaulley.0-7
      - set HillTop.RossFork.McCaulley.8-15, Millston.Calabash.McCaulley.8-15
      - set HillTop.Sublett.Kaluaaha.0-31, Millston.Maumee.Kaluaaha.0-31
      - set HillTop.Sublett.Kaluaaha.32-63, Millston.Maumee.Kaluaaha.32-63
      - set HillTop.Sublett.Kaluaaha.64-95, Millston.Maumee.Kaluaaha.64-95
      - set HillTop.Sublett.Kaluaaha.96-127, Millston.Maumee.Kaluaaha.96-127
      - set HillTop.Sublett.Calcasieu.0-31, Millston.Maumee.Calcasieu.0-31
      - set HillTop.Sublett.Calcasieu.32-63, Millston.Maumee.Calcasieu.32-63
      - set HillTop.Sublett.Calcasieu.64-95, Millston.Maumee.Calcasieu.64-95
      - set HillTop.Sublett.Calcasieu.96-127, Millston.Maumee.Calcasieu.96-127
      - set HillTop.Sublett.PineCity, Millston.Maumee.PineCity
      - set HillTop.RossFork.Ocoee, Millston.Maumee.Dassel
      - set HillTop.RossFork.Chevak, Millston.Grays.Chevak
      - set HillTop.RossFork.Mendocino, Millston.Grays.Mendocino
      - set HillTop.RossFork.Kremlin, Millston.Osyka.Noyes
      - set HillTop.RossFork.Denhoff.0-0, HillTop.Aldan.Malinta.0-0
      - set HillTop.RossFork.Denhoff.1-2, HillTop.Aldan.Malinta.1-2
      - set HillTop.RossFork.Glenmora, Millston.Grays.Chevak
      - set HillTop.RossFork.DonaAna, Millston.Grays.Mendocino
      - set HillTop.Bessie.Chevak, Millston.Grays.Chevak
      - set HillTop.Bessie.Peebles, HillTop.Aldan.Malinta.0-0
      Crown(-1, 6):
      - default_only_action: { allowed: true }
      - handle: 0x20000015
      - next_table: 0
      - set HillTop.Wisdom.Onycha, 0
      - set HillTop.Edwards.Oriskany, Millston.Wondervu$0.Oriskany
      - set HillTop.RossFork.ElVerano, Millston.Wondervu$0.$valid
      - set HillTop.RossFork.Joslin, 0
      - set HillTop.RossFork.Adona, Millston.Calabash.Adona
      - set HillTop.RossFork.Connell.0-15, Millston.Calabash.Connell.0-15
      - set HillTop.RossFork.Connell.16-23, Millston.Calabash.Connell.16-23
      - set HillTop.RossFork.Goldsboro.0-7, Millston.Calabash.Goldsboro.0-7
      - set HillTop.RossFork.Goldsboro.8-23, Millston.Calabash.Goldsboro.8-23
      - set HillTop.RossFork.Fabens, Millston.Calabash.Fabens
      - set HillTop.RossFork.Naruna.0-1, HillTop.Aldan.Parkville(0..1)
      - set HillTop.RossFork.Naruna.2-2, HillTop.Aldan.Parkville(2..2)
      - set HillTop.RossFork.McCaulley.0-7, Millston.Calabash.McCaulley.0-7
      - set HillTop.RossFork.McCaulley.8-15, Millston.Calabash.McCaulley.8-15
      - set HillTop.Maddock.Kaluaaha, Millston.GlenAvon.Kaluaaha
      - set HillTop.Maddock.Calcasieu, Millston.GlenAvon.Calcasieu
      - set HillTop.Maddock.PineCity, Millston.GlenAvon.PineCity
      - set HillTop.RossFork.Ocoee, Millston.GlenAvon.Ocoee
      - set HillTop.RossFork.Chevak, Millston.Grays.Chevak
      - set HillTop.RossFork.Mendocino, Millston.Grays.Mendocino
      - set HillTop.RossFork.Kremlin, Millston.Osyka.Noyes
      - set HillTop.RossFork.Denhoff.0-0, HillTop.Aldan.Malinta.0-0
      - set HillTop.RossFork.Denhoff.1-2, HillTop.Aldan.Malinta.1-2
      - set HillTop.RossFork.Glenmora, Millston.Grays.Chevak
      - set HillTop.RossFork.DonaAna, Millston.Grays.Mendocino
      - set HillTop.Bessie.Chevak, Millston.Grays.Chevak
      - set HillTop.Bessie.Peebles, HillTop.Aldan.Malinta.0-0
    default_only_action: Crown
  ternary_match _Pacifica 2:
    p4: { name: Pacifica, size: 3072, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Lamona.Pachuta: { type: exact, size: 1, full_size: 1, key_name: "Lamona.Pachuta" }
      HillTop.Lamona.Fristoe: { type: exact, size: 14, full_size: 14, key_name: "Lamona.Fristoe" }
      Millston.Wondervu$0.$valid: { type: exact, size: 1, full_size: 1, key_name: "Wondervu$0" }
      Millston.Wondervu$0.Bowden: { type: ternary, size: 12, full_size: 12, key_name: "Wondervu$0.Bowden" }
    row: [ 2, 3, 4, 5, 6, 7 ]
    bus: [ 1, 1, 1, 1, 1, 1 ]
    column:
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    input_xbar:
      ternary group 6: { 0: HillTop.Lamona.Fristoe, 17: Millston.Wondervu$0.$valid, 24: Millston.Wondervu$0.Bowden(0..7), 32: HillTop.Lamona.Pachuta }
      byte group 4: { 0: Millston.Wondervu$0.Bowden(8..11) }
    match:
    - { group: 6, byte_group: 4, byte_config: 0, dirtcam: 0x555 }
    hit: [  _Mogadore ]
    miss:  _Mogadore
    indirect: _Pacifica$tind
  ternary_indirect _Pacifica$tind:
    row: 0
    bus: 0
    column: [ 2, 3 ]
    input_xbar:
      ternary group 6: { 0: HillTop.Lamona.Fristoe, 17: Millston.Wondervu$0.$valid, 24: Millston.Wondervu$0.Bowden(0..7), 32: HillTop.Lamona.Pachuta }
      byte group 4: { 0: Millston.Wondervu$0.Bowden(8..11) }
    format: { action: 0..1, immediate: 2..33 }
    action_bus: { 34..35 : immediate(16..31), 96..99 : immediate(0..31) }
    instruction: _Pacifica$tind(action, $DEFAULT)
    actions:
      Vanoss(0, 5):
      - p4_param_order: { Potosi: 20 }
      - default_action: { allowed: true }
      - handle: 0x20000016
      - next_table: 0
      - { Potosi: immediate(0..19) }
      - set HillTop.RossFork.CeeVee, HillTop.Lamona.Traverse
      - set HillTop.RossFork.Quebrada, Potosi
      Mulvane(1, 7):
      - p4_param_order: { Luning: 12, Potosi: 20 }
      - default_action: { allowed: true }
      - handle: 0x20000017
      - next_table: 0
      - { Potosi: immediate(0..19), Luning: immediate(20..31) }
      - set HillTop.RossFork.CeeVee, Luning
      - set HillTop.RossFork.Quebrada, Potosi
      - set HillTop.Lamona.Pachuta, 1
      Flippen(2, 8):
      - p4_param_order: { Potosi: 20 }
      - default_action: { allowed: true }
      - handle: 0x20000018
      - next_table: 0
      - { Potosi: immediate(0..19) }
      - set HillTop.RossFork.CeeVee, Millston.Wondervu$0.Bowden
      - set HillTop.RossFork.Quebrada, Potosi
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x20000019
      - next_table: 0
      - {  }
    default_only_action: NoAction
  exact_match _Mogadore 3:
    p4: { name: Mogadore, size: 1024, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Lamona.Fristoe: { type: exact, size: 14, full_size: 14, key_name: "Lamona.Fristoe" }
      Millston.Wondervu$0.Bowden: { type: exact, size: 12, full_size: 12, key_name: "Wondervu$0.Bowden" }
    row: [ 2, 1 ]
    bus: [ 1, 0 ]
    column:
    - 6
    - [ 2, 3, 4 ]
    stash: 
      row: [ 2 ]
      col: [ 6 ]
      unit: [ 1 ]
    ways:
      - [1, 0, 0x0, [2, 6]]
      - [1, 1, 0x0, [1, 2]]
      - [1, 2, 0x0, [1, 3]]
      - [1, 3, 0x0, [1, 4]]
    input_xbar:
      exact group 2: { 64: Millston.Wondervu$0.Bowden(0..7), 72: HillTop.Lamona.Fristoe, 88: Millston.Wondervu$0.Bowden(8..11) }
      hash 5:
        0..5: random(Millston.Wondervu$0.Bowden(0..7), HillTop.Lamona.Fristoe(0..7)) ^ HillTop.Lamona.Fristoe(8..13)
        6..9: random(Millston.Wondervu$0.Bowden(0..7), HillTop.Lamona.Fristoe(0..7)) ^ Millston.Wondervu$0.Bowden(8..11)
        11..16: random(Millston.Wondervu$0.Bowden(0..7), HillTop.Lamona.Fristoe(0..7)) ^ HillTop.Lamona.Fristoe(8..13)
        17..19: random(Millston.Wondervu$0.Bowden(0..7), HillTop.Lamona.Fristoe(0..7)) ^ Millston.Wondervu$0.Bowden(8..10)
        10: random(Millston.Wondervu$0.Bowden(0..7), HillTop.Lamona.Fristoe(0..7)) ^ Millston.Wondervu$0.Bowden(11)
        22..27: random(Millston.Wondervu$0.Bowden(0..7), HillTop.Lamona.Fristoe(0..7)) ^ HillTop.Lamona.Fristoe(8..13)
        28..29: random(Millston.Wondervu$0.Bowden(0..7), HillTop.Lamona.Fristoe(0..7)) ^ Millston.Wondervu$0.Bowden(8..9)
        20..21: random(Millston.Wondervu$0.Bowden(0..7), HillTop.Lamona.Fristoe(0..7)) ^ Millston.Wondervu$0.Bowden(10..11)
        33..38: random(Millston.Wondervu$0.Bowden(0..7), HillTop.Lamona.Fristoe(0..7)) ^ HillTop.Lamona.Fristoe(8..13)
        39: random(Millston.Wondervu$0.Bowden(0..7), HillTop.Lamona.Fristoe(0..7)) ^ Millston.Wondervu$0.Bowden(8)
        30..32: random(Millston.Wondervu$0.Bowden(0..7), HillTop.Lamona.Fristoe(0..7)) ^ Millston.Wondervu$0.Bowden(9..11)
      hash group 1:
        table: [5]
        seed: 0x73aa5b9aca
    format: { action(0): 0..0, immediate(0): 1..28, version(0): 112..115, match(0): 32..47 }
    match: [ Millston.Wondervu$0.Bowden(0..7), HillTop.Lamona.Fristoe(0..7) ]
    gateway:
      name: cond-2
      input_xbar:
        exact group 2: { 64: Millston.Wondervu$0.Bowden(0..7), 88: Millston.Wondervu$0.Bowden(8..11), 97: Millston.Wondervu$0.$valid }
      row: 2
      bus: 1
      unit: 1
      match: { 17: Millston.Wondervu$0.$valid, 0: Millston.Wondervu$0.Bowden(0..7), 8: Millston.Wondervu$0.Bowden(8..11) }
      0b******0*****************:  _Judson
      0x***000:  _Judson
      miss: run_table
      condition: 
        expression: "(Millston.Wondervu[0].$valid == 1 && Millston.Wondervu[0].Bowden != 0)"
        true:  _Mogadore
        false:  _Judson
    hit: [ [],  _Florahome ]
    miss:  _Florahome
    action_bus: { 68..69 : immediate(0..15), 70..71 : immediate(16..27) }
    action: _Mogadore$action_data($DIRECT, $DEFAULT)
    instruction: _Mogadore(action, $DEFAULT)
    actions:
      Micro(1, 9):
      - p4_param_order: { Luning: 12, Boring: 32, Manilla: 8, Hammond: 4, Panaca: 16 }
      - default_action: { allowed: true }
      - handle: 0x2000001c
      - next_table: 1
      - { Manilla: $adf_b0(0..7), Luning: immediate(0..11), $data0: immediate(16..27), Panaca.0-7: $data0(0..7), Hammond.1-3: $data0(8..10), Hammond.0-0: $data0(11..11) }
      - set HillTop.RossFork.Bicknell, Luning
      - set HillTop.Ovett.Manilla, Manilla
      - set H14(0..11), $data0
      Sequim(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x2000001d
      - next_table_miss:  _Westview
      - {  }
    default_only_action: Sequim
  action _Mogadore$action_data:
    p4: { name: Mogadore$action }
    row: 5
    column: 1
    vpns: [ 0 ]
    home_row:
    - 5
    format Micro: { $adf_b0: 0..7 }
    action_bus: { 0 : $adf_b0 }
  exact_match _Judson 5:
    p4: { name: Judson, size: 4096, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Lamona.Traverse: { type: exact, size: 12, full_size: 12, key_name: "Lamona.Traverse" }
    row: 6
    bus: 1
    column: [ 4, 6 ]
    stash: 
      row: [ 6 ]
      col: [ 4 ]
      unit: [ 0 ]
    ways:
      - [2, 1, 0x2, [6, 4], [6, 6]]
    input_xbar:
      exact group 3: { 16: HillTop.Lamona.Traverse }
      hash 6:
        10..16: random(HillTop.Lamona.Traverse(7)) ^ HillTop.Lamona.Traverse(0..6)
        17..19: random(HillTop.Lamona.Traverse(7)) ^ HillTop.Lamona.Traverse(8..10)
        41: random(HillTop.Lamona.Traverse(7)) ^ HillTop.Lamona.Traverse(11)
      hash group 2:
        table: [6]
        seed: 0xc7c00
    format: { immediate(0): 0..23, version(0): 112..115, match(0): 55..55, immediate(1): 24..47, version(1): 116..119, match(1): 63..63 }
    match: [ HillTop.Lamona.Traverse(7) ]
    hit: [  _Florahome ]
    miss:  _Florahome
    action_bus: { 6 : immediate(16..23), 36..37 : immediate(0..15) }
    instruction: _Judson($DEFAULT, $DEFAULT)
    actions:
      Tillson(0, 12):
      - p4_param_order: { Boring: 32, Manilla: 8, Hammond: 4, Panaca: 16 }
      - default_action: { allowed: true }
      - handle: 0x2000001a
      - next_table: 0
      - { $data0: immediate(0..11), Panaca.0-7: $data0(0..7), Hammond.1-3: $data0(8..10), Hammond.0-0: $data0(11..11), Manilla: immediate(16..23) }
      - set HillTop.RossFork.Bicknell, HillTop.Lamona.Traverse
      - set HillTop.Ovett.Manilla, Manilla
      - set H14(0..11), $data0
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x2000001b
      - next_table: 0
      - {  }
    default_only_action: NoAction
  exact_match _Westview 4:
    p4: { name: Westview, size: 4096, disable_atomic_modify : true }
    p4_param_order: 
      Millston.Wondervu$0.Bowden: { type: exact, size: 12, full_size: 12, key_name: "Wondervu$0.Bowden" }
    row: 6
    bus: 0
    column: [ 2, 3 ]
    stash: 
      row: [ 6 ]
      col: [ 2 ]
      unit: [ 1 ]
    ways:
      - [2, 0, 0x1, [6, 2], [6, 3]]
    input_xbar:
      exact group 3: { 0: Millston.Wondervu$0.Bowden }
      hash 6:
        0..6: random(Millston.Wondervu$0.Bowden(7)) ^ Millston.Wondervu$0.Bowden(0..6)
        7..9: random(Millston.Wondervu$0.Bowden(7)) ^ Millston.Wondervu$0.Bowden(8..10)
        40: random(Millston.Wondervu$0.Bowden(7)) ^ Millston.Wondervu$0.Bowden(11)
      hash group 2:
        table: [6]
        seed: 0x182
    format: { immediate(0): 0..23, version(0): 112..115, match(0): 55..55, immediate(1): 24..47, version(1): 116..119, match(1): 63..63 }
    match: [ Millston.Wondervu$0.Bowden(7) ]
    hit: [  _Florahome ]
    miss:  _Florahome
    action_bus: { 2 : immediate(16..23), 32..33 : immediate(0..15) }
    instruction: _Westview($DEFAULT, $DEFAULT)
    actions:
      Lattimore(0, 10):
      - p4_param_order: { Boring: 32, Manilla: 8, Hammond: 4, Panaca: 16 }
      - default_action: { allowed: true }
      - handle: 0x2000001e
      - next_table: 0
      - { $data0: immediate(0..11), Panaca.0-7: $data0(0..7), Hammond.1-3: $data0(8..10), Hammond.0-0: $data0(11..11), Manilla: immediate(16..23) }
      - set HillTop.RossFork.Bicknell, Millston.Wondervu$0.Bowden
      - set HillTop.Ovett.Manilla, Manilla
      - set H14(0..11), $data0
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x2000001f
      - next_table: 0
      - {  }
    default_only_action: NoAction
  ternary_match _Florahome 6:
    p4: { name: Florahome, size: 2048, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Tiburon.Arnold: { type: exact, size: 7, full_size: 9, key_name: "Tiburon.Arnold" }
      Millston.Calabash.Adona: { type: ternary, size: 24, full_size: 24, key_name: "Calabash.Adona" }
      Millston.Calabash.Connell: { type: ternary, size: 24, full_size: 24, key_name: "Calabash.Connell" }
    row: [ 6, 7, 8, 9, 10, 11, 0, 1 ]
    bus: [ 0, 0, 0, 0, 0, 0, 1, 1 ]
    column:
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 1
    - 1
    input_xbar:
      ternary group 0: { 16: Millston.Calabash.Adona(8..23), 32: Millston.Calabash.Connell.16-23 }
      ternary group 7: { 0: Millston.Calabash.Connell.0-15(8..15), 8: HillTop.Tiburon.Arnold(0..6), 16: Millston.Calabash.Adona(0..7), 24: Millston.Calabash.Connell.0-15(0..7) }
    match:
    - { group: 0, dirtcam: 0x150 }
    - { group: 7, dirtcam: 0x55 }
    gateway:
      name: cond-1
      input_xbar:
        exact group 2: { 105: Millston.Hayfield.$valid }
      row: 1
      bus: 0
      unit: 0
      match: { 1: Millston.Hayfield.$valid }
      0b******0: run_table
      miss:  _Leacock
      condition: 
        expression: "(Millston.Hayfield.$valid == 1 == 0)"
        true:  _Florahome
        false:  _Leacock
    hit: [  _McIntyre_0,  _Newtonia ]
    miss:  _McIntyre_0
    indirect: _Florahome$tind
  counter _Florahome$stats.Meyers:
    p4: { name: Meyers }
    row: 13
    column: [ 1, 2 ]
    maprams: [ 1, 2 ]
    count: packets_and_bytes
    format: {packets(0): 64..91, bytes(0): 92..127, packets(1): 0..27, bytes(1): 28..63}
    lrt:
    - { threshold: 404246592, interval: 25265664 }
    - { threshold: 404246592, interval: 25265664 }
    - { threshold: 404246592, interval: 25265664 }
  ternary_indirect _Florahome$tind:
    row: 2
    bus: 0
    column: 5
    input_xbar:
      ternary group 0: { 16: Millston.Calabash.Adona(8..23), 32: Millston.Calabash.Connell.16-23 }
      ternary group 7: { 0: Millston.Calabash.Connell.0-15(8..15), 8: HillTop.Tiburon.Arnold(0..6), 16: Millston.Calabash.Adona(0..7), 24: Millston.Calabash.Connell.0-15(0..7) }
    format: { next: 0..0, action: 1..6, immediate: 7..16 }
    action_bus: { 4 : immediate(0..7), 100..103 : immediate(0..9) }
    stats: _Florahome$stats.Meyers($DIRECT, $DEFAULT)
    instruction: _Florahome$tind(action, $DEFAULT)
    actions:
      Earlham(11, 11):
      - p4_param_order: { Blencoe: 8, Satolah: 1 }
      - default_action: { allowed: true }
      - handle: 0x20000004
      - next_table: 1
      - { Blencoe: immediate(0..7), $data0: immediate(8..9), Satolah: $data0(0..0), $constant0: $data0(1..1), $constant0: 1 }
      - set HillTop.Wisdom.Havana, 1
      - set HillTop.Wisdom.Blencoe, Blencoe
      - set HillTop.RossFork.Tenino, 1
      - set W1(17..18), $data0
      - _Florahome$stats.Meyers($DIRECT)
      Lewellen(13, 13):
      - default_action: { allowed: true }
      - handle: 0x20000005
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Welcome, 1
      - _Florahome$stats.Meyers($DIRECT)
      Absecon(14, 14):
      - default_action: { allowed: true }
      - handle: 0x20000006
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Tenino, 1
      - _Florahome$stats.Meyers($DIRECT)
      Brodnax(16, 16):
      - default_action: { allowed: true }
      - handle: 0x20000007
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Pridgen, 1
      - _Florahome$stats.Meyers($DIRECT)
      Bowers(0, 0):
      - default_action: { allowed: true }
      - handle: 0x20000008
      - next_table: 0
      - {  }
      - _Florahome$stats.Meyers($DIRECT)
      Skene(18, 18):
      - default_action: { allowed: true }
      - handle: 0x20000009
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Tenino, 1
      - set HillTop.RossFork.Juniata, 1
      - _Florahome$stats.Meyers($DIRECT)
      Scottdale(20, 20):
      - p4_param_order: { Blencoe: 8, Satolah: 1 }
      - default_action: { allowed: true }
      - handle: 0x2000000a
      - next_table: 0
      - { Blencoe: immediate(0..7), Satolah: immediate(8..8) }
      - set HillTop.Wisdom.Blencoe, Blencoe
      - set HillTop.RossFork.Tenino, 1
      - set HillTop.Edwards.Satolah, Satolah
      - _Florahome$stats.Meyers($DIRECT)
      Camargo(15, 15):
      - default_action: { allowed: true }
      - handle: 0x2000000b
      - next_table: 0
      - {  }
      - _Florahome$stats.Meyers($DIRECT)
    default_action: Camargo
  ternary_match _Newtonia 9:
    p4: { name: Newtonia, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      Millston.Calabash.Goldsboro: { type: ternary, size: 24, full_size: 24, key_name: "Calabash.Goldsboro" }
      Millston.Calabash.Fabens: { type: ternary, size: 24, full_size: 24, key_name: "Calabash.Fabens" }
    row: [ 8, 9 ]
    bus: [ 1, 1 ]
    column:
    - 1
    - 1
    indirect_bus: 3
    input_xbar:
      ternary group 8: { 0: Millston.Calabash.Fabens, 24: Millston.Calabash.Goldsboro.0-7, 32: Millston.Calabash.Goldsboro.8-23(0..7) }
      ternary group 9: { 8: Millston.Calabash.Goldsboro.8-23(8..15) }
    match:
    - { group: 8, dirtcam: 0x155 }
    - { group: 9, dirtcam: 0x4 }
    hit: [  _Leacock ]
    miss:  _Leacock
    instruction: _Newtonia($DEFAULT, $DEFAULT)
    actions:
      Pioche(0, 21):
      - default_action: { allowed: true }
      - handle: 0x2000000e
      - next_table: 0
      - set HillTop.RossFork.Teigen, 1
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x2000000f
      - next_table: 0
    default_only_action: NoAction
  hash_action _McIntyre_0 7:
    p4: { name: McIntyre, size: 1, disable_atomic_modify : true }
    row: 4
    bus: 1
    hash_dist:
      3: { hash: 3, mask: 0x7ffff, shift: 0, expand: 0 }
    input_xbar:
      exact group 3: { 64: Millston.Wondervu$0.Bowden, 80: HillTop.Tiburon.Arnold }
      hash 7:
        0..11: stripe(Millston.Wondervu$0.Bowden)
        12..15: stripe(HillTop.Tiburon.Arnold(0..3))
        32..34: stripe(HillTop.Tiburon.Arnold(4..6))
      hash group 3:
        table: [7]
        seed: 0x0
    gateway:
      name: _McIntyre_0-gateway
      row: 3
      bus: 0
      unit: 0
      0x0:  _Aynor_0
      miss:  _Aynor_0
      condition: 
        expression: "true(always hit)"
        true:  _Aynor_0
        false:  _Aynor_0
    next: []
    action_bus: { 40..41 : _McIntyre_0$salu..McDonough(0..15) }
    stateful: _McIntyre_0$salu..McDonough(hash_dist 3, $DEFAULT, $DEFAULT)
    instruction: _McIntyre_0($DEFAULT, $DEFAULT)
    actions:
      Leland(0, 17):
      - default_action: { allowed: true }
      - handle: 0x2000000d
      - next_table: 0
      - set HillTop.Murphy.Blairsden, _McIntyre_0$salu..McDonough
      - _McIntyre_0$salu..McDonough(_Ozona_0, $hash_dist)
    default_action: Leland
  stateful _McIntyre_0$salu..McDonough:
    p4: { name: McDonough, size: 294912 }
    row: 11
    column: [ 1, 2, 3, 4 ]
    maprams: [ 1, 2, 3, 4 ]
    format: { lo: 1 }
    actions:
      _Ozona_0:
      - read_bit
      - output alu_lo
      set_bit_alu$0:
      - set_bit
      clr_bit_alu$0:
      - clr_bit
  hash_action _Aynor_0 8:
    p4: { name: Aynor, size: 1, disable_atomic_modify : true }
    row: 0
    bus: 1
    hash_dist:
      4: { hash: 3, mask: 0x7ffff, shift: 0, expand: 7 }
    input_xbar:
      exact group 3: { 64: Millston.Wondervu$0.Bowden, 80: HillTop.Tiburon.Arnold }
      hash 7:
        16..27: stripe(Millston.Wondervu$0.Bowden)
        28..31: stripe(HillTop.Tiburon.Arnold(0..3))
        39..41: stripe(HillTop.Tiburon.Arnold(4..6))
      hash group 3:
        table: [7]
        seed: 0x0
    gateway:
      name: _Aynor_0-gateway
      row: 1
      bus: 0
      unit: 1
      0x0:  _Newtonia
      miss:  _Newtonia
      condition: 
        expression: "true(always hit)"
        true:  _Newtonia
        false:  _Newtonia
    next: []
    action_bus: { 8 : _Aynor_0$salu..Exeter(0..7) }
    stateful: _Aynor_0$salu..Exeter(hash_dist 4, $DEFAULT, $DEFAULT)
    instruction: _Aynor_0($DEFAULT, $DEFAULT)
    actions:
      Dahlgren(0, 19):
      - default_action: { allowed: true }
      - handle: 0x2000000c
      - next_table: 0
      - set HillTop.Murphy.Standish, _Aynor_0$salu..Exeter
      - _Aynor_0$salu..Exeter(_Yulee_0, $hash_dist)
    default_action: Dahlgren
  stateful _Aynor_0$salu..Exeter:
    p4: { name: Exeter, size: 294912 }
    row: 15
    column: [ 1, 2, 3, 4 ]
    maprams: [ 1, 2, 3, 4 ]
    format: { lo: 1 }
    actions:
      _Yulee_0:
      - read_bitc
      - output alu_lo
      set_bit_alu$0:
      - set_bit
      clr_bit_alu$0:
      - clr_bit
  hash_action _Leacock 10:
    p4: { name: Leacock, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Tiburon.Arnold: { type: exact, size: 9, full_size: 9, key_name: "Tiburon.Arnold" }
    row: 0
    bus: 0
    hash_dist:
      2: { hash: 0, mask: 0x1ff, shift: 2 }
    input_xbar:
      exact group 4: { 0: HillTop.Tiburon.Arnold }
      hash 8:
        32..40: stripe(HillTop.Tiburon.Arnold)
      hash group 0:
        table: [8]
        seed: 0x0
    gateway:
      name: _Leacock-gateway
      row: 0
      bus: 0
      unit: 1
      0x0:  _Armagh
      miss:  _Armagh
      condition: 
        expression: "true(always hit)"
        true:  _Armagh
        false:  _Armagh
    next: []
    action: _Leacock$action_data(hash_dist 2, $DEFAULT)
    instruction: _Leacock($DEFAULT, $DEFAULT)
    actions:
      Burmah(0, 22):
      - p4_param_order: { McGrady: 3, LaConner: 6, AquaPark: 2 }
      - default_action: { allowed: true }
      - handle: 0x2000005b
      - next_table: 0
      - { $data0: $adf_b0(0..4), McGrady: $data0(0..2), AquaPark: $data0(3..4), LaConner: $adf_h0(5..10) }
      - set HillTop.Edwards.LaConner, LaConner
      - set B14(2..6), $data0
    default_action: Burmah
    default_action_parameters:
      McGrady: "0x0"
      LaConner: "0x0"
      AquaPark: "0x0"
  action _Leacock$action_data:
    p4: { name: Leacock$action, how_referenced: direct }
    row: 7
    column: 1
    vpns: [ 0 ]
    home_row:
    - 7
    format Burmah: { $adf_b0: 0..7, $adf_h0: 0..15 }
    action_bus: { 10 : $adf_b0, 44..45 : $adf_h0 }
  exact_match _Armagh 11:
    p4: { name: Armagh, size: 20480, disable_atomic_modify : true }
    p4_param_order: 
      Millston.GlenAvon.Kaluaaha: { type: exact, size: 32, full_size: 32, key_name: "GlenAvon.Kaluaaha" }
      Millston.GlenAvon.Calcasieu: { type: exact, size: 32, full_size: 32, key_name: "GlenAvon.Calcasieu" }
    row: [ 5, 4, 3 ]
    bus: [ 0, 0, 0 ]
    column:
    - [ 2, 3, 4, 6 ]
    - [ 2, 3, 4, 6 ]
    - [ 2, 3 ]
    stash: 
      row: [ 3 ]
      col: [ 2 ]
      unit: [ 0 ]
    ways:
      - [4, 0, 0x1, [3, 2], [3, 3]]
      - [4, 1, 0x2, [4, 4], [4, 6]]
      - [4, 2, 0x4, [4, 2], [4, 3]]
      - [4, 3, 0x8, [5, 4], [5, 6]]
      - [4, 0, 0x1, [5, 2], [5, 3]]
    input_xbar:
      exact group 5: { 0: Millston.GlenAvon.Kaluaaha, 32: Millston.GlenAvon.Calcasieu }
      hash 10:
        0..7: random(Millston.GlenAvon.Kaluaaha(11..31), Millston.GlenAvon.Calcasieu) ^ Millston.GlenAvon.Kaluaaha(0..7)
        8..9: random(Millston.GlenAvon.Kaluaaha(11..31), Millston.GlenAvon.Calcasieu) ^ Millston.GlenAvon.Kaluaaha(8..9)
        40: random(Millston.GlenAvon.Kaluaaha(11..31), Millston.GlenAvon.Calcasieu) ^ Millston.GlenAvon.Kaluaaha(10)
        11..18: random(Millston.GlenAvon.Kaluaaha(11..31), Millston.GlenAvon.Calcasieu) ^ Millston.GlenAvon.Kaluaaha(0..7)
        19: random(Millston.GlenAvon.Kaluaaha(11..31), Millston.GlenAvon.Calcasieu) ^ Millston.GlenAvon.Kaluaaha(8)
        10: random(Millston.GlenAvon.Kaluaaha(11..31), Millston.GlenAvon.Calcasieu) ^ Millston.GlenAvon.Kaluaaha(10)
        41: random(Millston.GlenAvon.Kaluaaha(11..31), Millston.GlenAvon.Calcasieu) ^ Millston.GlenAvon.Kaluaaha(9)
        22..29: random(Millston.GlenAvon.Kaluaaha(11..31), Millston.GlenAvon.Calcasieu) ^ Millston.GlenAvon.Kaluaaha(0..7)
        20..21: random(Millston.GlenAvon.Kaluaaha(11..31), Millston.GlenAvon.Calcasieu) ^ Millston.GlenAvon.Kaluaaha(9..10)
        42: random(Millston.GlenAvon.Kaluaaha(11..31), Millston.GlenAvon.Calcasieu) ^ Millston.GlenAvon.Kaluaaha(8)
        33..39: random(Millston.GlenAvon.Kaluaaha(11..31), Millston.GlenAvon.Calcasieu) ^ Millston.GlenAvon.Kaluaaha(0..6)
        30..32: random(Millston.GlenAvon.Kaluaaha(11..31), Millston.GlenAvon.Calcasieu) ^ Millston.GlenAvon.Kaluaaha(8..10)
        43: random(Millston.GlenAvon.Kaluaaha(11..31), Millston.GlenAvon.Calcasieu) ^ Millston.GlenAvon.Kaluaaha(7)
      hash group 4:
        table: [10]
        seed: 0x66d75f86f49
    format: { action(0): 0..1, version(0): 112..115, match(0): [83..87, 32..79 ], action(1): 2..3, version(1): 116..119, match(1): [123..127, 88..111, 8..31 ] }
    match: [ Millston.GlenAvon.Kaluaaha(11..15), Millston.GlenAvon.Kaluaaha(16..23), Millston.GlenAvon.Kaluaaha(24..31), Millston.GlenAvon.Calcasieu(0..7), Millston.GlenAvon.Calcasieu(8..15), Millston.GlenAvon.Calcasieu(16..23), Millston.GlenAvon.Calcasieu(24..31) ]
    hit: [  _Ankeny ]
    miss:  _Ankeny
    action: _Armagh$action_data($DIRECT, $DEFAULT)
    instruction: _Armagh(action, $DEFAULT)
    actions:
      Knights(0, 23):
      - p4_param_order: { Lookeba: 16, Alstown: 16, Longwood: 2, Yorkshire: 1, Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000010
      - next_table: 0
      - { Alstown: $adf_h0(0..15), Lookeba: $adf_h1(0..15), Bonduel: $adf_h2(0..13), $data0: $adf_h3(0..2), Longwood: $data0(0..1), Yorkshire: $data0(2..2) }
      - set HillTop.RossFork.Altus, Lookeba
      - set HillTop.RossFork.Hickox, Alstown
      - set HillTop.RossFork.Luzerne, Bonduel
      - set H90(12..14), $data0
      Humeston(1, 24):
      - p4_param_order: { Lookeba: 16, Alstown: 16, Longwood: 2, Yorkshire: 1, Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000011
      - next_table: 0
      - { Alstown: $adf_h0(0..15), Lookeba: $adf_h1(0..15), Sardinia: $adf_h2(0..13), $data0: $adf_h3(0..3), Longwood: $data0(0..1), Yorkshire: $data0(2..2), $constant0: $data0(3..3), $constant0: 1 }
      - set HillTop.RossFork.Altus, Lookeba
      - set HillTop.RossFork.Hickox, Alstown
      - set HillTop.RossFork.Luzerne, Sardinia
      - set H90(12..15), $data0
      Sequim(2, 0):
      - default_action: { allowed: true }
      - handle: 0x20000012
      - next_table: 0
      - {  }
    default_action: Sequim
  action _Armagh$action_data:
    p4: { name: Armagh$action }
    row: [ 14, 13, 12, 11, 10, 9 ]
    word: [ 0, 0, 0, 0, 0, 0 ]
    column:
    - 5
    - [ 4, 5 ]
    - 5
    - 5
    - 5
    - [ 2, 3, 4, 5 ]
    vpns: 
    - [ 0 ]
    - [ 1, 2 ]
    - [ 3 ]
    - [ 4 ]
    - [ 5 ]
    - [ 6, 7, 8, 9 ]
    home_row:
    - 14
    format Knights: { $adf_h0: 0..15, $adf_h1: 16..31, $adf_h2: 32..47, $adf_h3: 48..63 }
    format Humeston: { $adf_h0: 0..15, $adf_h1: 16..31, $adf_h2: 32..47, $adf_h3: 48..63 }
    action_bus: { 72..73 : $adf_h0, 74..75 : $adf_h1, 76..77 : $adf_h2, 78..79 : $adf_h3 }
  ternary_match _Ankeny 12:
    p4: { name: Ankeny, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      Millston.Osyka.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Osyka" }
      Millston.Osyka.Noyes: { type: ternary, size: 8, full_size: 8, key_name: "Osyka.Noyes" }
    row: 10
    bus: 1
    column: 1
    input_xbar:
      ternary group 9: { 6: Millston.Osyka.$valid, 16: Millston.Osyka.Noyes }
    match:
    - { group: 9, dirtcam: 0x11 }
    hit: [  Turney_0 ]
    miss:  Turney_0
    indirect: _Ankeny$tind
  ternary_indirect _Ankeny$tind:
    row: 1
    bus: 0
    column: 5
    input_xbar:
      ternary group 9: { 6: Millston.Osyka.$valid, 16: Millston.Osyka.Noyes }
    format: { action: 0..0 }
    instruction: _Ankeny$tind(action, $DEFAULT)
    actions:
      Funston(0, 25):
      - default_action: { allowed: true }
      - handle: 0x200000c9
      - next_table: 0
      - set HillTop.RossFork.Ankeny, 25
      Mayflower(1, 26):
      - default_action: { allowed: true }
      - handle: 0x200000ca
      - next_table: 0
      - set HillTop.RossFork.Ankeny, 10
    default_action: Mayflower
stage 1 ingress:
  exact_match Turney_0 0:
    p4: { name: Turney, size: 1024, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Chaffee: { type: exact, size: 8, full_size: 8, key_name: "RossFork.Chaffee" }
      HillTop.RossFork.Ocoee: { type: exact, size: 8, full_size: 8, key_name: "RossFork.Ocoee" }
    row: 1
    bus: 1
    column: 7
    stash: 
      row: [ 1 ]
      col: [ 7 ]
      unit: [ 1 ]
    ways:
      - [0, 0, 0x0, [1, 7]]
    input_xbar:
      exact group 0: { 0: HillTop.RossFork.Chaffee, 8: HillTop.RossFork.Ocoee }
      hash 0:
        0..1: random(HillTop.RossFork.Chaffee(2..7)) ^ HillTop.RossFork.Chaffee(0..1)
        2..9: random(HillTop.RossFork.Chaffee(2..7)) ^ HillTop.RossFork.Ocoee
      hash group 0:
        table: [0]
        seed: 0x2e8
    format: { action(0): 0..0, version(0): 112..115, match(0): 34..39 }
    match: [ HillTop.RossFork.Chaffee(2..7) ]
    hit: [  _TinCity_0 ]
    miss:  _TinCity_0
    instruction: Turney_0(action, $DEFAULT)
    actions:
      Bodcaw(0, 1):
      - default_action: { allowed: true }
      - handle: 0x20000042
      - next_table: 0
      - set HillTop.RossFork.Laxon, HillTop.Maddock.Kaluaaha
      - set HillTop.RossFork.Crozet, Millston.Grays.Chevak
      Weimar(1, 2):
      - default_action: { allowed: true }
      - handle: 0x20000043
      - next_table: 0
      - set HillTop.RossFork.Crozet(0..7), HillTop.RossFork.Chaffee
    default_action: Bodcaw
  ternary_match _TinCity_0 1:
    p4: { name: TinCity, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Maddock.Calcasieu: { type: ternary, size: 32, full_size: 32, key_name: "Maddock.Calcasieu" }
    row: 1
    bus: 1
    column: 1
    input_xbar:
      ternary group 0: { 0: HillTop.Maddock.Calcasieu }
    match:
    - { group: 0, dirtcam: 0x55 }
    gateway:
      name: cond-4
      input_xbar:
        exact group 0: { 21: HillTop.RossFork.Naruna.2-2, 27: HillTop.RossFork.Naruna.0-1 }
      row: 5
      bus: 1
      unit: 0
      match: { 3: HillTop.RossFork.Naruna.0-1, 13: HillTop.RossFork.Naruna.2-2 }
      0b**0********01: run_table
      miss:  _Comunas_0
      condition: 
        expression: "(HillTop.RossFork.Naruna == 1)"
        true:  _TinCity_0
        false:  _Comunas_0
    hit: [  _Stone_0 ]
    miss:  _Stone_0
    indirect: _TinCity_0$tind
  ternary_indirect _TinCity_0$tind:
    row: 6
    bus: 0
    column: 2
    input_xbar:
      ternary group 0: { 0: HillTop.Maddock.Calcasieu }
    format: { action: 0..1, immediate: 2..33 }
    action_bus: { 64..65 : immediate(0..15), 66..67 : immediate(16..31) }
    instruction: _TinCity_0$tind(action, $DEFAULT)
    actions:
      Bagwell(1, 3):
      - p4_param_order: { Liberal: 16, Doyline: 16 }
      - default_action: { allowed: true }
      - handle: 0x20000026
      - next_table: 0
      - { Doyline: immediate(0..15), Liberal: immediate(16..31) }
      - set HillTop.Bessie.Calcasieu, Liberal
      - set HillTop.Bessie.Chavies, Doyline
      Wright(2, 4):
      - default_action: { allowed: true }
      - handle: 0x20000027
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Halaula, 1
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x20000028
      - next_table: 0
      - {  }
    default_only_action: NoAction
  ternary_match _Comunas_0 3:
    p4: { name: Comunas, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Sublett.Calcasieu: { type: ternary, size: 128, full_size: 128, key_name: "Sublett.Calcasieu" }
    row: [ 5, 4, 3 ]
    bus: [ 0, 0, 0 ]
    column:
    - 0
    - 0
    - 0
    input_xbar:
      ternary group 2: { 0: HillTop.Sublett.Calcasieu.96-127(24..31), 8: HillTop.Sublett.Calcasieu.96-127(0..7), 16: HillTop.Sublett.Calcasieu.0-31(8..15), 24: HillTop.Sublett.Calcasieu.96-127(16..23), 32: HillTop.Sublett.Calcasieu.0-31(24..31) }
      ternary group 4: { 0: HillTop.Sublett.Calcasieu.0-31(16..23), 8: HillTop.Sublett.Calcasieu.32-63(24..31), 16: HillTop.Sublett.Calcasieu.0-31(0..7), 24: HillTop.Sublett.Calcasieu.32-63(8..23) }
      ternary group 5: { 0: HillTop.Sublett.Calcasieu.32-63(0..7), 8: HillTop.Sublett.Calcasieu.64-95(8..31), 32: HillTop.Sublett.Calcasieu.64-95(0..7) }
      byte group 0: { 0: HillTop.Sublett.Calcasieu.96-127(8..15) }
    match:
    - { group: 2, byte_group: 0, byte_config: 0, dirtcam: 0x555 }
    - { group: 4, byte_group: 0, byte_config: 1, dirtcam: 0x555 }
    - { group: 5, dirtcam: 0x155 }
    gateway:
      name: cond-5
      input_xbar:
        exact group 0: { 21: HillTop.RossFork.Naruna.2-2, 27: HillTop.RossFork.Naruna.0-1 }
      row: 4
      bus: 1
      unit: 0
      match: { 3: HillTop.RossFork.Naruna.0-1, 13: HillTop.RossFork.Naruna.2-2 }
      0b**0********10: run_table
      miss:  _Virginia
      condition: 
        expression: "(HillTop.RossFork.Naruna == 2)"
        true:  _Comunas_0
        false:  _Virginia
    hit: [  _Milltown_0 ]
    miss:  _Milltown_0
    indirect: _Comunas_0$tind
  ternary_indirect _Comunas_0$tind:
    row: 4
    bus: 0
    column: 2
    input_xbar:
      ternary group 2: { 0: HillTop.Sublett.Calcasieu.96-127(24..31), 8: HillTop.Sublett.Calcasieu.96-127(0..7), 16: HillTop.Sublett.Calcasieu.0-31(8..15), 24: HillTop.Sublett.Calcasieu.96-127(16..23), 32: HillTop.Sublett.Calcasieu.0-31(24..31) }
      ternary group 4: { 0: HillTop.Sublett.Calcasieu.0-31(16..23), 8: HillTop.Sublett.Calcasieu.32-63(24..31), 16: HillTop.Sublett.Calcasieu.0-31(0..7), 24: HillTop.Sublett.Calcasieu.32-63(8..23) }
      ternary group 5: { 0: HillTop.Sublett.Calcasieu.32-63(0..7), 8: HillTop.Sublett.Calcasieu.64-95(8..31), 32: HillTop.Sublett.Calcasieu.64-95(0..7) }
      byte group 0: { 0: HillTop.Sublett.Calcasieu.96-127(8..15) }
    format: { action: 0..1, immediate: 2..33 }
    action_bus: { 68..69 : immediate(0..15), 70..71 : immediate(16..31) }
    instruction: _Comunas_0$tind(action, $DEFAULT)
    actions:
      Bagwell(1, 7):
      - p4_param_order: { Liberal: 16, Doyline: 16 }
      - default_action: { allowed: true }
      - handle: 0x2000002c
      - next_table: 0
      - { Doyline: immediate(0..15), Liberal: immediate(16..31) }
      - set HillTop.Bessie.Calcasieu, Liberal
      - set HillTop.Bessie.Chavies, Doyline
      Wright(2, 9):
      - default_action: { allowed: true }
      - handle: 0x2000002d
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Halaula, 1
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x2000002e
      - next_table: 0
      - {  }
    default_only_action: NoAction
  ternary_match _Milltown_0 4:
    p4: { name: Milltown, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Sublett.Kaluaaha: { type: ternary, size: 128, full_size: 128, key_name: "Sublett.Kaluaaha" }
    row: [ 0, 1, 2 ]
    bus: [ 0, 0, 0 ]
    column:
    - 0
    - 0
    - 0
    input_xbar:
      ternary group 3: { 0: HillTop.Sublett.Kaluaaha.32-63(8..31), 24: HillTop.Sublett.Kaluaaha.0-31(0..15) }
      ternary group 7: { 0: HillTop.Sublett.Kaluaaha.0-31(24..31), 8: HillTop.Sublett.Kaluaaha.64-95(0..15), 24: HillTop.Sublett.Kaluaaha.0-31(16..23), 32: HillTop.Sublett.Kaluaaha.64-95(24..31) }
      ternary group 9: { 0: HillTop.Sublett.Kaluaaha.64-95(16..23), 8: HillTop.Sublett.Kaluaaha.96-127(24..31), 16: HillTop.Sublett.Kaluaaha.96-127(0..23) }
      byte group 1: { 0: HillTop.Sublett.Kaluaaha.32-63(0..7) }
    match:
    - { group: 3, byte_group: 1, byte_config: 0, dirtcam: 0x555 }
    - { group: 7, byte_group: 1, byte_config: 1, dirtcam: 0x555 }
    - { group: 9, dirtcam: 0x155 }
    hit: [  _Virginia ]
    miss:  _Virginia
    indirect: _Milltown_0$tind
  ternary_indirect _Milltown_0$tind:
    row: 3
    bus: 0
    column: 2
    input_xbar:
      ternary group 3: { 0: HillTop.Sublett.Kaluaaha.32-63(8..31), 24: HillTop.Sublett.Kaluaaha.0-31(0..15) }
      ternary group 7: { 0: HillTop.Sublett.Kaluaaha.0-31(24..31), 8: HillTop.Sublett.Kaluaaha.64-95(0..15), 24: HillTop.Sublett.Kaluaaha.0-31(16..23), 32: HillTop.Sublett.Kaluaaha.64-95(24..31) }
      ternary group 9: { 0: HillTop.Sublett.Kaluaaha.64-95(16..23), 8: HillTop.Sublett.Kaluaaha.96-127(24..31), 16: HillTop.Sublett.Kaluaaha.96-127(0..23) }
      byte group 1: { 0: HillTop.Sublett.Kaluaaha.32-63(0..7) }
    format: { action: 0..1, immediate: 2..33 }
    action_bus: { 38..39 : immediate(16..31), 100..103 : immediate(0..31) }
    instruction: _Milltown_0$tind(action, $DEFAULT)
    actions:
      Parmelee(0, 10):
      - p4_param_order: { Liberal: 16, Doyline: 16 }
      - default_action: { allowed: true }
      - handle: 0x20000029
      - next_table: 0
      - { Doyline: immediate(0..15), Liberal: immediate(16..31) }
      - set HillTop.RossFork.Kapalua, 0
      - set HillTop.Bessie.LasVegas, HillTop.RossFork.Ocoee
      - set HillTop.Bessie.PineCity, HillTop.Sublett.PineCity
      - set HillTop.Bessie.Exton, HillTop.RossFork.Exton
      - set HillTop.Bessie.Noyes, HillTop.RossFork.Kremlin
      - set HillTop.Bessie.Kaluaaha, Liberal
      - set HillTop.Bessie.Heuvelton, Doyline
      Belcourt(1, 12):
      - default_action: { allowed: true }
      - handle: 0x2000002a
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Kapalua, 1
      Moorman(2, 14):
      - default_action: { allowed: true }
      - handle: 0x2000002b
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Kapalua, 0
      - set HillTop.Bessie.LasVegas, HillTop.RossFork.Ocoee
      - set HillTop.Bessie.PineCity, HillTop.Sublett.PineCity
      - set HillTop.Bessie.Exton, HillTop.RossFork.Exton
      - set HillTop.Bessie.Noyes, HillTop.RossFork.Kremlin
    default_action: Moorman
  ternary_match _Stone_0 2:
    p4: { name: Stone, size: 2048, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Maddock.Kaluaaha: { type: ternary, size: 32, full_size: 32, key_name: "Maddock.Kaluaaha" }
    row: [ 9, 10, 11, 0 ]
    bus: [ 0, 0, 0, 1 ]
    column:
    - 0
    - 0
    - 0
    - 1
    input_xbar:
      ternary group 1: { 0: HillTop.Maddock.Kaluaaha(16..31), 16: HillTop.Maddock.Kaluaaha(0..15) }
    match:
    - { group: 1, dirtcam: 0x55 }
    hit: [  _Virginia ]
    miss:  _Virginia
    indirect: _Stone_0$tind
  ternary_indirect _Stone_0$tind:
    row: 5
    bus: 0
    column: 2
    input_xbar:
      ternary group 1: { 0: HillTop.Maddock.Kaluaaha(16..31), 16: HillTop.Maddock.Kaluaaha(0..15) }
    format: { action: 0..1, immediate: 2..33 }
    action_bus: { 34..35 : immediate(16..31), 96..99 : immediate(0..31) }
    instruction: _Stone_0$tind(action, $DEFAULT)
    actions:
      Capitola(0, 5):
      - p4_param_order: { Liberal: 16, Doyline: 16 }
      - default_action: { allowed: true }
      - handle: 0x20000023
      - next_table: 0
      - { Doyline: immediate(0..15), Liberal: immediate(16..31) }
      - set HillTop.RossFork.Kapalua, 0
      - set HillTop.Bessie.LasVegas, HillTop.RossFork.Ocoee
      - set HillTop.Bessie.PineCity, HillTop.Maddock.PineCity
      - set HillTop.Bessie.Exton, HillTop.RossFork.Exton
      - set HillTop.Bessie.Noyes, HillTop.RossFork.Kremlin
      - set HillTop.Bessie.Kaluaaha, Liberal
      - set HillTop.Bessie.Heuvelton, Doyline
      Belcourt(1, 6):
      - default_action: { allowed: true }
      - handle: 0x20000024
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Kapalua, 1
      Council(2, 8):
      - default_action: { allowed: true }
      - handle: 0x20000025
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Kapalua, 0
      - set HillTop.Bessie.LasVegas, HillTop.RossFork.Ocoee
      - set HillTop.Bessie.PineCity, HillTop.Maddock.PineCity
      - set HillTop.Bessie.Exton, HillTop.RossFork.Exton
      - set HillTop.Bessie.Noyes, HillTop.RossFork.Kremlin
    default_action: Council
  exact_match _Virginia 5:
    p4: { name: Virginia, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Naruna: { type: exact, size: 2, full_size: 3, key_name: "RossFork.Naruna" }
      HillTop.Tiburon.Arnold: { type: exact, size: 7, full_size: 9, key_name: "Tiburon.Arnold" }
    row: 1
    bus: 0
    column: 6
    stash: 
      row: [ 1 ]
      col: [ 6 ]
      unit: [ 0 ]
    ways:
      - [0, 1, 0x0, [1, 6]]
    input_xbar:
      exact group 0: { 27: HillTop.RossFork.Naruna.0-1, 32: HillTop.Tiburon.Arnold(0..6) }
      hash 0:
        10..11: HillTop.RossFork.Naruna.0-1
        12..18: HillTop.Tiburon.Arnold(0..6)
      hash group 0:
        table: [0]
        seed: 0x0
    format: { action(0): 0..1, immediate(0): 2..25, version(0): 112..115 }
    gateway:
      name: cond-7
      input_xbar:
        exact group 0: { 41: HillTop.Wisdom.Onycha }
      row: 3
      bus: 1
      unit: 1
      match: { 1: HillTop.Wisdom.Onycha }
      0b****000: run_table
      miss:  _Cornish
      condition: 
        expression: "(HillTop.Wisdom.Onycha == 0)"
        true:  _Virginia
        false:  _Cornish
    hit: [ [],  _Archer,  _Cornish ]
    miss:  _Archer
    action_bus: { 42..43 : immediate(16..23), 104..107 : immediate(0..23) }
    instruction: _Virginia(action, $DEFAULT)
    actions:
      Bluff(1, 11):
      - p4_param_order: { Miranda: 8, Bedrock: 32 }
      - default_action: { allowed: true }
      - handle: 0x20000033
      - next_table: 1
      - { Bedrock.0-15: immediate(0..15), Miranda: immediate(16..23) }
      - set HillTop.Mausdale.Kenney(0..15), Bedrock.0-15
      - set HillTop.Bessie.Miranda, Miranda
      Sequim(2, 0):
      - default_action: { allowed: true }
      - handle: 0x20000034
      - next_table: 2
      - {  }
    default_action: Sequim
  exact_match _Cornish 6:
    p4: { name: Cornish, size: 8192, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Naruna: { type: exact, size: 2, full_size: 3, key_name: "RossFork.Naruna" }
      HillTop.RossFork.Bicknell: { type: exact, size: 12, full_size: 12, key_name: "RossFork.Bicknell" }
    row: [ 3, 2 ]
    bus: [ 1, 1 ]
    column:
    - [ 7, 8, 9 ]
    - 8
    stash: 
      row: [ 3 ]
      col: [ 7 ]
      unit: [ 0 ]
    ways:
      - [1, 0, 0x1, [3, 7], [3, 8]]
      - [1, 1, 0x0, [3, 9]]
      - [1, 2, 0x0, [2, 8]]
    input_xbar:
      exact group 0: { 64: HillTop.RossFork.Bicknell, 83: HillTop.RossFork.Naruna.0-1 }
      hash 1:
        0..3: random(HillTop.RossFork.Bicknell(4..7)) ^ HillTop.RossFork.Bicknell(0..3)
        4..7: random(HillTop.RossFork.Bicknell(4..7)) ^ HillTop.RossFork.Bicknell(8..11)
        8..9: random(HillTop.RossFork.Bicknell(4..7)) ^ HillTop.RossFork.Naruna.0-1
        40: random(HillTop.RossFork.Bicknell(4..7))
        11..14: random(HillTop.RossFork.Bicknell(4..7)) ^ HillTop.RossFork.Bicknell(0..3)
        15..18: random(HillTop.RossFork.Bicknell(4..7)) ^ HillTop.RossFork.Bicknell(8..11)
        19: random(HillTop.RossFork.Bicknell(4..7)) ^ HillTop.RossFork.Naruna.0-1(0)
        10: random(HillTop.RossFork.Bicknell(4..7)) ^ HillTop.RossFork.Naruna.0-1(1)
        22..25: random(HillTop.RossFork.Bicknell(4..7)) ^ HillTop.RossFork.Bicknell(0..3)
        26..29: random(HillTop.RossFork.Bicknell(4..7)) ^ HillTop.RossFork.Bicknell(8..11)
        20..21: random(HillTop.RossFork.Bicknell(4..7)) ^ HillTop.RossFork.Naruna.0-1
      hash group 1:
        table: [1]
        seed: 0x2f4d580e
    format: { immediate(0): 0..23, version(0): 112..115, match(0): 52..55, immediate(1): 24..47, version(1): 116..119, match(1): 60..63 }
    match: [ HillTop.RossFork.Bicknell(4..7) ]
    hit: [  _Archer ]
    miss:  _Archer
    action_bus: { 46..47 : immediate(16..23), 108..111 : immediate(0..23) }
    instruction: _Cornish($DEFAULT, $DEFAULT)
    actions:
      Silvertip(0, 13):
      - p4_param_order: { Miranda: 8, Bedrock: 32 }
      - default_action: { allowed: true }
      - handle: 0x20000035
      - next_table: 0
      - { Bedrock.0-15: immediate(0..15), Miranda: immediate(16..23) }
      - set HillTop.Mausdale.Kenney(0..15), Bedrock.0-15
      - set HillTop.Bessie.Miranda, Miranda
      - set HillTop.RossFork.Yaurel, 1
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x20000036
      - next_table: 0
      - {  }
    default_only_action: NoAction
  ternary_match _Archer 7:
    p4: { name: Archer, size: 1024, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Mendocino: { type: ternary, size: 16, full_size: 16, key_name: "RossFork.Mendocino" }
    row: [ 4, 5 ]
    bus: [ 1, 1 ]
    column:
    - 1
    - 1
    input_xbar:
      ternary group 6: { 0: HillTop.RossFork.Mendocino(8..15), 8: HillTop.RossFork.Mendocino(0..7) }
    match:
    - { group: 6, byte_config: 3, dirtcam: 0x5 }
    gateway:
      name: cond-6
      input_xbar:
        exact group 0: { 50: HillTop.RossFork.Denhoff.1-2(0) }
      row: 2
      bus: 1
      unit: 0
      match: { 2: HillTop.RossFork.Denhoff.1-2(0) }
      0b*****1: run_table
      miss:  _Thawville
      condition: 
        expression: "(HillTop.RossFork.Denhoff & 2 == 2)"
        true:  _Archer
        false:  _Thawville
    hit: [  _Hatchel ]
    miss:  _Hatchel
    indirect: _Archer$tind
  ternary_indirect _Archer$tind:
    row: 2
    bus: 0
    column: 2
    input_xbar:
      ternary group 6: { 0: HillTop.RossFork.Mendocino(8..15), 8: HillTop.RossFork.Mendocino(0..7) }
    format: { action: 0..0 }
    action: _Archer$action_data($DIRECT, $DEFAULT)
    instruction: _Archer$tind(action, $DEFAULT)
    actions:
      Kilbourne(1, 15):
      - p4_param_order: { Liberal: 16 }
      - default_action: { allowed: true }
      - handle: 0x20000031
      - next_table: 0
      - { Liberal: $adf_h0(0..15) }
      - set HillTop.Bessie.Mendocino, Liberal
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x20000032
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action _Archer$action_data:
    p4: { name: Archer$action }
    row: 13
    column: 5
    vpns: [ 0 ]
    home_row:
    - 13
    format Kilbourne: { $adf_h0: 0..15 }
    action_bus: { 32..33 : $adf_h0 }
  ternary_match _Hatchel 8:
    p4: { name: Hatchel, size: 1024, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Chevak: { type: ternary, size: 16, full_size: 16, key_name: "RossFork.Chevak" }
    row: [ 2, 3 ]
    bus: [ 1, 1 ]
    column:
    - 1
    - 1
    indirect_bus: 1
    input_xbar:
      ternary group 6: { 16: HillTop.RossFork.Chevak(8..15), 24: HillTop.RossFork.Chevak(0..7) }
    match:
    - { group: 6, byte_config: 3, dirtcam: 0x50 }
    hit: [  _Thawville ]
    miss:  _Thawville
    action: _Hatchel$action_data($DIRECT, $DEFAULT)
    instruction: _Hatchel($DEFAULT, $DEFAULT)
    actions:
      Thatcher(0, 16):
      - p4_param_order: { Liberal: 16 }
      - default_action: { allowed: true }
      - handle: 0x2000002f
      - next_table: 0
      - { Liberal: $adf_h0(0..15) }
      - set HillTop.Bessie.Chevak, Liberal
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x20000030
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action _Hatchel$action_data:
    p4: { name: Hatchel$action }
    row: 14
    column: 3
    vpns: [ 0 ]
    home_row:
    - 14
    format Thatcher: { $adf_h0: 0..15 }
    action_bus: { 36..37 : $adf_h0 }
  exact_match _Thawville 9:
    p4: { name: Thawville, size: 20480, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Altus: { type: exact, size: 16, full_size: 16, key_name: "RossFork.Altus" }
      Millston.Grays.Chevak: { type: exact, size: 16, full_size: 16, key_name: "Grays.Chevak" }
      Millston.Grays.Mendocino: { type: exact, size: 16, full_size: 16, key_name: "Grays.Mendocino" }
    row: [ 7, 5, 4, 3 ]
    bus: [ 1, 0, 0, 0 ]
    column:
    - 9
    - [ 6, 7, 8, 9 ]
    - [ 6, 7, 8, 9 ]
    - 6
    stash: 
      row: [ 7 ]
      col: [ 9 ]
      unit: [ 1 ]
    ways:
      - [2, 0, 0x1, [7, 9], [5, 6]]
      - [2, 1, 0x2, [5, 7], [5, 8]]
      - [2, 2, 0x4, [5, 9], [4, 6]]
      - [2, 3, 0x8, [4, 7], [4, 8]]
      - [2, 0, 0x1, [4, 9], [3, 6]]
    input_xbar:
      exact group 1: { 0: Millston.Grays.Chevak, 16: Millston.Grays.Mendocino, 32: HillTop.RossFork.Altus }
      hash 2:
        0..7: random(Millston.Grays.Chevak(11..15), Millston.Grays.Mendocino, HillTop.RossFork.Altus) ^ Millston.Grays.Chevak(0..7)
        8..9: random(Millston.Grays.Chevak(11..15), Millston.Grays.Mendocino, HillTop.RossFork.Altus) ^ Millston.Grays.Chevak(8..9)
        40: random(Millston.Grays.Chevak(11..15), Millston.Grays.Mendocino, HillTop.RossFork.Altus) ^ Millston.Grays.Chevak(10)
        11..18: random(Millston.Grays.Chevak(11..15), Millston.Grays.Mendocino, HillTop.RossFork.Altus) ^ Millston.Grays.Chevak(0..7)
        19: random(Millston.Grays.Chevak(11..15), Millston.Grays.Mendocino, HillTop.RossFork.Altus) ^ Millston.Grays.Chevak(8)
        10: random(Millston.Grays.Chevak(11..15), Millston.Grays.Mendocino, HillTop.RossFork.Altus) ^ Millston.Grays.Chevak(10)
        41: random(Millston.Grays.Chevak(11..15), Millston.Grays.Mendocino, HillTop.RossFork.Altus) ^ Millston.Grays.Chevak(9)
        22..29: random(Millston.Grays.Chevak(11..15), Millston.Grays.Mendocino, HillTop.RossFork.Altus) ^ Millston.Grays.Chevak(0..7)
        20..21: random(Millston.Grays.Chevak(11..15), Millston.Grays.Mendocino, HillTop.RossFork.Altus) ^ Millston.Grays.Chevak(9..10)
        42: random(Millston.Grays.Chevak(11..15), Millston.Grays.Mendocino, HillTop.RossFork.Altus) ^ Millston.Grays.Chevak(8)
        33..39: random(Millston.Grays.Chevak(11..15), Millston.Grays.Mendocino, HillTop.RossFork.Altus) ^ Millston.Grays.Chevak(0..6)
        30..32: random(Millston.Grays.Chevak(11..15), Millston.Grays.Mendocino, HillTop.RossFork.Altus) ^ Millston.Grays.Chevak(8..10)
        43: random(Millston.Grays.Chevak(11..15), Millston.Grays.Mendocino, HillTop.RossFork.Altus) ^ Millston.Grays.Chevak(7)
      hash group 2:
        table: [2]
        seed: 0x474c02dbdc8
    format: { action(0): 0..1, immediate(0): 4..19, version(0): 112..115, match(0): [75..79, 40..71 ], action(1): 2..3, immediate(1): 20..35, version(1): 116..119, match(1): [123..127, 80..111 ] }
    match: [ Millston.Grays.Chevak(11..15), Millston.Grays.Mendocino(0..7), Millston.Grays.Mendocino(8..15), HillTop.RossFork.Altus(0..7), HillTop.RossFork.Altus(8..15) ]
    gateway:
      name: cond-3
      input_xbar:
        exact group 1: { 32: HillTop.RossFork.Altus }
      row: 3
      bus: 0
      unit: 0
      match: { 0: HillTop.RossFork.Altus(0..7), 8: HillTop.RossFork.Altus(8..15) }
      0x0000:  _Nevis
      miss: run_table
      condition: 
        expression: "(HillTop.RossFork.Altus != 0)"
        true:  _Thawville
        false:  _Nevis
    hit: [  _Nevis ]
    miss:  _Nevis
    action_bus: { 40..41 : immediate(0..15) }
    action: _Thawville$action_data($DIRECT, $DEFAULT)
    instruction: _Thawville(action, $DEFAULT)
    actions:
      Orting(1, 17):
      - p4_param_order: { Alstown: 16, Longwood: 2, Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000020
      - next_table: 0
      - { Bonduel: $adf_h0(0..13), Longwood: $adf_h0(14..15), Alstown: immediate(0..15) }
      - set HillTop.RossFork.Tehachapi, Alstown
      - set HillTop.RossFork.Caroleen, Longwood
      - set HillTop.RossFork.Devers, Bonduel
      SanRemo(2, 18):
      - p4_param_order: { Alstown: 16, Longwood: 2, Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000021
      - next_table: 0
      - { Sardinia: $adf_h0(0..13), Longwood: $adf_h0(14..15), Alstown: immediate(0..15) }
      - set HillTop.RossFork.Tehachapi, Alstown
      - set HillTop.RossFork.Caroleen, Longwood
      - set HillTop.RossFork.Belfair, 1
      - set HillTop.RossFork.Devers, Sardinia
      Sequim(3, 0):
      - default_action: { allowed: true }
      - handle: 0x20000022
      - next_table: 0
      - {  }
    default_action: Sequim
  action _Thawville$action_data:
    p4: { name: Thawville$action }
    row: [ 15, 14 ]
    word: [ 0, 0 ]
    column:
    - [ 4, 5 ]
    - 2
    vpns: 
    - [ 0, 1 ]
    - [ 2 ]
    home_row:
    - 15
    format Orting: { $adf_h0: 0..15 }
    format SanRemo: { $adf_h0: 0..15 }
    action_bus: { 44..45 : $adf_h0 }
  ternary_match _Nevis 10:
    p4: { name: Nevis, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Tiburon.Arnold: { type: exact, size: 7, full_size: 9, key_name: "Tiburon.Arnold" }
      HillTop.RossFork.Powderly: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Powderly" }
      HillTop.RossFork.Teigen: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Teigen" }
      HillTop.RossFork.Welcome: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Welcome" }
      HillTop.Aldan.Parkville: { type: ternary, size: 1, full_size: 4, key_name: "Aldan.Parkville", start_bit: 3 }
      HillTop.Aldan.Blakeley: { type: ternary, size: 1, full_size: 1, key_name: "Aldan.Blakeley" }
    row: 8
    bus: 0
    column: 0
    input_xbar:
      ternary group 8: { 0: HillTop.Tiburon.Arnold(0..6), 14: HillTop.RossFork.Powderly, 22: HillTop.RossFork.Welcome, 27: HillTop.Aldan.Parkville(3), 32: HillTop.RossFork.Teigen }
      byte group 3: { 0: HillTop.Aldan.Blakeley }
    match:
    - { group: 8, byte_group: 3, byte_config: 0, dirtcam: 0x555 }
    gateway:
      name: cond-8
      input_xbar:
        exact group 0: { 57: Millston.Hayfield.$valid }
      row: 1
      bus: 1
      unit: 1
      match: { 1: Millston.Hayfield.$valid }
      0b******0: run_table
      miss:  _Redfield
      condition: 
        expression: "(Millston.Hayfield.$valid == 1 == 0)"
        true:  _Nevis
        false:  _Redfield
    hit: [ [],  _Redfield,  _Lindsborg ]
    miss:  _Redfield
    indirect: _Nevis$tind
  counter _Nevis$stats.Hallwood:
    p4: { name: Hallwood }
    row: 13
    column: [ 3, 4 ]
    maprams: [ 3, 4 ]
    count: packets
    format: {packets(0): 64..127, packets(1): 0..63}
  ternary_indirect _Nevis$tind:
    row: 1
    bus: 0
    column: 2
    input_xbar:
      ternary group 8: { 0: HillTop.Tiburon.Arnold(0..6), 14: HillTop.RossFork.Powderly, 22: HillTop.RossFork.Welcome, 27: HillTop.Aldan.Parkville(3), 32: HillTop.RossFork.Teigen }
      byte group 3: { 0: HillTop.Aldan.Blakeley }
    format: { action: 0..1 }
    stats: _Nevis$stats.Hallwood($DIRECT, $DEFAULT)
    instruction: _Nevis$tind(action, $DEFAULT)
    actions:
      Empire(1, 19):
      - default_action: { allowed: true }
      - handle: 0x20000037
      - next_table: 1
      - set HillTop.RossFork.Weyauwega, 1
      - _Nevis$stats.Hallwood($DIRECT)
      Daisytown(2, 0):
      - default_action: { allowed: true }
      - handle: 0x20000038
      - next_table: 2
      - _Nevis$stats.Hallwood($DIRECT)
    default_action: Daisytown
  exact_match _Lindsborg 11:
    p4: { name: Lindsborg, size: 4096, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Goldsboro: { type: exact, size: 24, full_size: 24, key_name: "RossFork.Goldsboro" }
      HillTop.RossFork.Fabens: { type: exact, size: 24, full_size: 24, key_name: "RossFork.Fabens" }
      HillTop.RossFork.CeeVee: { type: exact, size: 12, full_size: 12, key_name: "RossFork.CeeVee" }
    row: 2
    bus: 0
    column: [ 6, 7 ]
    stash: 
      row: [ 2 ]
      col: [ 6 ]
      unit: [ 0 ]
    ways:
      - [0, 2, 0x0, [2, 6]]
      - [0, 3, 0x0, [2, 7]]
    input_xbar:
      exact group 2: { 0: HillTop.RossFork.Fabens, 24: HillTop.RossFork.Goldsboro.8-23(8..15), 32: HillTop.RossFork.Goldsboro.0-7, 40: HillTop.RossFork.CeeVee(8..11), 48: HillTop.RossFork.Goldsboro.8-23(0..7), 64: HillTop.RossFork.CeeVee(0..7) }
      hash 4:
        20..23: random(HillTop.RossFork.Fabens, HillTop.RossFork.Goldsboro.8-23(8..15), HillTop.RossFork.Goldsboro.0-7, HillTop.RossFork.Goldsboro.8-23(6..7)) ^ HillTop.RossFork.CeeVee(8..11)
        24..29: random(HillTop.RossFork.Fabens, HillTop.RossFork.Goldsboro.8-23(8..15), HillTop.RossFork.Goldsboro.0-7, HillTop.RossFork.Goldsboro.8-23(6..7)) ^ HillTop.RossFork.Goldsboro.8-23(0..5)
        31..34: random(HillTop.RossFork.Fabens, HillTop.RossFork.Goldsboro.8-23(8..15), HillTop.RossFork.Goldsboro.0-7, HillTop.RossFork.Goldsboro.8-23(6..7)) ^ HillTop.RossFork.CeeVee(8..11)
        35..39: random(HillTop.RossFork.Fabens, HillTop.RossFork.Goldsboro.8-23(8..15), HillTop.RossFork.Goldsboro.0-7, HillTop.RossFork.Goldsboro.8-23(6..7)) ^ HillTop.RossFork.Goldsboro.8-23(0..4)
        30: random(HillTop.RossFork.Fabens, HillTop.RossFork.Goldsboro.8-23(8..15), HillTop.RossFork.Goldsboro.0-7, HillTop.RossFork.Goldsboro.8-23(6..7)) ^ HillTop.RossFork.Goldsboro.8-23(5)
      hash 5:
        20..29: random(HillTop.RossFork.CeeVee(0..7))
        30..39: random(HillTop.RossFork.CeeVee(0..7))
      hash group 0:
        table: [4, 5]
        seed: 0x8cb1300000
    format: { action(0): 0..1, version(0): 112..115, match(0): [86..87, 32..79 ], action(1): 2..3, version(1): 116..119, match(1): [6..7, 88..111, 8..31 ] }
    match: [ HillTop.RossFork.Goldsboro.8-23(6..7), HillTop.RossFork.Goldsboro.8-23(8..15), HillTop.RossFork.CeeVee(0..7), HillTop.RossFork.Fabens(0..7), HillTop.RossFork.Fabens(8..15), HillTop.RossFork.Fabens(16..23), HillTop.RossFork.Goldsboro.0-7 ]
    gateway:
      name: cond-9
      input_xbar:
        exact group 2: { 40: HillTop.RossFork.CeeVee(8..11), 64: HillTop.RossFork.CeeVee(0..7) }
      row: 0
      bus: 1
      unit: 0
      match: { 0: HillTop.RossFork.CeeVee(0..7), 8: HillTop.RossFork.CeeVee(8..11) }
      0x*000:  _Boonsboro
      miss: run_table
      condition: 
        expression: "(HillTop.RossFork.CeeVee != 0)"
        true:  _Lindsborg
        false:  _Boonsboro
    hit: [ [],  _Redfield,  _Magasco ]
    miss:  _Redfield
    instruction: _Lindsborg(action, $DEFAULT)
    actions:
      Balmorhea(1, 20):
      - default_action: { allowed: true }
      - handle: 0x2000003e
      - next_table: 1
      - set HillTop.RossFork.Lowes, 1
      Sequim(2, 0):
      - default_action: { allowed: true }
      - handle: 0x2000003f
      - next_table: 2
    default_action: Sequim
  ternary_match _Boonsboro 14:
    p4: { name: Boonsboro, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Bicknell: { type: ternary, size: 12, full_size: 12, key_name: "RossFork.Bicknell" }
      HillTop.RossFork.Adona: { type: ternary, size: 24, full_size: 24, key_name: "RossFork.Adona" }
      HillTop.RossFork.Connell: { type: ternary, size: 24, full_size: 24, key_name: "RossFork.Connell" }
      HillTop.RossFork.Naruna: { type: ternary, size: 3, full_size: 3, key_name: "RossFork.Naruna" }
      HillTop.Lamona.Whitefish: { type: ternary, size: 2, full_size: 2, key_name: "Lamona.Whitefish" }
    row: [ 6, 7 ]
    bus: [ 0, 0 ]
    column:
    - 0
    - 0
    input_xbar:
      ternary group 10: { 0: HillTop.RossFork.Adona(22..23), 8: HillTop.RossFork.Connell.16-23, 16: HillTop.RossFork.Adona(6..21), 32: HillTop.RossFork.Bicknell(8..11) }
      ternary group 11: { 0: HillTop.RossFork.Connell.0-15(8..15), 8: HillTop.RossFork.Bicknell(0..7), 21: HillTop.RossFork.Naruna.2-2, 24: HillTop.RossFork.Connell.0-15(0..7), 35: HillTop.RossFork.Naruna.0-1 }
      byte group 5: { 0: HillTop.Lamona.Whitefish, 2: HillTop.RossFork.Adona(0..5) }
    match:
    - { group: 10, byte_group: 5, byte_config: 0, dirtcam: 0x555 }
    - { group: 11, byte_group: 5, byte_config: 1, dirtcam: 0x555 }
    hit: [  _Redfield,  _Redfield,  _Twain ]
    miss:  _Redfield
    indirect: _Boonsboro$tind
  ternary_indirect _Boonsboro$tind:
    row: 0
    bus: 0
    column: 2
    input_xbar:
      ternary group 10: { 0: HillTop.RossFork.Adona(22..23), 8: HillTop.RossFork.Connell.16-23, 16: HillTop.RossFork.Adona(6..21), 32: HillTop.RossFork.Bicknell(8..11) }
      ternary group 11: { 0: HillTop.RossFork.Connell.0-15(8..15), 8: HillTop.RossFork.Bicknell(0..7), 21: HillTop.RossFork.Naruna.2-2, 24: HillTop.RossFork.Connell.0-15(0..7), 35: HillTop.RossFork.Naruna.0-1 }
      byte group 5: { 0: HillTop.Lamona.Whitefish, 2: HillTop.RossFork.Adona(0..5) }
    format: { action: 0..1 }
    instruction: _Boonsboro$tind(action, $DEFAULT)
    actions:
      Aniak(0, 0):
      - default_action: { allowed: true }
      - handle: 0x20000039
      - next_table: 0
      Crannell(1, 22):
      - default_action: { allowed: true }
      - handle: 0x2000003a
      - next_table: 1
      - set HillTop.Ovett.Hematite, 1
      Sequim(2, 23):
      - default_action: { allowed: true }
      - handle: 0x2000003b
      - next_table: 2
    default_action: Sequim
  exact_match _Twain 15:
    p4: { name: Twain, size: 2048, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Bicknell: { type: exact, size: 12, full_size: 12, key_name: "RossFork.Bicknell" }
      HillTop.RossFork.Adona: { type: exact, size: 24, full_size: 24, key_name: "RossFork.Adona" }
      HillTop.RossFork.Connell: { type: exact, size: 24, full_size: 24, key_name: "RossFork.Connell" }
    row: 0
    bus: 0
    column: [ 6, 7 ]
    stash: 
      row: [ 0 ]
      col: [ 6 ]
      unit: [ 0 ]
    ways:
      - [3, 2, 0x0, [0, 6]]
      - [3, 3, 0x0, [0, 7]]
    input_xbar:
      exact group 4: { 2: HillTop.RossFork.Adona, 32: HillTop.RossFork.Connell.16-23, 40: HillTop.RossFork.Bicknell(8..11), 48: HillTop.RossFork.Bicknell(0..7), 56: HillTop.RossFork.Connell.0-15(8..15), 64: HillTop.RossFork.Connell.0-15(0..7) }
      hash 8:
        20..23: random(HillTop.RossFork.Adona(4..21), HillTop.RossFork.Connell.16-23, HillTop.RossFork.Bicknell(0..7), HillTop.RossFork.Connell.0-15(8..15)) ^ HillTop.RossFork.Adona(0..3)
        24..25: random(HillTop.RossFork.Adona(4..21), HillTop.RossFork.Connell.16-23, HillTop.RossFork.Bicknell(0..7), HillTop.RossFork.Connell.0-15(8..15)) ^ HillTop.RossFork.Adona(22..23)
        26..29: random(HillTop.RossFork.Adona(4..21), HillTop.RossFork.Connell.16-23, HillTop.RossFork.Bicknell(0..7), HillTop.RossFork.Connell.0-15(8..15)) ^ HillTop.RossFork.Bicknell(8..11)
        31..34: random(HillTop.RossFork.Adona(4..21), HillTop.RossFork.Connell.16-23, HillTop.RossFork.Bicknell(0..7), HillTop.RossFork.Connell.0-15(8..15)) ^ HillTop.RossFork.Adona(0..3)
        35..36: random(HillTop.RossFork.Adona(4..21), HillTop.RossFork.Connell.16-23, HillTop.RossFork.Bicknell(0..7), HillTop.RossFork.Connell.0-15(8..15)) ^ HillTop.RossFork.Adona(22..23)
        37..39: random(HillTop.RossFork.Adona(4..21), HillTop.RossFork.Connell.16-23, HillTop.RossFork.Bicknell(0..7), HillTop.RossFork.Connell.0-15(8..15)) ^ HillTop.RossFork.Bicknell(8..10)
        30: random(HillTop.RossFork.Adona(4..21), HillTop.RossFork.Connell.16-23, HillTop.RossFork.Bicknell(0..7), HillTop.RossFork.Connell.0-15(8..15)) ^ HillTop.RossFork.Bicknell(11)
      hash 9:
        20..29: random(HillTop.RossFork.Connell.0-15(0..7))
        30..39: random(HillTop.RossFork.Connell.0-15(0..7))
      hash group 3:
        table: [8, 9]
        seed: 0x51fe300000
    format: { version(0): 112..115, match(0): [32..55, 86..87, 56..79 ] }
    match: [ HillTop.RossFork.Bicknell(0..7), HillTop.RossFork.Connell.0-15(0..7), HillTop.RossFork.Connell.0-15(8..15), HillTop.RossFork.Adona(4..5), HillTop.RossFork.Adona(6..13), HillTop.RossFork.Adona(14..21), HillTop.RossFork.Connell.16-23 ]
    hit: [  _Redfield ]
    miss:  _Redfield
    instruction: _Twain($DEFAULT, $DEFAULT)
    actions:
      Crannell(0, 24):
      - default_action: { allowed: true }
      - handle: 0x2000003c
      - next_table: 0
      - set HillTop.Ovett.Hematite, 1
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x2000003d
      - next_table: 0
    default_only_action: NoAction
  exact_match _Magasco 12:
    p4: { name: Magasco, size: 8192, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Goldsboro: { type: exact, size: 24, full_size: 24, key_name: "RossFork.Goldsboro" }
      HillTop.RossFork.Fabens: { type: exact, size: 24, full_size: 24, key_name: "RossFork.Fabens" }
      HillTop.RossFork.CeeVee: { type: exact, size: 12, full_size: 12, key_name: "RossFork.CeeVee" }
      HillTop.RossFork.Quebrada: { type: exact, size: 20, full_size: 20, key_name: "RossFork.Quebrada" }
    row: [ 6, 7 ]
    bus: [ 0, 0 ]
    column:
    - [ 6, 7, 8 ]
    - [ 6, 7, 8 ]
    stash: 
      row: [ 6, 7 ]
      col: [ 6, 6 ]
      unit: [ 0, 0 ]
    ways:
      - [3, 0, 0x1, [7, 6], [6, 6], [7, 7], [6, 7]]
      - [3, 1, 0x0, [7, 8], [6, 8]]
    input_xbar:
      exact group 3: { 0: HillTop.RossFork.Quebrada, 24: HillTop.RossFork.Goldsboro.8-23(8..15), 32: HillTop.RossFork.Fabens, 56: HillTop.RossFork.CeeVee(8..11), 64: HillTop.RossFork.Goldsboro.0-7, 80: HillTop.RossFork.Goldsboro.8-23(0..7), 96: HillTop.RossFork.CeeVee(0..7) }
      hash 6:
        8..9: random(HillTop.RossFork.Quebrada(0..15), HillTop.RossFork.Goldsboro.8-23(8..15), HillTop.RossFork.Fabens)
        0..3: random(HillTop.RossFork.Quebrada(0..15), HillTop.RossFork.Goldsboro.8-23(8..15), HillTop.RossFork.Fabens) ^ HillTop.RossFork.Quebrada(16..19)
        4..7: random(HillTop.RossFork.Quebrada(0..15), HillTop.RossFork.Goldsboro.8-23(8..15), HillTop.RossFork.Fabens) ^ HillTop.RossFork.CeeVee(8..11)
        40: random(HillTop.RossFork.Quebrada(0..15), HillTop.RossFork.Goldsboro.8-23(8..15), HillTop.RossFork.Fabens)
        10: random(HillTop.RossFork.Quebrada(0..15), HillTop.RossFork.Goldsboro.8-23(8..15), HillTop.RossFork.Fabens)
        19: random(HillTop.RossFork.Quebrada(0..15), HillTop.RossFork.Goldsboro.8-23(8..15), HillTop.RossFork.Fabens)
        11..14: random(HillTop.RossFork.Quebrada(0..15), HillTop.RossFork.Goldsboro.8-23(8..15), HillTop.RossFork.Fabens) ^ HillTop.RossFork.Quebrada(16..19)
        15..18: random(HillTop.RossFork.Quebrada(0..15), HillTop.RossFork.Goldsboro.8-23(8..15), HillTop.RossFork.Fabens) ^ HillTop.RossFork.CeeVee(8..11)
      hash 7:
        0..7: random(HillTop.RossFork.Goldsboro.0-7, HillTop.RossFork.Goldsboro.8-23(2..7), HillTop.RossFork.CeeVee(0..7))
        8..9: random(HillTop.RossFork.Goldsboro.0-7, HillTop.RossFork.Goldsboro.8-23(2..7), HillTop.RossFork.CeeVee(0..7)) ^ HillTop.RossFork.Goldsboro.8-23(0..1)
        40: random(HillTop.RossFork.Goldsboro.0-7, HillTop.RossFork.Goldsboro.8-23(2..7), HillTop.RossFork.CeeVee(0..7))
        11..18: random(HillTop.RossFork.Goldsboro.0-7, HillTop.RossFork.Goldsboro.8-23(2..7), HillTop.RossFork.CeeVee(0..7))
        19: random(HillTop.RossFork.Goldsboro.0-7, HillTop.RossFork.Goldsboro.8-23(2..7), HillTop.RossFork.CeeVee(0..7)) ^ HillTop.RossFork.Goldsboro.8-23(0)
        10: random(HillTop.RossFork.Goldsboro.0-7, HillTop.RossFork.Goldsboro.8-23(2..7), HillTop.RossFork.CeeVee(0..7)) ^ HillTop.RossFork.Goldsboro.8-23(1)
      hash group 3:
        table: [6, 7]
        seed: 0x24a4e
    format: { action(0): 0..1, version(0): 4..7, match(0): [74..79, 8..71 ], action(1): 2..3, version(1): 244..247, match(1): [218..223, 80..127, 200..215 ], action(2): 128..129, version(2): 240..243, match(2): 130..199 }
    match: [ HillTop.RossFork.Goldsboro.8-23(2..7), HillTop.RossFork.Goldsboro.8-23(8..15), HillTop.RossFork.CeeVee(0..7), HillTop.RossFork.Quebrada(0..7), HillTop.RossFork.Quebrada(8..15), HillTop.RossFork.Fabens(0..7), HillTop.RossFork.Fabens(8..15), HillTop.RossFork.Fabens(16..23), HillTop.RossFork.Goldsboro.0-7 ]
    gateway:
      name: cond-10
      input_xbar:
        exact group 0: { 44: HillTop.Quinault.Foster, 88: HillTop.Lamona.Pachuta, 102: HillTop.RossFork.Welcome, 104: HillTop.RossFork.Teigen }
      row: 1
      bus: 0
      unit: 0
      match: { 4: HillTop.Quinault.Foster, 8: HillTop.Lamona.Pachuta, 16: HillTop.RossFork.Teigen, 30: HillTop.RossFork.Welcome }
      0b*0*************0*******1**00: run_table
      miss:  _Boonsboro
      condition: 
        expression: "(HillTop.Quinault.Foster == 0 && HillTop.Lamona.Pachuta == 1 && HillTop.RossFork.Teigen == 0 && HillTop.RossFork.Welcome == 0)"
        true:  _Magasco
        false:  _Boonsboro
    hit: [  _Boonsboro ]
    miss:  _Boonsboro
    instruction: _Magasco(action, $DEFAULT)
    actions:
      Swisshome(1, 0):
      - default_action: { allowed: true }
      - handle: 0x20000040
      - next_table: 0
      Earling(2, 21):
      - default_action: { allowed: true }
      - handle: 0x20000041
      - next_table: 0
      - set HillTop.Quinault.Foster, 2
    default_action: Earling
    idletime:
      row: 0
      bus: 0
      column: [ 0, 1, 2, 3, 4 ]
      precision: 3
      sweep_interval: 7
      notification: two_way
      per_flow_enable: true
stage 2 ingress:
  hash_action _Redfield 0:
    p4: { name: Redfield, size: 256, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Bessie.Miranda: { type: exact, size: 8, full_size: 8, key_name: "Bessie.Miranda" }
    row: 5
    bus: 1
    hash_dist:
      0: { hash: 0, mask: 0xff, shift: 5 }
    input_xbar:
      exact group 0: { 4: HillTop.Bessie.Miranda }
      hash 0:
        0..7: stripe(HillTop.Bessie.Miranda)
      hash group 0:
        table: [0]
        seed: 0x0
    gateway:
      name: _Redfield-gateway
      row: 3
      bus: 0
      unit: 1
      0x0:  _Covert
      miss:  _Covert
      condition: 
        expression: "true(always hit)"
        true:  _Covert
        false:  _Covert
    next: []
    action: _Redfield$action_data(hash_dist 0, $DEFAULT)
    instruction: _Redfield($DEFAULT, $DEFAULT)
    actions:
      Rockfield(0, 1):
      - p4_param_order: { Kaluaaha: 16, Calcasieu: 16, Chevak: 16, Mendocino: 16, LasVegas: 8, PineCity: 6, Exton: 8, Noyes: 8, Peebles: 1 }
      - default_action: { allowed: true }
      - handle: 0x20000044
      - next_table: 0
      - { Peebles: $adf_b0(5..5), Noyes: $adf_b1(0..7), LasVegas: $adf_b2(0..7), Exton: $adf_b3(0..7), Chevak: $adf_h2(0..15), Mendocino: $adf_h3(0..15), Calcasieu: $adf_h4(0..15), Kaluaaha: $adf_h5(0..15), PineCity: $adf_h6(6..11) }
      - and HillTop.Savery.Kaluaaha, HillTop.Bessie.Kaluaaha, Kaluaaha
      - and HillTop.Savery.Calcasieu, HillTop.Bessie.Calcasieu, Calcasieu
      - and HillTop.Savery.Chevak, HillTop.Bessie.Chevak, Chevak
      - and HillTop.Savery.Mendocino, HillTop.Bessie.Mendocino, Mendocino
      - and HillTop.Savery.LasVegas, HillTop.Bessie.LasVegas, LasVegas
      - and HillTop.Savery.Exton, HillTop.Bessie.Exton, Exton
      - and HillTop.Savery.Noyes, HillTop.Bessie.Noyes, Noyes
      - set Millston.Belgrade.Florin.0-15, 0
      - and B10, Peebles, B9
      - and H85, PineCity, H90
    default_action: Rockfield
    default_action_parameters:
      Kaluaaha: "0xffff"
      Calcasieu: "0xffff"
      Chevak: "0xffff"
      Mendocino: "0xffff"
      LasVegas: "0xff"
      PineCity: "0x3f"
      Exton: "0xff"
      Noyes: "0xff"
      Peebles: "0x1"
  action _Redfield$action_data:
    p4: { name: Redfield$action, how_referenced: direct }
    row: 12
    column: 4
    vpns: [ 0 ]
    home_row:
    - 12
    format Rockfield: { $adf_b0: 0..7, $adf_b1: 8..15, $adf_b2: 16..23, $adf_b3: 24..31, $adf_h2: 32..47, $adf_h3: 48..63, $adf_h4: 64..79, $adf_h5: 80..95, $adf_h6: 96..111 }
    action_bus: { 16 : $adf_b0, 17 : $adf_b1, 18 : $adf_b2, 19 : $adf_b3, 64..65 : $adf_h4, 66..67 : $adf_h5, 68..69 : $adf_h6, 32..33 : $adf_h2, 34..35 : $adf_h3 }
  hash_action _Covert 1:
    p4: { name: Covert, size: 4096, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.CeeVee: { type: exact, size: 12, full_size: 12, key_name: "RossFork.CeeVee" }
    row: 4
    bus: 1
    hash_dist:
      1: { hash: 0, mask: 0xfff, shift: 2 }
    input_xbar:
      exact group 0: { 16: HillTop.RossFork.CeeVee }
      hash 0:
        16..27: stripe(HillTop.RossFork.CeeVee)
      hash group 0:
        table: [0]
        seed: 0x0
    gateway:
      name: _Covert-gateway
      row: 2
      bus: 0
      unit: 1
      0x0:  _Bucklin
      miss:  _Bucklin
      condition: 
        expression: "true(always hit)"
        true:  _Bucklin
        false:  _Bucklin
    next: []
    action: _Covert$action_data(hash_dist 1, $DEFAULT)
    instruction: _Covert($DEFAULT, $DEFAULT)
    actions:
      Terral(0, 2):
      - p4_param_order: { Brinkman: 1, HighRock: 1, WebbCity: 1 }
      - default_action: { allowed: true }
      - handle: 0x20000047
      - next_table: 0
      - { HighRock: $adf_h0(0..0), Brinkman: $adf_b0(1..1) }
      - set HillTop.RossFork.Brinkman, Brinkman
      - set HillTop.RossFork.Parkland, HighRock
    default_action: Terral
    default_action_parameters:
      Brinkman: "0x0"
      HighRock: "0x0"
      WebbCity: "0x0"
  action _Covert$action_data:
    p4: { name: Covert$action, how_referenced: direct }
    row: 14
    column: 4
    vpns: [ 0 ]
    home_row:
    - 14
    format Terral: { $adf_h0: 0..15, $adf_b0: 0..7 }
    action_bus: { 0 : $adf_b0, 36..37 : $adf_h0 }
  hash_action _Bucklin 2:
    p4: { name: Bucklin, size: 1, disable_atomic_modify : true }
    row: 0
    bus: 1
    hash_dist:
      2: { hash: 0, mask: 0xffff, shift: 0 }
    input_xbar:
      exact group 0: { 32: Millston.Maumee.Kaluaaha.32-63, 64: Millston.Maumee.Calcasieu.96-127, 96: Millston.Maumee.Kaluaaha.0-31 }
      exact group 1: { 0: Millston.Maumee.Kaluaaha.64-95, 32: Millston.Maumee.Kaluaaha.96-127, 64: Millston.Maumee.Calcasieu.0-31, 96: Millston.Maumee.Calcasieu.32-63 }
      exact group 2: { 0: Millston.Maumee.Calcasieu.64-95, 32: Millston.Maumee.Maryhill.0-15, 48: Millston.Maumee.Maryhill.16-19, 56: Millston.Maumee.Dassel }
      hash 0:
        32..47: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 284, { 188: Millston.Maumee.Kaluaaha.32-63 }, { })), 0..15)
      hash 1:
        32..47: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 284, { 124: Millston.Maumee.Calcasieu.96-127, 156: Millston.Maumee.Kaluaaha.0-31 }, { })), 0..15)
      hash 2:
        32..47: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 284, { 220: Millston.Maumee.Kaluaaha.64-95, 252: Millston.Maumee.Kaluaaha.96-127 }, { })), 0..15)
      hash 3:
        32..47: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 284, { 28: Millston.Maumee.Calcasieu.0-31, 60: Millston.Maumee.Calcasieu.32-63 }, { })), 0..15)
      hash 4:
        32..47: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 284, { 0: Millston.Maumee.Dassel, 8: Millston.Maumee.Maryhill.0-15, 24: Millston.Maumee.Maryhill.16-19, 92: Millston.Maumee.Calcasieu.64-95 }, { })), 0..15)
      hash group 0:
        table: [0, 1, 2, 3, 4]
        seed: 0x0
    gateway:
      name: cond-11
      input_xbar:
        exact group 2: { 68: Millston.GlenAvon.$valid }
      row: 0
      bus: 1
      unit: 0
      payload: 0x1
      format: { action: 0..0 }
      match: { 4: Millston.GlenAvon.$valid }
      0b***1: run_table
      miss:  _Forepaugh
      condition: 
        expression: "(Millston.GlenAvon.$valid == 1)"
        true:  _Decherd
        false:  _Forepaugh
    next:  _Decherd
    action_bus: { 40..41 : hash_dist(2, lo) }
    instruction: _Bucklin(action, $DEFAULT)
    actions:
      McKenney(1, 3):
      - default_action: { allowed: true }
      - handle: 0x20000046
      - next_table: 0
      - set H59, hash_dist(2, 0..15)
    default_action: McKenney
  hash_action _Decherd 3:
    p4: { name: Decherd, size: 1, disable_atomic_modify : true }
    row: 3
    bus: 1
    hash_dist:
      3: { hash: 1, mask: 0xffff, shift: 0 }
    input_xbar:
      exact group 3: { 0: Millston.GlenAvon.Kaluaaha, 32: Millston.GlenAvon.Calcasieu, 64: Millston.GlenAvon.Ocoee }
      hash 6:
        0..15: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 72, { 0: Millston.GlenAvon.Calcasieu, 32: Millston.GlenAvon.Kaluaaha }, { })), 0..15)
      hash 7:
        0..15: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 72, { 64: Millston.GlenAvon.Ocoee }, { })), 0..15)
      hash group 1:
        table: [6, 7]
        seed: 0x0
    gateway:
      name: _Decherd-gateway
      row: 1
      bus: 0
      unit: 1
      0x0:  _Forepaugh
      miss:  _Forepaugh
      condition: 
        expression: "true(always hit)"
        true:  _Forepaugh
        false:  _Forepaugh
    next: []
    action_bus: { 44..45 : hash_dist(3, lo) }
    instruction: _Decherd($DEFAULT, $DEFAULT)
    actions:
      Kellner(0, 4):
      - default_action: { allowed: true }
      - handle: 0x20000045
      - next_table: 0
      - set H59, hash_dist(3, 0..15)
    default_action: Kellner
  hash_action _Forepaugh 4:
    p4: { name: Forepaugh, size: 1, disable_atomic_modify : true }
    row: 2
    bus: 1
    hash_dist:
      4: { hash: 1, mask: 0xffff, shift: 0 }
    input_xbar:
      exact group 4: { 0: Millston.Shirley.Connell.16-23, 8: Millston.Shirley.Adona, 32: Millston.Shirley.Connell.0-15, 48: Millston.Shirley.Goldsboro.8-23, 64: Millston.Shirley.Fabens.8-23, 80: Millston.Shirley.McCaulley, 96: Millston.Shirley.Goldsboro.0-7, 104: Millston.Shirley.Fabens.0-7 }
      hash 8:
        16..31: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 112, { 48: Millston.Shirley.Goldsboro.8-23, 64: Millston.Shirley.Connell.0-15, 80: Millston.Shirley.Connell.16-23, 88: Millston.Shirley.Adona }, { })), 0..15)
      hash 9:
        16..31: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 112, { 0: Millston.Shirley.McCaulley, 16: Millston.Shirley.Fabens.0-7, 24: Millston.Shirley.Fabens.8-23, 40: Millston.Shirley.Goldsboro.0-7 }, { })), 0..15)
      hash group 1:
        table: [8, 9]
        seed: 0x0
    gateway:
      name: _Forepaugh-gateway
      row: 0
      bus: 0
      unit: 1
      0x0:  cond-12
      miss:  cond-12
      condition: 
        expression: "true(always hit)"
        true:  cond-12
        false:  cond-12
    next: []
    action_bus: { 48..49 : hash_dist(4, lo) }
    instruction: _Forepaugh($DEFAULT, $DEFAULT)
    actions:
      SanPablo(0, 5):
      - default_action: { allowed: true }
      - handle: 0x20000057
      - next_table: 0
      - set H58, hash_dist(4, 0..15)
    default_action: SanPablo
  gateway cond-12 5:
    name: cond-12
    input_xbar:
      exact group 2: { 77: HillTop.Ovett.Hematite, 85: HillTop.RossFork.Weyauwega, 94: HillTop.Murphy.Blairsden, 99: HillTop.Murphy.Standish }
    row: 3
    bus: 1
    unit: 0
    match: { 5: HillTop.RossFork.Weyauwega, 13: HillTop.Ovett.Hematite, 19: HillTop.Murphy.Standish, 30: HillTop.Murphy.Blairsden }
    0b*0**********0*****1*******0:  _Levasy$st0
    miss:  _Bigspring
    condition: 
      expression: "(HillTop.RossFork.Weyauwega == 0 && HillTop.Ovett.Hematite == 1 && HillTop.Murphy.Standish == 0 && HillTop.Murphy.Blairsden == 0)"
      true:  _Levasy$st0
      false:  _Bigspring
  ternary_match _Levasy$st0 6:
    p4: { name: Levasy, size: 4096, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Ovett.Manilla: { type: exact, size: 8, full_size: 8, key_name: "Ovett.Manilla" }
      HillTop.Sublett.Calcasieu: { type: lpm, size: 128, full_size: 128, key_name: "Sublett.Calcasieu" }
    row: [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ]
    bus: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
    column:
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    input_xbar:
      ternary group 0: { 0: HillTop.Sublett.Calcasieu.96-127(0..7), 8: HillTop.Sublett.Calcasieu.0-31(8..15), 16: HillTop.Sublett.Calcasieu.96-127(16..31), 32: HillTop.Sublett.Calcasieu.0-31(0..7) }
      ternary group 1: { 0: HillTop.Sublett.Calcasieu.0-31(16..31), 16: HillTop.Sublett.Calcasieu.32-63(0..23) }
      ternary group 2: { 0: HillTop.Sublett.Calcasieu.32-63(24..31), 8: HillTop.Sublett.Calcasieu.64-95 }
      ternary group 3: { 0: HillTop.Ovett.Manilla }
      byte group 0: { 0: HillTop.Sublett.Calcasieu.96-127(8..15) }
    match:
    - { group: 0, byte_group: 0, byte_config: 0, dirtcam: 0x555 }
    - { group: 1, byte_group: 0, byte_config: 1, dirtcam: 0x555 }
    - { group: 2, byte_config: 3, dirtcam: 0x155 }
    - { group: 3, dirtcam: 0x1 }
    gateway:
      name: cond-13
      input_xbar:
        exact group 5: { 5: HillTop.RossFork.Naruna.2-2, 8: HillTop.Ovett.Hammond.1-3(0), 19: HillTop.RossFork.Naruna.0-1 }
      row: 2
      bus: 1
      unit: 0
      match: { 16: HillTop.Ovett.Hammond.1-3(0), 3: HillTop.RossFork.Naruna.0-1, 13: HillTop.RossFork.Naruna.2-2 }
      0b*******1**0********10: run_table
      miss:  _Glenoma_0
      condition: 
        expression: "(HillTop.Ovett.Hammond & 2 == 2 && HillTop.RossFork.Naruna == 2)"
        true:  _Levasy$st0
        false:  _Glenoma_0
    hit: [  _Bigspring ]
    miss:  _Levasy$st1
    indirect: _Levasy$st0$tind
    idletime:
      row: 0
      bus: 0
      column: 0
      precision: 1
      sweep_interval: 7
      notification: enable
      per_flow_enable: false
  ternary_indirect _Levasy$st0$tind:
    row: 0
    bus: 0
    column: 4
    input_xbar:
      ternary group 0: { 0: HillTop.Sublett.Calcasieu.96-127(0..7), 8: HillTop.Sublett.Calcasieu.0-31(8..15), 16: HillTop.Sublett.Calcasieu.96-127(16..31), 32: HillTop.Sublett.Calcasieu.0-31(0..7) }
      ternary group 1: { 0: HillTop.Sublett.Calcasieu.0-31(16..31), 16: HillTop.Sublett.Calcasieu.32-63(0..23) }
      ternary group 2: { 0: HillTop.Sublett.Calcasieu.32-63(24..31), 8: HillTop.Sublett.Calcasieu.64-95 }
      ternary group 3: { 0: HillTop.Ovett.Manilla }
      byte group 0: { 0: HillTop.Sublett.Calcasieu.96-127(8..15) }
    format: { action: 0..2, immediate: 3..16 }
    action_bus: { 52..53 : immediate(0..13) }
    instruction: _Levasy$st0$tind(action, $DEFAULT)
    actions:
      Tofte(1, 6):
      - p4_param_order: { Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000048
      - next_table: 0
      - { Bonduel: immediate(0..13) }
      - set HillTop.Naubinway.Bonduel, Bonduel
      Jerico(2, 8):
      - p4_param_order: { Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000049
      - next_table: 0
      - { Bonduel: immediate(0..13) }
      - set HillTop.Naubinway.Ayden, 2
      - set HillTop.Naubinway.Bonduel, Bonduel
      Wabbaseka(3, 10):
      - p4_param_order: { Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x2000004a
      - next_table: 0
      - { Bonduel: immediate(0..13) }
      - set HillTop.Naubinway.Ayden, 3
      - set HillTop.Naubinway.Bonduel, Bonduel
      Clearmont(4, 12):
      - p4_param_order: { Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x2000004b
      - next_table: 0
      - { Sardinia: immediate(0..13) }
      - set HillTop.Naubinway.Sardinia, Sardinia
      - set HillTop.Naubinway.Ayden, 1
      Ponder(-1, 14):
      - default_only_action: { allowed: true }
      - handle: 0x2000004c
      - next_table: 0
      - {  }
      - set HillTop.Naubinway.Bonduel, 1
    default_only_action: Ponder
  exact_match _Glenoma_0 7:
    p4: { name: Glenoma, size: 97280, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Ocoee: { type: exact, size: 8, full_size: 8, key_name: "RossFork.Ocoee" }
      HillTop.RossFork.Laxon: { type: exact, size: 32, full_size: 32, key_name: "RossFork.Laxon" }
      HillTop.RossFork.Crozet: { type: exact, size: 16, full_size: 16, key_name: "RossFork.Crozet" }
      HillTop.Maddock.Calcasieu: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Calcasieu" }
      Millston.Grays.Mendocino: { type: exact, size: 16, full_size: 16, key_name: "Grays.Mendocino" }
    row: [ 6, 7, 4, 5, 2, 3, 0, 1 ]
    bus: [ 0, 0, 0, 0, 0, 0, 0, 0 ]
    column:
    - [ 2, 3, 6, 7, 8, 9, 10 ]
    - [ 2, 3, 6, 7, 8, 9, 10 ]
    - [ 2, 3, 6, 7, 8, 9, 10 ]
    - [ 2, 3, 6, 7, 8, 9, 10 ]
    - [ 2, 3, 6, 7, 8, 9, 10 ]
    - [ 2, 3, 6, 7, 8, 9, 10 ]
    - [ 2, 3, 6, 7 ]
    - [ 2, 3, 6, 7 ]
    stash: 
      row: [ 6, 7 ]
      col: [ 2, 2 ]
      unit: [ 0, 0 ]
    ways:
      - [2, 0, 0x3, [7, 2], [6, 2], [7, 3], [6, 3], [7, 6], [6, 6], [7, 7], [6, 7]]
      - [2, 1, 0xc, [7, 8], [6, 8], [7, 9], [6, 9], [7, 10], [6, 10], [5, 2], [4, 2]]
      - [2, 2, 0x30, [5, 3], [4, 3], [5, 6], [4, 6], [5, 7], [4, 7], [5, 8], [4, 8]]
      - [2, 3, 0xc0, [5, 9], [4, 9], [5, 10], [4, 10], [3, 2], [2, 2], [3, 3], [2, 3]]
      - [2, 0, 0x3, [3, 6], [2, 6], [3, 7], [2, 7], [3, 8], [2, 8], [3, 9], [2, 9]]
      - [2, 1, 0xc, [3, 10], [2, 10], [1, 2], [0, 2], [1, 3], [0, 3], [1, 6], [0, 6]]
      - [2, 2, 0x0, [1, 7], [0, 7]]
    input_xbar:
      exact group 6: { 0: HillTop.Maddock.Calcasieu, 32: HillTop.RossFork.Laxon, 64: Millston.Grays.Mendocino, 80: HillTop.RossFork.Crozet, 96: HillTop.RossFork.Ocoee }
      hash 12:
        0..9: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        40..41: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        10..19: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        42..43: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        20..29: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        44..45: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        30..39: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        46..47: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
      hash 13:
        0..1: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ Millston.Grays.Mendocino(0..1)
        2..9: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee
        40..41: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet)
        11..12: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ Millston.Grays.Mendocino(0..1)
        13..19: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(0..6)
        10: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(7)
        42..43: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet)
        22..23: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ Millston.Grays.Mendocino(0..1)
        24..29: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(0..5)
        20..21: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(6..7)
        44..45: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet)
        33..34: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ Millston.Grays.Mendocino(0..1)
        35..39: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(0..4)
        30..32: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(5..7)
        46..47: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet)
      hash group 2:
        table: [12, 13]
        seed: 0x22703fbf7838
    format: { action(0): 0..2, immediate(0): 3..16, version(0): 112..115, match(0): [18..23, 32..111, 24..31 ], action(1): 128..130, immediate(1): 131..144, version(1): 240..243, match(1): [146..151, 160..239, 152..159 ] }
    match: [ Millston.Grays.Mendocino(2..7), Millston.Grays.Mendocino(8..15), HillTop.RossFork.Crozet(0..7), HillTop.RossFork.Crozet(8..15), HillTop.Maddock.Calcasieu(0..7), HillTop.Maddock.Calcasieu(8..15), HillTop.Maddock.Calcasieu(16..23), HillTop.Maddock.Calcasieu(24..31), HillTop.RossFork.Laxon(0..7), HillTop.RossFork.Laxon(8..15), HillTop.RossFork.Laxon(16..23), HillTop.RossFork.Laxon(24..31) ]
    gateway:
      name: cond-14
      input_xbar:
        exact group 5: { 5: HillTop.RossFork.Naruna.2-2, 11: HillTop.Ovett.Hammond.0-0, 19: HillTop.RossFork.Naruna.0-1 }
      row: 1
      bus: 1
      unit: 0
      match: { 19: HillTop.Ovett.Hammond.0-0, 3: HillTop.RossFork.Naruna.0-1, 13: HillTop.RossFork.Naruna.2-2 }
      0b****1*****0********01: run_table
      miss:  _Indios
      condition: 
        expression: "(HillTop.Ovett.Hammond & 1 == 1 && HillTop.RossFork.Naruna == 1)"
        true:  _Glenoma_0
        false:  _Indios
    hit: [ [],  _Bigspring,  _Bigspring,  _Bigspring,  _Bigspring,  _Bigspring,  _Bigspring,  _Baker_0 ]
    miss:  _Glenoma_0$st1
    action_bus: { 56..57 : immediate(0..13) }
    action: _Glenoma_0$action_data($DIRECT, $DEFAULT)
    instruction: _Glenoma_0(action, $DEFAULT)
    actions:
      Callao(1, 16):
      - p4_param_order: { Calcasieu: 32, Bratt: 32, Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x2000004d
      - next_table: 1
      - { Bratt.0-15: $adf_f0(0..15), Bonduel: $adf_h1(0..13), Calcasieu: $adf_f1(0..31) }
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Bonduel, Bonduel
      - set HillTop.RossFork.Suttle, 1
      Ambler(2, 18):
      - p4_param_order: { Calcasieu: 32, Avondale: 16, Bratt: 32, Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x2000004e
      - next_table: 2
      - { Bratt.0-15: $adf_f0(0..15), Avondale: $adf_h1(0..15), Calcasieu: $adf_f1(0..31), Bonduel: immediate(0..13) }
      - set HillTop.RossFork.DonaAna, Avondale
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Bonduel, Bonduel
      - set HillTop.RossFork.Suttle, 1
      Wagener(3, 20):
      - p4_param_order: { Calcasieu: 32, Bratt: 32, Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x2000004f
      - next_table: 3
      - { Bratt.0-15: $adf_f0(0..15), Sardinia: $adf_h1(0..13), Calcasieu: $adf_f1(0..31) }
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 1
      - set HillTop.Naubinway.Sardinia, Sardinia
      - set HillTop.RossFork.Suttle, 1
      Olmitz(4, 22):
      - p4_param_order: { Calcasieu: 32, Avondale: 16, Bratt: 32, Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000050
      - next_table: 4
      - { Bratt.0-15: $adf_f0(0..15), Avondale: $adf_h1(0..15), Calcasieu: $adf_f1(0..31), Sardinia: immediate(0..13) }
      - set HillTop.RossFork.DonaAna, Avondale
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 1
      - set HillTop.Naubinway.Sardinia, Sardinia
      - set HillTop.RossFork.Suttle, 1
      Milano(5, 7):
      - p4_param_order: { Kaluaaha: 32, Bratt: 32 }
      - default_action: { allowed: true }
      - handle: 0x20000051
      - next_table: 5
      - { Kaluaaha: $adf_f0(0..31), Bratt.0-15: $adf_f1(0..15) }
      - set HillTop.Maddock.Kaluaaha, Kaluaaha
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Boerne, 1
      - set HillTop.RossFork.Suttle, 1
      Biggers(6, 9):
      - p4_param_order: { Kaluaaha: 32, Avondale: 16, Bratt: 32 }
      - default_action: { allowed: true }
      - handle: 0x20000052
      - next_table: 6
      - { Bratt.0-15: $adf_f0(0..15), Avondale: $adf_h1(0..15), Kaluaaha: $adf_f1(0..31) }
      - set HillTop.RossFork.Glenmora, Avondale
      - set HillTop.Maddock.Kaluaaha, Kaluaaha
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Boerne, 1
      - set HillTop.RossFork.Suttle, 1
      Sequim(7, 0):
      - default_action: { allowed: true }
      - handle: 0x20000053
      - next_table: 7
      - {  }
    default_action: Sequim
    idletime:
      row: [ 4, 5 ]
      bus: [ 0, 0 ]
      column:
      - [ 0, 1, 2, 3, 4, 5 ]
      - 0
      precision: 1
      sweep_interval: 7
      notification: enable
      per_flow_enable: false
  action _Glenoma_0$action_data:
    p4: { name: Glenoma$action }
    row: [ 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 ]
    word: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
    column:
    - 5
    - 5
    - 5
    - 5
    - 5
    - [ 4, 5 ]
    - 5
    - [ 4, 5 ]
    - 5
    - [ 4, 5 ]
    - 5
    - [ 4, 5 ]
    - [ 4, 5 ]
    - [ 4, 5 ]
    - [ 2, 3, 4, 5 ]
    - 5
    vpns: 
    - [ 0 ]
    - [ 1 ]
    - [ 2 ]
    - [ 3 ]
    - [ 4 ]
    - [ 5, 6 ]
    - [ 7 ]
    - [ 8, 9 ]
    - [ 10 ]
    - [ 11, 12 ]
    - [ 13 ]
    - [ 14, 15 ]
    - [ 16, 17 ]
    - [ 18, 19 ]
    - [ 20, 21, 22, 23 ]
    - [ 24 ]
    home_row:
    - [ 15, 3 ]
    format Callao: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Ambler: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Wagener: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Olmitz: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Milano: { $adf_f0: 0..31, $adf_f1: 32..63 }
    format Biggers: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    action_bus: { 62..63 : $adf_h1, 100..103 : $adf_f1, 60..63 : $adf_f0 }
stage 3 ingress:
  exact_match _Indios 3:
    p4: { name: Indios, size: 2, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Ovett.Hammond: { type: exact, size: 1, full_size: 4, key_name: "Ovett.Hammond" }
      HillTop.RossFork.Naruna: { type: exact, size: 3, full_size: 3, key_name: "RossFork.Naruna" }
    row: 1
    bus: 1
    column: 7
    stash: 
      row: [ 1 ]
      col: [ 7 ]
      unit: [ 0 ]
    ways:
      - [1, 0, 0x0, [1, 7]]
    input_xbar:
      exact group 1: { 5: HillTop.RossFork.Naruna.2-2, 11: HillTop.Ovett.Hammond.0-0, 19: HillTop.RossFork.Naruna.0-1 }
      hash 2:
        0: HillTop.RossFork.Naruna.2-2
        1: HillTop.Ovett.Hammond.0-0
        2..3: HillTop.RossFork.Naruna.0-1
      hash group 1:
        table: [2]
        seed: 0x0
    format: { action(0): 0..0, immediate(0): 1..14, version(0): 112..115 }
    gateway:
      name: cond-15
      input_xbar:
        exact group 1: { 5: HillTop.RossFork.Naruna.2-2, 11: HillTop.Ovett.Hammond.0-0, 19: HillTop.RossFork.Naruna.0-1, 32: HillTop.Wisdom.Havana, 49: HillTop.RossFork.Parkland }
        hash 2:
          40: HillTop.Ovett.Hammond.0-0
        hash group 1:
          table: [2]
          seed: 0x0
      row: 0
      bus: 0
      unit: 0
      match: { 16: HillTop.Wisdom.Havana, 25: HillTop.RossFork.Parkland, 32: HillTop.Ovett.Hammond.0-0, 3: HillTop.RossFork.Naruna.0-1, 13: HillTop.RossFork.Naruna.2-2 }
      0b*******1********0*************: run_table
      0b1***************0**0********11: run_table
      miss:  _Bigspring
      condition: 
        expression: "(HillTop.Wisdom.Havana == 0 && (HillTop.RossFork.Parkland == 1 || HillTop.Ovett.Hammond & 1 == 1 && HillTop.RossFork.Naruna == 3))"
        true:  _Indios
        false:  _Bigspring
    hit: [  _Bigspring ]
    miss:  _Bigspring
    action_bus: { 44..45 : immediate(0..13) }
    instruction: _Indios(action, $DEFAULT)
    actions:
      Fishers(1, 18):
      - p4_param_order: { Philip: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000056
      - next_table: 0
      - { Philip: immediate(0..13) }
      - set HillTop.Naubinway.Bonduel, Philip
    default_action: Fishers
    default_action_parameters:
      Philip: "0x0"
  ternary_match _Baker_0 2:
    p4: { name: Baker, size: 4096, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Maddock.Kaluaaha: { type: ternary, size: 32, full_size: 32, key_name: "Maddock.Kaluaaha" }
      HillTop.RossFork.Ocoee: { type: ternary, size: 8, full_size: 8, key_name: "RossFork.Ocoee" }
      HillTop.Bessie.Peebles: { type: ternary, size: 1, full_size: 1, key_name: "Bessie.Peebles" }
    row: [ 8, 9, 10, 11, 0, 1, 2, 3 ]
    bus: [ 0, 0, 0, 0, 1, 1, 1, 1 ]
    column:
    - 0
    - 0
    - 0
    - 0
    - 1
    - 1
    - 1
    - 1
    input_xbar:
      ternary group 4: { 0: HillTop.Maddock.Kaluaaha(16..31), 16: HillTop.Maddock.Kaluaaha(0..15), 32: HillTop.RossFork.Ocoee }
      byte group 1: { 5: HillTop.Bessie.Peebles }
    match:
    - { group: 4, byte_group: 1, byte_config: 1, dirtcam: 0x555 }
    hit: [  _Bigspring ]
    miss:  _Bigspring
    indirect: _Baker_0$tind
  ternary_indirect _Baker_0$tind:
    row: 0
    bus: 1
    column: 4
    input_xbar:
      ternary group 4: { 0: HillTop.Maddock.Kaluaaha(16..31), 16: HillTop.Maddock.Kaluaaha(0..15), 32: HillTop.RossFork.Ocoee }
      byte group 1: { 5: HillTop.Bessie.Peebles }
    format: { action: 0..0, immediate: 1..12 }
    action_bus: { 104..107 : immediate(0..11) }
    instruction: _Baker_0$tind(action, $DEFAULT)
    actions:
      Recluse(0, 3):
      - p4_param_order: { Moultrie: 12 }
      - default_action: { allowed: true }
      - handle: 0x20000054
      - next_table: 0
      - { Moultrie: immediate(0..11) }
      - set HillTop.RossFork.Knierim, Moultrie
      Arapahoe(1, 0):
      - default_action: { allowed: true }
      - handle: 0x20000055
      - next_table: 0
      - {  }
    default_action: Arapahoe
  exact_match _Glenoma_0$st1 0:
    p4: { name: Glenoma, size: 97280, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Ocoee: { type: exact, size: 8, full_size: 8, key_name: "RossFork.Ocoee" }
      HillTop.RossFork.Laxon: { type: exact, size: 32, full_size: 32, key_name: "RossFork.Laxon" }
      HillTop.RossFork.Crozet: { type: exact, size: 16, full_size: 16, key_name: "RossFork.Crozet" }
      HillTop.Maddock.Calcasieu: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Calcasieu" }
      Millston.Grays.Mendocino: { type: exact, size: 16, full_size: 16, key_name: "Grays.Mendocino" }
    row: [ 6, 7, 4, 5, 2, 3 ]
    bus: [ 0, 0, 0, 0, 0, 0 ]
    column:
    - [ 2, 3, 6, 7, 8, 9, 10, 11 ]
    - [ 2, 3, 6, 7, 8, 9, 10, 11 ]
    - [ 2, 3, 6, 7, 8, 9, 10, 11 ]
    - [ 2, 3, 6, 7, 8, 9, 10, 11 ]
    - [ 2, 3, 6, 7, 8, 9, 10 ]
    - [ 2, 3, 6, 7, 8, 9, 10 ]
    stash: 
      row: [ 6, 7 ]
      col: [ 2, 2 ]
      unit: [ 0, 0 ]
    ways:
      - [0, 0, 0x3, [7, 2], [6, 2], [7, 3], [6, 3], [7, 6], [6, 6], [7, 7], [6, 7]]
      - [0, 1, 0xc, [7, 8], [6, 8], [7, 9], [6, 9], [7, 10], [6, 10], [7, 11], [6, 11]]
      - [0, 2, 0x30, [5, 2], [4, 2], [5, 3], [4, 3], [5, 6], [4, 6], [5, 7], [4, 7]]
      - [0, 3, 0xc0, [5, 8], [4, 8], [5, 9], [4, 9], [5, 10], [4, 10], [5, 11], [4, 11]]
      - [0, 0, 0x3, [3, 2], [2, 2], [3, 3], [2, 3], [3, 6], [2, 6], [3, 7], [2, 7]]
      - [0, 1, 0x4, [3, 8], [2, 8], [3, 9], [2, 9]]
      - [0, 2, 0x0, [3, 10], [2, 10]]
    input_xbar:
      exact group 0: { 0: HillTop.Maddock.Calcasieu, 32: HillTop.RossFork.Laxon, 64: Millston.Grays.Mendocino, 80: HillTop.RossFork.Crozet, 96: HillTop.RossFork.Ocoee }
      hash 0:
        0..9: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        40..41: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        10..19: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        42..43: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        20..29: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        44..45: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        30..39: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        46..47: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
      hash 1:
        0..1: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ Millston.Grays.Mendocino(0..1)
        2..9: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee
        40..41: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet)
        11..12: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ Millston.Grays.Mendocino(0..1)
        13..19: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(0..6)
        10: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(7)
        42..43: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet)
        22..23: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ Millston.Grays.Mendocino(0..1)
        24..29: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(0..5)
        20..21: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(6..7)
        44..45: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet)
        33..34: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ Millston.Grays.Mendocino(0..1)
        35..39: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(0..4)
        30..32: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(5..7)
        46..47: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet)
      hash group 0:
        table: [0, 1]
        seed: 0x2db23bf76022
    format: { action(0): 0..2, immediate(0): 3..16, version(0): 112..115, match(0): [18..23, 32..111, 24..31 ], action(1): 128..130, immediate(1): 131..144, version(1): 240..243, match(1): [146..151, 160..239, 152..159 ] }
    match: [ Millston.Grays.Mendocino(2..7), Millston.Grays.Mendocino(8..15), HillTop.RossFork.Crozet(0..7), HillTop.RossFork.Crozet(8..15), HillTop.Maddock.Calcasieu(0..7), HillTop.Maddock.Calcasieu(8..15), HillTop.Maddock.Calcasieu(16..23), HillTop.Maddock.Calcasieu(24..31), HillTop.RossFork.Laxon(0..7), HillTop.RossFork.Laxon(8..15), HillTop.RossFork.Laxon(16..23), HillTop.RossFork.Laxon(24..31) ]
    hit: [  _Bigspring,  _Bigspring,  _Bigspring,  _Bigspring,  _Bigspring,  _Bigspring,  _Baker_0 ]
    miss:  _Bigspring
    action_bus: { 32..33 : immediate(0..13) }
    action: _Glenoma_0$st1$action_data($DIRECT, $DEFAULT)
    instruction: _Glenoma_0$st1(action, $DEFAULT)
    actions:
      Callao(0, 1):
      - p4_param_order: { Calcasieu: 32, Bratt: 32, Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x2000004d
      - next_table: 0
      - { Bratt.0-15: $adf_f0(0..15), Bonduel: $adf_h1(0..13), Calcasieu: $adf_f1(0..31) }
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Bonduel, Bonduel
      - set HillTop.RossFork.Suttle, 1
      Ambler(1, 2):
      - p4_param_order: { Calcasieu: 32, Avondale: 16, Bratt: 32, Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x2000004e
      - next_table: 1
      - { Bratt.0-15: $adf_f0(0..15), Avondale: $adf_h1(0..15), Calcasieu: $adf_f1(0..31), Bonduel: immediate(0..13) }
      - set HillTop.RossFork.DonaAna, Avondale
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Bonduel, Bonduel
      - set HillTop.RossFork.Suttle, 1
      Wagener(2, 4):
      - p4_param_order: { Calcasieu: 32, Bratt: 32, Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x2000004f
      - next_table: 2
      - { Bratt.0-15: $adf_f0(0..15), Sardinia: $adf_h1(0..13), Calcasieu: $adf_f1(0..31) }
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 1
      - set HillTop.Naubinway.Sardinia, Sardinia
      - set HillTop.RossFork.Suttle, 1
      Olmitz(3, 6):
      - p4_param_order: { Calcasieu: 32, Avondale: 16, Bratt: 32, Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000050
      - next_table: 3
      - { Bratt.0-15: $adf_f0(0..15), Avondale: $adf_h1(0..15), Calcasieu: $adf_f1(0..31), Sardinia: immediate(0..13) }
      - set HillTop.RossFork.DonaAna, Avondale
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 1
      - set HillTop.Naubinway.Sardinia, Sardinia
      - set HillTop.RossFork.Suttle, 1
      Milano(4, 8):
      - p4_param_order: { Kaluaaha: 32, Bratt: 32 }
      - default_action: { allowed: true }
      - handle: 0x20000051
      - next_table: 4
      - { Kaluaaha: $adf_f0(0..31), Bratt.0-15: $adf_f1(0..15) }
      - set HillTop.Maddock.Kaluaaha, Kaluaaha
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Boerne, 1
      - set HillTop.RossFork.Suttle, 1
      Biggers(5, 10):
      - p4_param_order: { Kaluaaha: 32, Avondale: 16, Bratt: 32 }
      - default_action: { allowed: true }
      - handle: 0x20000052
      - next_table: 5
      - { Bratt.0-15: $adf_f0(0..15), Avondale: $adf_h1(0..15), Kaluaaha: $adf_f1(0..31) }
      - set HillTop.RossFork.Glenmora, Avondale
      - set HillTop.Maddock.Kaluaaha, Kaluaaha
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Boerne, 1
      - set HillTop.RossFork.Suttle, 1
      Sequim(6, 0):
      - default_action: { allowed: true }
      - handle: 0x20000053
      - next_table: 6
      - {  }
    default_action: Sequim
    idletime:
      row: 4
      bus: 0
      column: [ 0, 1, 2, 3, 4, 5 ]
      precision: 1
      sweep_interval: 7
      notification: enable
      per_flow_enable: false
  action _Glenoma_0$st1$action_data:
    p4: { name: Glenoma$action }
    row: [ 14, 12, 10, 8, 6, 5, 4, 3, 2, 1, 0 ]
    word: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
    column:
    - [ 4, 5 ]
    - 5
    - 5
    - [ 4, 5 ]
    - [ 4, 5 ]
    - 5
    - [ 4, 5 ]
    - [ 2, 3, 4, 5 ]
    - 5
    - [ 0, 1, 2, 3, 4, 5 ]
    - 5
    vpns: 
    - [ 0, 1 ]
    - [ 2 ]
    - [ 3 ]
    - [ 4, 5 ]
    - [ 6, 7 ]
    - [ 8 ]
    - [ 9, 10 ]
    - [ 11, 12, 13, 14 ]
    - [ 15 ]
    - [ 16, 17, 18, 19, 20, 21 ]
    - [ 22 ]
    home_row:
    - [ 14, 3 ]
    format Callao: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Ambler: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Wagener: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Olmitz: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Milano: { $adf_f0: 0..31, $adf_f1: 32..63 }
    format Biggers: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    action_bus: { 38..39 : $adf_h1, 100..103 : $adf_f1, 36..39 : $adf_f0 }
  ternary_match _Levasy$st1 1:
    p4: { name: Levasy, size: 4096, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Ovett.Manilla: { type: exact, size: 8, full_size: 8, key_name: "Ovett.Manilla" }
      HillTop.Sublett.Calcasieu: { type: lpm, size: 128, full_size: 128, key_name: "Sublett.Calcasieu" }
    row: [ 0, 1, 2, 3, 4, 5, 6, 7 ]
    bus: [ 0, 0, 0, 0, 0, 0, 0, 0 ]
    column:
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    input_xbar:
      ternary group 0: { 0: HillTop.Sublett.Calcasieu.96-127(0..7), 8: HillTop.Sublett.Calcasieu.0-31(8..15), 16: HillTop.Sublett.Calcasieu.96-127(16..31), 32: HillTop.Sublett.Calcasieu.0-31(0..7) }
      ternary group 1: { 0: HillTop.Sublett.Calcasieu.0-31(16..31), 16: HillTop.Sublett.Calcasieu.32-63(0..23) }
      ternary group 2: { 0: HillTop.Sublett.Calcasieu.32-63(24..31), 8: HillTop.Sublett.Calcasieu.64-95 }
      ternary group 3: { 0: HillTop.Ovett.Manilla }
      byte group 0: { 0: HillTop.Sublett.Calcasieu.96-127(8..15) }
    match:
    - { group: 0, byte_group: 0, byte_config: 0, dirtcam: 0x555 }
    - { group: 1, byte_group: 0, byte_config: 1, dirtcam: 0x555 }
    - { group: 2, byte_config: 3, dirtcam: 0x155 }
    - { group: 3, dirtcam: 0x1 }
    hit: [  _Bigspring ]
    miss:  _Bigspring
    indirect: _Levasy$st1$tind
    idletime:
      row: 0
      bus: 0
      column: 0
      precision: 1
      sweep_interval: 7
      notification: enable
      per_flow_enable: false
  ternary_indirect _Levasy$st1$tind:
    row: 1
    bus: 0
    column: 4
    input_xbar:
      ternary group 0: { 0: HillTop.Sublett.Calcasieu.96-127(0..7), 8: HillTop.Sublett.Calcasieu.0-31(8..15), 16: HillTop.Sublett.Calcasieu.96-127(16..31), 32: HillTop.Sublett.Calcasieu.0-31(0..7) }
      ternary group 1: { 0: HillTop.Sublett.Calcasieu.0-31(16..31), 16: HillTop.Sublett.Calcasieu.32-63(0..23) }
      ternary group 2: { 0: HillTop.Sublett.Calcasieu.32-63(24..31), 8: HillTop.Sublett.Calcasieu.64-95 }
      ternary group 3: { 0: HillTop.Ovett.Manilla }
      byte group 0: { 0: HillTop.Sublett.Calcasieu.96-127(8..15) }
    format: { action: 0..1, immediate: 2..15 }
    action_bus: { 40..41 : immediate(0..13) }
    instruction: _Levasy$st1$tind(action, $DEFAULT)
    actions:
      Tofte(0, 9):
      - p4_param_order: { Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000048
      - next_table: 0
      - { Bonduel: immediate(0..13) }
      - set HillTop.Naubinway.Bonduel, Bonduel
      Jerico(1, 11):
      - p4_param_order: { Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000049
      - next_table: 0
      - { Bonduel: immediate(0..13) }
      - set HillTop.Naubinway.Ayden, 2
      - set HillTop.Naubinway.Bonduel, Bonduel
      Wabbaseka(2, 12):
      - p4_param_order: { Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x2000004a
      - next_table: 0
      - { Bonduel: immediate(0..13) }
      - set HillTop.Naubinway.Ayden, 3
      - set HillTop.Naubinway.Bonduel, Bonduel
      Clearmont(3, 14):
      - p4_param_order: { Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x2000004b
      - next_table: 0
      - { Sardinia: immediate(0..13) }
      - set HillTop.Naubinway.Sardinia, Sardinia
      - set HillTop.Naubinway.Ayden, 1
      Ponder(-1, 16):
      - default_only_action: { allowed: true }
      - handle: 0x2000004c
      - next_table: 0
      - {  }
      - set HillTop.Naubinway.Bonduel, 1
    default_only_action: Ponder
  exact_match _Bigspring 4:
    p4: { name: Bigspring, size: 4096, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Bessie.Miranda: { type: exact, size: 8, full_size: 8, key_name: "Bessie.Miranda" }
      HillTop.Savery.Kaluaaha: { type: exact, size: 16, full_size: 16, key_name: "Savery.Kaluaaha" }
      HillTop.Savery.Calcasieu: { type: exact, size: 16, full_size: 16, key_name: "Savery.Calcasieu" }
      HillTop.Savery.Chevak: { type: exact, size: 16, full_size: 16, key_name: "Savery.Chevak" }
      HillTop.Savery.Mendocino: { type: exact, size: 16, full_size: 16, key_name: "Savery.Mendocino" }
      HillTop.Savery.LasVegas: { type: exact, size: 8, full_size: 8, key_name: "Savery.LasVegas" }
      HillTop.Savery.PineCity: { type: exact, size: 6, full_size: 6, key_name: "Savery.PineCity" }
      HillTop.Savery.Exton: { type: exact, size: 8, full_size: 8, key_name: "Savery.Exton" }
      HillTop.Savery.Noyes: { type: exact, size: 8, full_size: 8, key_name: "Savery.Noyes" }
      HillTop.Savery.Peebles: { type: exact, size: 1, full_size: 1, key_name: "Savery.Peebles" }
    row: [ 3, 1 ]
    bus: [ 1, 0 ]
    column:
    - 11
    - [ 2, 3, 6 ]
    stash: 
      row: [ 3 ]
      col: [ 11 ]
      unit: [ 0 ]
    ways:
      - [1, 1, 0x6, [3, 11], [1, 2], [1, 3], [1, 6]]
    input_xbar:
      exact group 2: { 0: HillTop.Savery.Chevak, 16: HillTop.Savery.Mendocino, 32: HillTop.Savery.Calcasieu, 48: HillTop.Savery.Kaluaaha, 68: HillTop.Bessie.Miranda, 86: HillTop.Savery.PineCity, 101: HillTop.Savery.Peebles, 104: HillTop.Savery.Noyes, 112: HillTop.Savery.LasVegas, 120: HillTop.Savery.Exton }
      hash 4:
        10..19: random(HillTop.Savery.Chevak, HillTop.Savery.Mendocino, HillTop.Savery.Calcasieu, HillTop.Savery.Kaluaaha)
        41..42: random(HillTop.Savery.Chevak, HillTop.Savery.Mendocino, HillTop.Savery.Calcasieu, HillTop.Savery.Kaluaaha)
      hash 5:
        10..13: random(HillTop.Savery.PineCity(3..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Bessie.Miranda(0..3)
        14..17: random(HillTop.Savery.PineCity(3..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Bessie.Miranda(4..7)
        18..19: random(HillTop.Savery.PineCity(3..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Savery.PineCity(0..1)
        41: random(HillTop.Savery.PineCity(3..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Savery.PineCity(2)
        42: random(HillTop.Savery.PineCity(3..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Savery.Peebles
      hash group 1:
        table: [4, 5]
        seed: 0x20000072000
    format: { version(0): 112..115, match(0): [32..111, 0..7, 9..11 ] }
    match: [ HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton, HillTop.Savery.Chevak(0..7), HillTop.Savery.Chevak(8..15), HillTop.Savery.Mendocino(0..7), HillTop.Savery.Mendocino(8..15), HillTop.Savery.Calcasieu(0..7), HillTop.Savery.Calcasieu(8..15), HillTop.Savery.Kaluaaha(0..7), HillTop.Savery.Kaluaaha(8..15), HillTop.Savery.PineCity(3..5) ]
    hit: [  _LasLomas ]
    miss:  _LasLomas
    action: _Bigspring$action_data($DIRECT, $DEFAULT)
    instruction: _Bigspring($DEFAULT, $DEFAULT)
    actions:
      Unionvale(0, 5):
      - p4_param_order: { Cornell: 32 }
      - default_action: { allowed: true }
      - handle: 0x20000058
      - next_table: 0
      - { Cornell: $adf_f0(0..31) }
      - maxu HillTop.Mausdale.Kenney, HillTop.Mausdale.Kenney, Cornell
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x20000059
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action _Bigspring$action_data:
    p4: { name: Bigspring$action }
    row: 10
    column: 4
    vpns: [ 0 ]
    home_row:
    - 10
    format Unionvale: { $adf_f0: 0..31 }
    action_bus: { 112..115 : $adf_f0 }
  hash_action _LasLomas 5:
    p4: { name: LasLomas, size: 256, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Bessie.Miranda: { type: exact, size: 8, full_size: 8, key_name: "Bessie.Miranda" }
    row: 2
    bus: 1
    hash_dist:
      0: { hash: 2, mask: 0xff, shift: 5 }
    input_xbar:
      exact group 1: { 68: HillTop.Bessie.Miranda }
      hash 3:
        0..7: stripe(HillTop.Bessie.Miranda)
      hash group 2:
        table: [3]
        seed: 0x0
    gateway:
      name: _LasLomas-gateway
      row: 1
      bus: 0
      unit: 0
      0x0:  _Anita
      miss:  _Anita
      condition: 
        expression: "true(always hit)"
        true:  _Anita
        false:  _Anita
    next: []
    action: _LasLomas$action_data(hash_dist 0, $DEFAULT)
    instruction: _LasLomas($DEFAULT, $DEFAULT)
    actions:
      Crystola(0, 7):
      - p4_param_order: { Kaluaaha: 16, Calcasieu: 16, Chevak: 16, Mendocino: 16, LasVegas: 8, PineCity: 6, Exton: 8, Noyes: 8, Peebles: 1 }
      - default_action: { allowed: true }
      - handle: 0x2000005a
      - next_table: 0
      - { Peebles: $adf_b0(5..5), Noyes: $adf_b1(0..7), LasVegas: $adf_b2(0..7), Exton: $adf_b3(0..7), Chevak: $adf_h2(0..15), Mendocino: $adf_h3(0..15), Calcasieu: $adf_h4(0..15), Kaluaaha: $adf_h5(0..15), PineCity: $adf_h6(6..11) }
      - and HillTop.Savery.Kaluaaha, HillTop.Bessie.Kaluaaha, Kaluaaha
      - and HillTop.Savery.Calcasieu, HillTop.Bessie.Calcasieu, Calcasieu
      - and HillTop.Savery.Chevak, HillTop.Bessie.Chevak, Chevak
      - and HillTop.Savery.Mendocino, HillTop.Bessie.Mendocino, Mendocino
      - and HillTop.Savery.LasVegas, HillTop.Bessie.LasVegas, LasVegas
      - and HillTop.Savery.Exton, HillTop.Bessie.Exton, Exton
      - and HillTop.Savery.Noyes, HillTop.Bessie.Noyes, Noyes
      - and B10, Peebles, B9
      - and H85, PineCity, H90
    default_action: Crystola
    default_action_parameters:
      Kaluaaha: "0xffff"
      Calcasieu: "0xffff"
      Chevak: "0xffff"
      Mendocino: "0xffff"
      LasVegas: "0xff"
      PineCity: "0x3f"
      Exton: "0xff"
      Noyes: "0xff"
      Peebles: "0x1"
  action _LasLomas$action_data:
    p4: { name: LasLomas$action, how_referenced: direct }
    row: 12
    column: 4
    vpns: [ 0 ]
    home_row:
    - 12
    format Crystola: { $adf_b0: 0..7, $adf_b1: 8..15, $adf_b2: 16..23, $adf_b3: 24..31, $adf_h2: 32..47, $adf_h3: 48..63, $adf_h4: 64..79, $adf_h5: 80..95, $adf_h6: 96..111 }
    action_bus: { 16 : $adf_b0, 17 : $adf_b1, 18 : $adf_b2, 19 : $adf_b3, 64..65 : $adf_h4, 66..67 : $adf_h5, 68..69 : $adf_h6, 48..49 : $adf_h2, 50..51 : $adf_h3 }
  hash_action _Anita 6:
    p4: { name: Anita, size: 1, disable_atomic_modify : true }
    row: 0
    bus: 1
    hash_dist:
      1: { hash: 2, mask: 0xffff, shift: 0 }
      2: { hash: 2, mask: 0xffff, shift: 0 }
    input_xbar:
      exact group 3: { 0: Millston.Grays.Chevak, 16: Millston.Grays.Mendocino, 32: HillTop.Cutten.Pathfork }
      hash 6:
        16..31: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 48, { 0: Millston.Grays.Mendocino, 16: Millston.Grays.Chevak, 32: HillTop.Cutten.Pathfork }, { })), 0..15)
      hash group 2:
        table: [6]
        seed: 0x0
      exact group 3: { 48: Millston.Bergton.Chevak, 64: Millston.Bergton.Mendocino, 80: HillTop.Cutten.Marcus }
      hash 6:
        32..47: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 48, { 16: Millston.Bergton.Chevak }, { })), 0..15)
      hash 7:
        32..47: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 48, { 0: Millston.Bergton.Mendocino, 32: HillTop.Cutten.Marcus }, { })), 0..15)
      hash group 2:
        table: [6, 7]
        seed: 0x0
    gateway:
      name: _Anita-gateway
      row: 0
      bus: 0
      unit: 1
      0x0:  _Plano
      miss:  _Plano
      condition: 
        expression: "true(always hit)"
        true:  _Plano
        false:  _Plano
    next: []
    action_bus: { 72..73 : hash_dist(1, lo), 74..75 : hash_dist(2, hi) }
    instruction: _Anita($DEFAULT, $DEFAULT)
    actions:
      Baranof(0, 13):
      - default_action: { allowed: true }
      - handle: 0x2000005c
      - next_table: 0
      - set H56, hash_dist(1, 0..15)
      - set H57, hash_dist(2, 0..15)
    default_action: Baranof
  ternary_match _Plano 7:
    p4: { name: Plano, size: 256, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.ElVerano: { type: exact, size: 1, full_size: 1, key_name: "RossFork.ElVerano" }
      HillTop.Edwards.McGrady: { type: exact, size: 3, full_size: 3, key_name: "Edwards.McGrady" }
      Millston.Wondervu$0.Higginson: { type: exact, size: 3, full_size: 3, key_name: "Wondervu$0.Higginson" }
      Millston.Wondervu$1.$valid: { type: exact, size: 1, full_size: 1, key_name: "Wondervu$1" }
    row: 4
    bus: 1
    column: 1
    input_xbar:
      ternary group 3: { 8: Millston.Wondervu$1.$valid, 10: HillTop.RossFork.ElVerano, 21: Millston.Wondervu$0.Higginson, 26: HillTop.Edwards.McGrady }
    match:
    - { group: 3, byte_config: 3, dirtcam: 0x54 }
    hit: [  _Leoma ]
    miss:  _Leoma
    indirect: _Plano$tind
  ternary_indirect _Plano$tind:
    row: 0
    bus: 0
    column: 3
    input_xbar:
      ternary group 3: { 8: Millston.Wondervu$1.$valid, 10: HillTop.RossFork.ElVerano, 21: Millston.Wondervu$0.Higginson, 26: HillTop.Edwards.McGrady }
    format: { action: 0..1, immediate: 2..4 }
    action_bus: { 52..53 : immediate(0..2) }
    instruction: _Plano$tind(action, $DEFAULT)
    actions:
      WestEnd(0, 15):
      - p4_param_order: { RedElm: 3 }
      - default_action: { allowed: true }
      - handle: 0x2000007c
      - next_table: 0
      - { RedElm: immediate(0..2) }
      - set HillTop.Edwards.RedElm, RedElm
      Jenifer(1, 17):
      - p4_param_order: { Willey: 3 }
      - default_action: { allowed: true }
      - handle: 0x2000007d
      - next_table: 0
      - { Willey: immediate(0..2) }
      - set HillTop.Edwards.RedElm, Willey
      - set HillTop.RossFork.McCaulley.0-7, Millston.Wondervu$0.McCaulley.0-7
      - set HillTop.RossFork.McCaulley.8-15, Millston.Wondervu$0.McCaulley.8-15
      Endicott(2, 19):
      - p4_param_order: { Willey: 3 }
      - default_action: { allowed: true }
      - handle: 0x2000007e
      - next_table: 0
      - { Willey: immediate(0..2) }
      - set HillTop.Edwards.RedElm, Willey
      - set HillTop.RossFork.McCaulley.0-7, Millston.Wondervu$1.McCaulley.0-7
      - set HillTop.RossFork.McCaulley.8-15, Millston.Wondervu$1.McCaulley.8-15
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x2000007f
      - next_table: 0
      - {  }
    default_only_action: NoAction
  exact_match _Leoma 8:
    p4: { name: Leoma, size: 1024, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Onycha: { type: exact, size: 3, full_size: 3, key_name: "Wisdom.Onycha" }
      HillTop.RossFork.Naruna: { type: exact, size: 3, full_size: 3, key_name: "RossFork.Naruna" }
    row: 0
    bus: 0
    column: 2
    stash: 
      row: [ 0 ]
      col: [ 2 ]
      unit: [ 0 ]
    ways:
      - [1, 2, 0x0, [0, 2]]
    input_xbar:
      exact group 1: { 5: HillTop.RossFork.Naruna.2-2, 19: HillTop.RossFork.Naruna.0-1, 25: HillTop.Wisdom.Onycha }
      hash 2:
        20: HillTop.RossFork.Naruna.2-2
        21..22: HillTop.RossFork.Naruna.0-1
        23..25: HillTop.Wisdom.Onycha
      hash group 1:
        table: [2]
        seed: 0x0
    format: { action(0): 0..2, version(0): 112..115 }
    hit: [  _Wakenda ]
    miss:  _Wakenda
    instruction: _Leoma(action, $DEFAULT)
    actions:
      BigRock(0, 20):
      - default_action: { allowed: true }
      - handle: 0x20000080
      - next_table: 0
      - set HillTop.Edwards.PineCity, HillTop.Edwards.LaConner
      Timnath(1, 22):
      - default_action: { allowed: true }
      - handle: 0x20000081
      - next_table: 0
      - set HillTop.Edwards.PineCity, 0
      Woodsboro(2, 24):
      - default_action: { allowed: true }
      - handle: 0x20000082
      - next_table: 0
      - set HillTop.Edwards.PineCity, HillTop.Maddock.PineCity
      Amherst(3, 26):
      - default_action: { allowed: true }
      - handle: 0x20000083
      - next_table: 0
      - set HillTop.Edwards.PineCity, HillTop.Maddock.PineCity
      Luttrell(4, 28):
      - default_action: { allowed: true }
      - handle: 0x20000084
      - next_table: 0
      - set HillTop.Edwards.PineCity, HillTop.Sublett.PineCity
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x20000085
      - next_table: 0
    default_only_action: NoAction
stage 4 ingress:
  exact_match _Wakenda 0:
    p4: { name: Wakenda, size: 4096, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Bessie.Miranda: { type: exact, size: 8, full_size: 8, key_name: "Bessie.Miranda" }
      HillTop.Savery.Kaluaaha: { type: exact, size: 16, full_size: 16, key_name: "Savery.Kaluaaha" }
      HillTop.Savery.Calcasieu: { type: exact, size: 16, full_size: 16, key_name: "Savery.Calcasieu" }
      HillTop.Savery.Chevak: { type: exact, size: 16, full_size: 16, key_name: "Savery.Chevak" }
      HillTop.Savery.Mendocino: { type: exact, size: 16, full_size: 16, key_name: "Savery.Mendocino" }
      HillTop.Savery.LasVegas: { type: exact, size: 8, full_size: 8, key_name: "Savery.LasVegas" }
      HillTop.Savery.PineCity: { type: exact, size: 6, full_size: 6, key_name: "Savery.PineCity" }
      HillTop.Savery.Exton: { type: exact, size: 8, full_size: 8, key_name: "Savery.Exton" }
      HillTop.Savery.Noyes: { type: exact, size: 8, full_size: 8, key_name: "Savery.Noyes" }
      HillTop.Savery.Peebles: { type: exact, size: 1, full_size: 1, key_name: "Savery.Peebles" }
    row: 1
    bus: 1
    column: [ 4, 6, 7, 8 ]
    stash: 
      row: [ 1 ]
      col: [ 4 ]
      unit: [ 0 ]
    ways:
      - [0, 0, 0x3, [1, 4], [1, 6], [1, 7], [1, 8]]
    input_xbar:
      exact group 0: { 0: HillTop.Savery.Chevak, 16: HillTop.Savery.Mendocino, 32: HillTop.Savery.Calcasieu, 48: HillTop.Savery.Kaluaaha, 68: HillTop.Bessie.Miranda, 86: HillTop.Savery.PineCity, 101: HillTop.Savery.Peebles, 104: HillTop.Savery.Noyes, 112: HillTop.Savery.LasVegas, 120: HillTop.Savery.Exton }
      hash 0:
        0..9: random(HillTop.Savery.Chevak, HillTop.Savery.Mendocino, HillTop.Savery.Calcasieu, HillTop.Savery.Kaluaaha)
        40..41: random(HillTop.Savery.Chevak, HillTop.Savery.Mendocino, HillTop.Savery.Calcasieu, HillTop.Savery.Kaluaaha)
      hash 1:
        0..3: random(HillTop.Savery.PineCity(3..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Bessie.Miranda(0..3)
        4..7: random(HillTop.Savery.PineCity(3..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Bessie.Miranda(4..7)
        8..9: random(HillTop.Savery.PineCity(3..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Savery.PineCity(0..1)
        40: random(HillTop.Savery.PineCity(3..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Savery.PineCity(2)
        41: random(HillTop.Savery.PineCity(3..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Savery.Peebles
      hash group 0:
        table: [0, 1]
        seed: 0x3000000037c
    format: { version(0): 112..115, match(0): [32..111, 0..7, 9..11 ] }
    match: [ HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton, HillTop.Savery.Chevak(0..7), HillTop.Savery.Chevak(8..15), HillTop.Savery.Mendocino(0..7), HillTop.Savery.Mendocino(8..15), HillTop.Savery.Calcasieu(0..7), HillTop.Savery.Calcasieu(8..15), HillTop.Savery.Kaluaaha(0..7), HillTop.Savery.Kaluaaha(8..15), HillTop.Savery.PineCity(3..5) ]
    hit: [  cond-16 ]
    miss:  cond-16
    action: _Wakenda$action_data($DIRECT, $DEFAULT)
    instruction: _Wakenda($DEFAULT, $DEFAULT)
    actions:
      Unionvale(0, 1):
      - p4_param_order: { Cornell: 32 }
      - default_action: { allowed: true }
      - handle: 0x2000005d
      - next_table: 0
      - { Cornell: $adf_f0(0..31) }
      - maxu HillTop.Mausdale.Kenney, HillTop.Mausdale.Kenney, Cornell
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x2000005e
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action _Wakenda$action_data:
    p4: { name: Wakenda$action }
    row: 5
    column: 3
    vpns: [ 0 ]
    home_row:
    - 5
    format Unionvale: { $adf_f0: 0..31 }
    action_bus: { 96..99 : $adf_f0 }
  gateway cond-16 1:
    name: cond-16
    input_xbar:
      exact group 1: { 5: HillTop.RossFork.Weyauwega, 13: HillTop.Ovett.Hematite, 19: HillTop.Murphy.Standish, 30: HillTop.Murphy.Blairsden }
    row: 4
    bus: 1
    unit: 0
    match: { 5: HillTop.RossFork.Weyauwega, 13: HillTop.Ovett.Hematite, 19: HillTop.Murphy.Standish, 30: HillTop.Murphy.Blairsden }
    0b*0**********0*****1*******0:  cond-17
    miss:  English_0
    condition: 
      expression: "(HillTop.RossFork.Weyauwega == 0 && HillTop.Ovett.Hematite == 1 && HillTop.Murphy.Standish == 0 && HillTop.Murphy.Blairsden == 0)"
      true:  cond-17
      false:  English_0
  gateway cond-17 2:
    name: cond-17
    input_xbar:
      exact group 1: { 37: HillTop.RossFork.Naruna.2-2, 43: HillTop.Ovett.Hammond.0-0, 51: HillTop.RossFork.Naruna.0-1 }
    row: 3
    bus: 1
    unit: 0
    match: { 19: HillTop.Ovett.Hammond.0-0, 3: HillTop.RossFork.Naruna.0-1, 13: HillTop.RossFork.Naruna.2-2 }
    0b****1*****0********01:  _Brady_0
    miss:  English_0
    condition: 
      expression: "(HillTop.Ovett.Hammond & 1 == 1 && HillTop.RossFork.Naruna == 1)"
      true:  _Brady_0
      false:  English_0
  exact_match _Brady_0 3:
    p4: { name: Brady, size: 75776, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Ocoee: { type: exact, size: 8, full_size: 8, key_name: "RossFork.Ocoee" }
      HillTop.RossFork.Laxon: { type: exact, size: 32, full_size: 32, key_name: "RossFork.Laxon" }
      HillTop.RossFork.Crozet: { type: exact, size: 16, full_size: 16, key_name: "RossFork.Crozet" }
      HillTop.Maddock.Calcasieu: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Calcasieu" }
      Millston.Grays.Mendocino: { type: exact, size: 16, full_size: 16, key_name: "Grays.Mendocino" }
    row: [ 6, 7, 4, 5, 2, 3, 0, 1 ]
    bus: [ 0, 0, 0, 0, 0, 0, 0, 0 ]
    column:
    - [ 2, 3, 4, 6, 7, 8 ]
    - [ 2, 3, 4, 6, 7, 8 ]
    - [ 2, 3, 4, 6, 7, 8 ]
    - [ 2, 3, 4, 6, 7, 8 ]
    - [ 2, 3, 4, 6, 7, 8 ]
    - [ 2, 3, 4, 6, 7, 8 ]
    - [ 2, 3 ]
    - [ 2, 3 ]
    stash: 
      row: [ 6, 7 ]
      col: [ 2, 2 ]
      unit: [ 0, 0 ]
    ways:
      - [1, 0, 0x3, [7, 2], [6, 2], [7, 3], [6, 3], [7, 4], [6, 4], [7, 6], [6, 6]]
      - [1, 1, 0xc, [7, 7], [6, 7], [7, 8], [6, 8], [5, 2], [4, 2], [5, 3], [4, 3]]
      - [1, 2, 0x30, [5, 4], [4, 4], [5, 6], [4, 6], [5, 7], [4, 7], [5, 8], [4, 8]]
      - [1, 3, 0xc0, [3, 2], [2, 2], [3, 3], [2, 3], [3, 4], [2, 4], [3, 6], [2, 6]]
      - [1, 0, 0x3, [3, 7], [2, 7], [3, 8], [2, 8], [1, 2], [0, 2], [1, 3], [0, 3]]
    input_xbar:
      exact group 2: { 0: HillTop.Maddock.Calcasieu, 32: HillTop.RossFork.Laxon, 64: Millston.Grays.Mendocino, 80: HillTop.RossFork.Crozet, 96: HillTop.RossFork.Ocoee }
      hash 4:
        0..9: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        40..41: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        10..19: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        42..43: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        20..29: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        44..45: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        30..39: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        46..47: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
      hash 5:
        0..3: random(Millston.Grays.Mendocino(4..15), HillTop.RossFork.Crozet) ^ Millston.Grays.Mendocino(0..3)
        4..9: random(Millston.Grays.Mendocino(4..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(0..5)
        40..41: random(Millston.Grays.Mendocino(4..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(6..7)
        11..14: random(Millston.Grays.Mendocino(4..15), HillTop.RossFork.Crozet) ^ Millston.Grays.Mendocino(0..3)
        15..19: random(Millston.Grays.Mendocino(4..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(0..4)
        10: random(Millston.Grays.Mendocino(4..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(7)
        42..43: random(Millston.Grays.Mendocino(4..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(5..6)
        22..25: random(Millston.Grays.Mendocino(4..15), HillTop.RossFork.Crozet) ^ Millston.Grays.Mendocino(0..3)
        26..29: random(Millston.Grays.Mendocino(4..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(0..3)
        20..21: random(Millston.Grays.Mendocino(4..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(6..7)
        44..45: random(Millston.Grays.Mendocino(4..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(4..5)
        33..36: random(Millston.Grays.Mendocino(4..15), HillTop.RossFork.Crozet) ^ Millston.Grays.Mendocino(0..3)
        37..39: random(Millston.Grays.Mendocino(4..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(0..2)
        30..32: random(Millston.Grays.Mendocino(4..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(5..7)
        46..47: random(Millston.Grays.Mendocino(4..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(3..4)
      hash group 1:
        table: [4, 5]
        seed: 0xb94f5d19db47
    format: { action(0): 0..2, immediate(0): 3..16, version(0): 112..115, match(0): [20..23, 32..111, 24..31 ], action(1): 128..130, immediate(1): 131..144, version(1): 240..243, match(1): [148..151, 160..239, 152..159 ] }
    match: [ Millston.Grays.Mendocino(4..7), Millston.Grays.Mendocino(8..15), HillTop.RossFork.Crozet(0..7), HillTop.RossFork.Crozet(8..15), HillTop.Maddock.Calcasieu(0..7), HillTop.Maddock.Calcasieu(8..15), HillTop.Maddock.Calcasieu(16..23), HillTop.Maddock.Calcasieu(24..31), HillTop.RossFork.Laxon(0..7), HillTop.RossFork.Laxon(8..15), HillTop.RossFork.Laxon(16..23), HillTop.RossFork.Laxon(24..31) ]
    gateway:
      name: cond-18
      input_xbar:
        exact group 1: { 3: HillTop.RossFork.Alamosa }
      row: 0
      bus: 1
      unit: 0
      match: { 3: HillTop.RossFork.Alamosa }
      0b****0: run_table
      miss:  English_0
      condition: 
        expression: "(HillTop.RossFork.Alamosa == 0)"
        true:  _Brady_0
        false:  English_0
    hit: [ [],  English_0,  English_0,  English_0,  English_0,  _Lindy_0 ]
    miss:  _Brady_0$st1
    action_bus: { 32..33 : immediate(0..13) }
    action: _Brady_0$action_data($DIRECT, $DEFAULT)
    instruction: _Brady_0(action, $DEFAULT)
    actions:
      Callao(1, 2):
      - p4_param_order: { Calcasieu: 32, Bratt: 32, Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000062
      - next_table: 1
      - { Bratt.0-15: $adf_f0(0..15), Bonduel: $adf_h1(0..13), Calcasieu: $adf_f1(0..31) }
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 0
      - set HillTop.Naubinway.Bonduel, Bonduel
      - set HillTop.RossFork.Suttle, 1
      Ambler(2, 4):
      - p4_param_order: { Calcasieu: 32, Avondale: 16, Bratt: 32, Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000063
      - next_table: 2
      - { Bratt.0-15: $adf_f0(0..15), Avondale: $adf_h1(0..15), Calcasieu: $adf_f1(0..31), Bonduel: immediate(0..13) }
      - set HillTop.RossFork.DonaAna, Avondale
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 0
      - set HillTop.Naubinway.Bonduel, Bonduel
      - set HillTop.RossFork.Suttle, 1
      Wagener(3, 6):
      - p4_param_order: { Calcasieu: 32, Bratt: 32, Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000064
      - next_table: 3
      - { Bratt.0-15: $adf_f0(0..15), Sardinia: $adf_h1(0..13), Calcasieu: $adf_f1(0..31) }
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 1
      - set HillTop.Naubinway.Sardinia, Sardinia
      - set HillTop.RossFork.Suttle, 1
      Olmitz(4, 8):
      - p4_param_order: { Calcasieu: 32, Avondale: 16, Bratt: 32, Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000065
      - next_table: 4
      - { Bratt.0-15: $adf_f0(0..15), Avondale: $adf_h1(0..15), Calcasieu: $adf_f1(0..31), Sardinia: immediate(0..13) }
      - set HillTop.RossFork.DonaAna, Avondale
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 1
      - set HillTop.Naubinway.Sardinia, Sardinia
      - set HillTop.RossFork.Suttle, 1
      Sequim(5, 0):
      - default_action: { allowed: true }
      - handle: 0x20000066
      - next_table: 5
      - {  }
    default_action: Sequim
    idletime:
      row: 0
      bus: 0
      column: [ 0, 1, 2, 3, 4 ]
      precision: 1
      sweep_interval: 7
      notification: enable
      per_flow_enable: false
  action _Brady_0$action_data:
    p4: { name: Brady$action }
    row: [ 15, 14, 12, 11, 10, 9, 8, 7, 5, 3, 1 ]
    word: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
    column:
    - 5
    - 5
    - 5
    - 5
    - 5
    - [ 4, 5 ]
    - 5
    - [ 4, 5 ]
    - [ 4, 5 ]
    - [ 3, 4, 5 ]
    - [ 1, 2, 3, 4, 5 ]
    vpns: 
    - [ 0 ]
    - [ 1 ]
    - [ 2 ]
    - [ 3 ]
    - [ 4 ]
    - [ 5, 6 ]
    - [ 7 ]
    - [ 8, 9 ]
    - [ 10, 11 ]
    - [ 12, 13, 14 ]
    - [ 15, 16, 17, 18, 19 ]
    home_row:
    - [ 15, 11 ]
    format Callao: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Ambler: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Wagener: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Olmitz: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    action_bus: { 38..39 : $adf_h1, 108..111 : $adf_f1, 36..39 : $adf_f0 }
stage 5 ingress:
  ternary_match _Lindy_0 1:
    p4: { name: Lindy, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Lordstown: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Lordstown" }
      HillTop.RossFork.Sewaren: { type: ternary, size: 2, full_size: 2, key_name: "RossFork.Sewaren" }
      HillTop.RossFork.WindGap: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.WindGap" }
      HillTop.RossFork.Belfair: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Belfair" }
      HillTop.RossFork.Caroleen: { type: ternary, size: 2, full_size: 2, key_name: "RossFork.Caroleen" }
      HillTop.RossFork.Ocoee: { type: ternary, size: 8, full_size: 8, key_name: "RossFork.Ocoee" }
      HillTop.Bessie.Peebles: { type: ternary, size: 1, full_size: 1, key_name: "Bessie.Peebles" }
    row: 8
    bus: 1
    column: 1
    input_xbar:
      ternary group 2: { 6: HillTop.RossFork.Belfair, 8: HillTop.RossFork.Ocoee, 22: HillTop.RossFork.Caroleen, 29: HillTop.Bessie.Peebles, 36: HillTop.RossFork.Sewaren, 38: HillTop.RossFork.WindGap, 39: HillTop.RossFork.Lordstown }
    match:
    - { group: 2, dirtcam: 0x155 }
    hit: [  English_0,  English_0,  English_0,  English_0,  _Geistown_0 ]
    miss:  English_0
    indirect: _Lindy_0$tind
  ternary_indirect _Lindy_0$tind:
    row: 4
    bus: 0
    column: 2
    input_xbar:
      ternary group 2: { 6: HillTop.RossFork.Belfair, 8: HillTop.RossFork.Ocoee, 22: HillTop.RossFork.Caroleen, 29: HillTop.Bessie.Peebles, 36: HillTop.RossFork.Sewaren, 38: HillTop.RossFork.WindGap, 39: HillTop.RossFork.Lordstown }
    format: { action: 0..2 }
    instruction: _Lindy_0$tind(action, $DEFAULT)
    actions:
      Lauada(0, 8):
      - default_action: { allowed: true }
      - handle: 0x20000067
      - next_table: 0
      - set HillTop.RossFork.Merrill, HillTop.RossFork.Hickox
      - set HillTop.Naubinway.Ayden, 0
      - set HillTop.Naubinway.Bonduel, HillTop.RossFork.Luzerne
      RichBar(1, 10):
      - default_action: { allowed: true }
      - handle: 0x20000068
      - next_table: 1
      - set HillTop.RossFork.Merrill, HillTop.RossFork.Hickox
      - set HillTop.Naubinway.Ayden, 1
      - set HillTop.Naubinway.Sardinia, HillTop.RossFork.Luzerne
      Harding(2, 12):
      - default_action: { allowed: true }
      - handle: 0x20000069
      - next_table: 2
      - set HillTop.RossFork.Merrill, HillTop.RossFork.Tehachapi
      - set HillTop.Naubinway.Ayden, 0
      - set HillTop.Naubinway.Bonduel, HillTop.RossFork.Devers
      Nephi(3, 14):
      - default_action: { allowed: true }
      - handle: 0x2000006a
      - next_table: 3
      - set HillTop.RossFork.Merrill, HillTop.RossFork.Tehachapi
      - set HillTop.Naubinway.Ayden, 1
      - set HillTop.Naubinway.Sardinia, HillTop.RossFork.Devers
      Sequim(4, 0):
      - default_action: { allowed: true }
      - handle: 0x2000006b
      - next_table: 4
    default_action: Sequim
  exact_match _Geistown_0 2:
    p4: { name: Geistown, size: 4096, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Knierim: { type: exact, size: 12, full_size: 12, key_name: "RossFork.Knierim" }
      HillTop.Maddock.Calcasieu: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Calcasieu" }
      Millston.Grays.Mendocino: { type: exact, size: 16, full_size: 16, key_name: "Grays.Mendocino" }
      HillTop.RossFork.Chaffee: { type: exact, size: 8, full_size: 8, key_name: "RossFork.Chaffee" }
    row: 0
    bus: 1
    column: [ 8, 9, 10, 11 ]
    stash: 
      row: [ 0 ]
      col: [ 8 ]
      unit: [ 1 ]
    ways:
      - [1, 0, 0x0, [0, 8]]
      - [1, 1, 0x0, [0, 9]]
      - [1, 2, 0x0, [0, 10]]
      - [1, 3, 0x0, [0, 11]]
    input_xbar:
      exact group 1: { 0: HillTop.Maddock.Calcasieu(0..15), 19: HillTop.RossFork.Knierim, 32: HillTop.RossFork.Chaffee, 40: Millston.Grays.Mendocino(8..15), 48: HillTop.Maddock.Calcasieu(16..31), 64: Millston.Grays.Mendocino(0..7) }
      hash 2:
        0..4: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, Millston.Grays.Mendocino(8..15), HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(0..4)
        5..9: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, Millston.Grays.Mendocino(8..15), HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(5..9)
        11..15: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, Millston.Grays.Mendocino(8..15), HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(0..4)
        16..19: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, Millston.Grays.Mendocino(8..15), HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(5..8)
        10: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, Millston.Grays.Mendocino(8..15), HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(9)
        22..26: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, Millston.Grays.Mendocino(8..15), HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(0..4)
        27..29: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, Millston.Grays.Mendocino(8..15), HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(5..7)
        20..21: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, Millston.Grays.Mendocino(8..15), HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(8..9)
        33..37: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, Millston.Grays.Mendocino(8..15), HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(0..4)
        38..39: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, Millston.Grays.Mendocino(8..15), HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(5..6)
        30..32: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, Millston.Grays.Mendocino(8..15), HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(7..9)
      hash 3:
        0..9: random(Millston.Grays.Mendocino(0..7))
        10..19: random(Millston.Grays.Mendocino(0..7))
        20..29: random(Millston.Grays.Mendocino(0..7))
        30..39: random(Millston.Grays.Mendocino(0..7))
      hash group 1:
        table: [2, 3]
        seed: 0xce0e6f30b6
    format: { action(0): 0..2, immediate(0): 3..16, version(0): 112..115, match(0): [32..55, 93..94, 56..87 ] }
    match: [ HillTop.RossFork.Chaffee, Millston.Grays.Mendocino(0..7), Millston.Grays.Mendocino(8..15), HillTop.RossFork.Knierim(10..11), HillTop.Maddock.Calcasieu(0..7), HillTop.Maddock.Calcasieu(8..15), HillTop.Maddock.Calcasieu(16..23), HillTop.Maddock.Calcasieu(24..31) ]
    hit: [  English_0,  English_0,  English_0,  English_0,  _Swanlake_0 ]
    miss:  English_0
    action_bus: { 40..41 : immediate(0..13) }
    action: _Geistown_0$action_data($DIRECT, $DEFAULT)
    instruction: _Geistown_0(action, $DEFAULT)
    actions:
      Palouse(0, 16):
      - p4_param_order: { Calcasieu: 32, Bratt: 32, Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x2000006c
      - next_table: 0
      - { Bratt.0-15: $adf_f0(0..15), Bonduel: $adf_h1(0..13), Calcasieu: $adf_f1(0..31) }
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 0
      - set HillTop.Naubinway.Bonduel, Bonduel
      Monrovia(1, 18):
      - p4_param_order: { Calcasieu: 32, Avondale: 16, Bratt: 32, Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x2000006d
      - next_table: 1
      - { Bratt.0-15: $adf_f0(0..15), Avondale: $adf_h1(0..15), Calcasieu: $adf_f1(0..31), Bonduel: immediate(0..13) }
      - set HillTop.RossFork.DonaAna, Avondale
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 0
      - set HillTop.Naubinway.Bonduel, Bonduel
      Sespe(2, 20):
      - p4_param_order: { Calcasieu: 32, Bratt: 32, Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x2000006e
      - next_table: 2
      - { Bratt.0-15: $adf_f0(0..15), Sardinia: $adf_h1(0..13), Calcasieu: $adf_f1(0..31) }
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 1
      - set HillTop.Naubinway.Sardinia, Sardinia
      Rienzi(3, 22):
      - p4_param_order: { Calcasieu: 32, Avondale: 16, Bratt: 32, Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x2000006f
      - next_table: 3
      - { Bratt.0-15: $adf_f0(0..15), Avondale: $adf_h1(0..15), Calcasieu: $adf_f1(0..31), Sardinia: immediate(0..13) }
      - set HillTop.RossFork.DonaAna, Avondale
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 1
      - set HillTop.Naubinway.Sardinia, Sardinia
      Sequim(4, 0):
      - default_action: { allowed: true }
      - handle: 0x20000070
      - next_table: 4
      - {  }
    default_action: Sequim
  action _Geistown_0$action_data:
    p4: { name: Geistown$action }
    row: 12
    column: [ 2, 3 ]
    vpns: [ 0, 1 ]
    home_row:
    - 12
    format Palouse: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Monrovia: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Sespe: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Rienzi: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    action_bus: { 46..47 : $adf_h1, 108..111 : $adf_f1, 44..47 : $adf_f0 }
  exact_match _Swanlake_0 3:
    p4: { name: Swanlake, size: 1024, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Maddock.Calcasieu: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Calcasieu" }
      HillTop.RossFork.Chaffee: { type: exact, size: 8, full_size: 8, key_name: "RossFork.Chaffee" }
    row: [ 1, 0 ]
    bus: [ 1, 0 ]
    column:
    - [ 10, 11 ]
    - [ 6, 7 ]
    stash: 
      row: [ 0 ]
      col: [ 7 ]
      unit: [ 0 ]
    ways:
      - [2, 0, 0x0, [0, 7]]
      - [2, 1, 0x0, [1, 10]]
      - [2, 2, 0x0, [1, 11]]
      - [2, 3, 0x0, [0, 6]]
    input_xbar:
      exact group 2: { 0: HillTop.Maddock.Calcasieu, 32: HillTop.RossFork.Chaffee }
      hash 4:
        0..1: random(HillTop.Maddock.Calcasieu(2..31)) ^ HillTop.Maddock.Calcasieu(0..1)
        2..9: random(HillTop.Maddock.Calcasieu(2..31)) ^ HillTop.RossFork.Chaffee
        11..12: random(HillTop.Maddock.Calcasieu(2..31)) ^ HillTop.Maddock.Calcasieu(0..1)
        13..19: random(HillTop.Maddock.Calcasieu(2..31)) ^ HillTop.RossFork.Chaffee(0..6)
        10: random(HillTop.Maddock.Calcasieu(2..31)) ^ HillTop.RossFork.Chaffee(7)
        22..23: random(HillTop.Maddock.Calcasieu(2..31)) ^ HillTop.Maddock.Calcasieu(0..1)
        24..29: random(HillTop.Maddock.Calcasieu(2..31)) ^ HillTop.RossFork.Chaffee(0..5)
        20..21: random(HillTop.Maddock.Calcasieu(2..31)) ^ HillTop.RossFork.Chaffee(6..7)
        33..34: random(HillTop.Maddock.Calcasieu(2..31)) ^ HillTop.Maddock.Calcasieu(0..1)
        35..39: random(HillTop.Maddock.Calcasieu(2..31)) ^ HillTop.RossFork.Chaffee(0..4)
        30..32: random(HillTop.Maddock.Calcasieu(2..31)) ^ HillTop.RossFork.Chaffee(5..7)
      hash group 2:
        table: [4]
        seed: 0xee1f27531a
    format: { action(0): 0..1, immediate(0): 2..31, version(0): 112..115, match(0): [58..63, 32..55 ] }
    match: [ HillTop.Maddock.Calcasieu(2..7), HillTop.Maddock.Calcasieu(8..15), HillTop.Maddock.Calcasieu(16..23), HillTop.Maddock.Calcasieu(24..31) ]
    hit: [  English_0,  English_0,  _Rochert_0 ]
    miss:  English_0
    action_bus: { 34..35 : immediate(16..29), 112..115 : immediate(0..29) }
    action: _Swanlake_0$action_data($DIRECT, $DEFAULT)
    instruction: _Swanlake_0(action, $DEFAULT)
    actions:
      Callao(0, 24):
      - p4_param_order: { Calcasieu: 32, Bratt: 32, Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000071
      - next_table: 0
      - { Calcasieu: $adf_f0(0..31), Bratt.0-15: immediate(0..15), Bonduel: immediate(16..29) }
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 0
      - set HillTop.Naubinway.Bonduel, Bonduel
      - set HillTop.RossFork.Suttle, 1
      Wagener(1, 26):
      - p4_param_order: { Calcasieu: 32, Bratt: 32, Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000072
      - next_table: 1
      - { Calcasieu: $adf_f0(0..31), Bratt.0-15: immediate(0..15), Sardinia: immediate(16..29) }
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 1
      - set HillTop.Naubinway.Sardinia, Sardinia
      - set HillTop.RossFork.Suttle, 1
      Sequim(2, 0):
      - default_action: { allowed: true }
      - handle: 0x20000073
      - next_table: 2
      - {  }
    default_action: Sequim
    idletime:
      row: 0
      bus: 1
      column: 1
      precision: 1
      sweep_interval: 7
      notification: enable
      per_flow_enable: false
  action _Swanlake_0$action_data:
    p4: { name: Swanlake$action }
    row: 8
    column: 3
    vpns: [ 0 ]
    home_row:
    - 8
    format Callao: { $adf_f0: 0..31 }
    format Wagener: { $adf_f0: 0..31 }
    action_bus: { 120..123 : $adf_f0 }
  exact_match _Rochert_0 4:
    p4: { name: Rochert, size: 10240, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Knierim: { type: exact, size: 12, full_size: 12, key_name: "RossFork.Knierim" }
      HillTop.Maddock.Calcasieu: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Calcasieu" }
      HillTop.RossFork.Chaffee: { type: exact, size: 8, full_size: 8, key_name: "RossFork.Chaffee" }
    row: [ 3, 1 ]
    bus: [ 1, 0 ]
    column:
    - 11
    - [ 6, 7, 8, 9 ]
    stash: 
      row: [ 3 ]
      col: [ 11 ]
      unit: [ 0 ]
    ways:
      - [3, 0, 0x1, [3, 11], [1, 6]]
      - [3, 1, 0x0, [1, 9]]
      - [3, 2, 0x0, [1, 8]]
      - [3, 3, 0x0, [1, 7]]
    input_xbar:
      exact group 2: { 64: HillTop.Maddock.Calcasieu(0..15), 83: HillTop.RossFork.Knierim, 96: HillTop.RossFork.Chaffee, 112: HillTop.Maddock.Calcasieu(16..31) }
      hash 5:
        0..4: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(0..4)
        5..9: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(5..9)
        40: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, HillTop.Maddock.Calcasieu(16..31))
        11..15: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(0..4)
        16..19: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(5..8)
        10: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(9)
        22..26: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(0..4)
        27..29: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(5..7)
        20..21: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(8..9)
        33..37: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(0..4)
        38..39: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(5..6)
        30..32: random(HillTop.Maddock.Calcasieu(0..15), HillTop.RossFork.Knierim(10..11), HillTop.RossFork.Chaffee, HillTop.Maddock.Calcasieu(16..31)) ^ HillTop.RossFork.Knierim(7..9)
      hash group 3:
        table: [5]
        seed: 0x15431402ade
    format: { action(0): 0..1, version(0): 112..115, match(0): [32..39, 77..78, 40..71 ], action(1): 2..3, version(1): 116..119, match(1): [80..87, 5..6, 88..111, 8..15 ] }
    match: [ HillTop.RossFork.Chaffee, HillTop.RossFork.Knierim(10..11), HillTop.Maddock.Calcasieu(0..7), HillTop.Maddock.Calcasieu(8..15), HillTop.Maddock.Calcasieu(16..23), HillTop.Maddock.Calcasieu(24..31) ]
    hit: [  English_0,  English_0,  _Emden_0 ]
    miss:  English_0
    action: _Rochert_0$action_data($DIRECT, $DEFAULT)
    instruction: _Rochert_0(action, $DEFAULT)
    actions:
      Palouse(0, 28):
      - p4_param_order: { Calcasieu: 32, Bratt: 32, Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000074
      - next_table: 0
      - { Bratt.0-15: $adf_f0(0..15), Bonduel: $adf_h1(0..13), Calcasieu: $adf_f1(0..31) }
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 0
      - set HillTop.Naubinway.Bonduel, Bonduel
      Sespe(1, 30):
      - p4_param_order: { Calcasieu: 32, Bratt: 32, Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000075
      - next_table: 1
      - { Bratt.0-15: $adf_f0(0..15), Sardinia: $adf_h1(0..13), Calcasieu: $adf_f1(0..31) }
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 1
      - set HillTop.Naubinway.Sardinia, Sardinia
      Sequim(2, 0):
      - default_action: { allowed: true }
      - handle: 0x20000076
      - next_table: 2
      - {  }
    default_action: Sequim
  action _Rochert_0$action_data:
    p4: { name: Rochert$action }
    row: [ 2, 0 ]
    word: [ 0, 0 ]
    column:
    - [ 3, 4, 5 ]
    - [ 4, 5 ]
    vpns: 
    - [ 0, 1, 2 ]
    - [ 3, 4 ]
    home_row:
    - 2
    format Palouse: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Sespe: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    action_bus: { 50..51 : $adf_h1, 68..71 : $adf_f1, 48..51 : $adf_f0 }
  ternary_match _Emden_0 5:
    p4: { name: Emden, size: 8192, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Ovett.Manilla: { type: exact, size: 8, full_size: 8, key_name: "Ovett.Manilla" }
      HillTop.Maddock.Calcasieu: { type: lpm, size: 32, full_size: 32, key_name: "Maddock.Calcasieu" }
    row: [ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5 ]
    bus: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1 ]
    column:
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    input_xbar:
      ternary group 0: { 0: HillTop.Maddock.Calcasieu, 32: HillTop.Ovett.Manilla }
    match:
    - { group: 0, byte_config: 3, dirtcam: 0x155 }
    hit: [  English_0 ]
    miss:  English_0
    indirect: _Emden_0$tind
    idletime:
      row: 0
      bus: 0
      column: 0
      precision: 1
      sweep_interval: 7
      notification: enable
      per_flow_enable: false
  ternary_indirect _Emden_0$tind:
    row: 3
    bus: 0
    column: 2
    input_xbar:
      ternary group 0: { 0: HillTop.Maddock.Calcasieu, 32: HillTop.Ovett.Manilla }
    format: { action: 0..1, immediate: 2..15 }
    action_bus: { 52..53 : immediate(0..13) }
    instruction: _Emden_0$tind(action, $DEFAULT)
    actions:
      Tofte(0, 32):
      - p4_param_order: { Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000077
      - next_table: 0
      - { Bonduel: immediate(0..13) }
      - set HillTop.Naubinway.Ayden, 0
      - set HillTop.Naubinway.Bonduel, Bonduel
      Jerico(1, 34):
      - p4_param_order: { Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000078
      - next_table: 0
      - { Bonduel: immediate(0..13) }
      - set HillTop.Naubinway.Ayden, 2
      - set HillTop.Naubinway.Bonduel, Bonduel
      Wabbaseka(2, 36):
      - p4_param_order: { Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000079
      - next_table: 0
      - { Bonduel: immediate(0..13) }
      - set HillTop.Naubinway.Ayden, 3
      - set HillTop.Naubinway.Bonduel, Bonduel
      Clearmont(3, 38):
      - p4_param_order: { Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x2000007a
      - next_table: 0
      - { Sardinia: immediate(0..13) }
      - set HillTop.Naubinway.Sardinia, Sardinia
      - set HillTop.Naubinway.Ayden, 1
      Ruffin(-1, 40):
      - default_only_action: { allowed: true }
      - handle: 0x2000007b
      - next_table: 0
      - {  }
      - set HillTop.Naubinway.Ayden, 0
      - set HillTop.Naubinway.Bonduel, 1
    default_only_action: Ruffin
  exact_match _Brady_0$st1 0:
    p4: { name: Brady, size: 75776, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Ocoee: { type: exact, size: 8, full_size: 8, key_name: "RossFork.Ocoee" }
      HillTop.RossFork.Laxon: { type: exact, size: 32, full_size: 32, key_name: "RossFork.Laxon" }
      HillTop.RossFork.Crozet: { type: exact, size: 16, full_size: 16, key_name: "RossFork.Crozet" }
      HillTop.Maddock.Calcasieu: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Calcasieu" }
      Millston.Grays.Mendocino: { type: exact, size: 16, full_size: 16, key_name: "Grays.Mendocino" }
    row: [ 6, 7, 4, 5, 2, 3 ]
    bus: [ 0, 0, 0, 0, 0, 0 ]
    column:
    - [ 6, 7, 8, 9, 10, 11 ]
    - [ 6, 7, 8, 9, 10, 11 ]
    - [ 6, 7, 8, 9, 10, 11 ]
    - [ 6, 7, 8, 9, 10, 11 ]
    - [ 6, 7, 8, 9, 10 ]
    - [ 6, 7, 8, 9, 10 ]
    stash: 
      row: [ 2, 3 ]
      col: [ 6, 6 ]
      unit: [ 1, 1 ]
    ways:
      - [0, 0, 0x3, [3, 6], [2, 6], [3, 7], [2, 7], [3, 8], [2, 8], [3, 9], [2, 9]]
      - [0, 1, 0xc, [5, 8], [4, 8], [5, 9], [4, 9], [5, 10], [4, 10], [5, 11], [4, 11]]
      - [0, 2, 0x30, [7, 10], [6, 10], [7, 11], [6, 11], [5, 6], [4, 6], [5, 7], [4, 7]]
      - [0, 3, 0xc0, [7, 6], [6, 6], [7, 7], [6, 7], [7, 8], [6, 8], [7, 9], [6, 9]]
      - [0, 0, 0x0, [3, 10], [2, 10]]
    input_xbar:
      exact group 0: { 0: HillTop.Maddock.Calcasieu, 32: HillTop.RossFork.Laxon, 64: Millston.Grays.Mendocino, 80: HillTop.RossFork.Crozet, 96: HillTop.RossFork.Ocoee }
      hash 0:
        0..9: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        40..41: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        10..19: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        42..43: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        20..29: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        44..45: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        30..39: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
        46..47: random(HillTop.Maddock.Calcasieu, HillTop.RossFork.Laxon)
      hash 1:
        0..1: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ Millston.Grays.Mendocino(0..1)
        2..9: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee
        40..41: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet)
        11..12: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ Millston.Grays.Mendocino(0..1)
        13..19: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(0..6)
        10: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(7)
        42..43: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet)
        22..23: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ Millston.Grays.Mendocino(0..1)
        24..29: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(0..5)
        20..21: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(6..7)
        44..45: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet)
        33..34: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ Millston.Grays.Mendocino(0..1)
        35..39: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(0..4)
        30..32: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet) ^ HillTop.RossFork.Ocoee(5..7)
        46..47: random(Millston.Grays.Mendocino(2..15), HillTop.RossFork.Crozet)
      hash group 0:
        table: [0, 1]
        seed: 0x7971b8f945b3
    format: { action(0): 0..2, immediate(0): 3..16, version(0): 112..115, match(0): [18..23, 32..111, 24..31 ], action(1): 128..130, immediate(1): 131..144, version(1): 240..243, match(1): [146..151, 160..239, 152..159 ] }
    match: [ Millston.Grays.Mendocino(2..7), Millston.Grays.Mendocino(8..15), HillTop.RossFork.Crozet(0..7), HillTop.RossFork.Crozet(8..15), HillTop.Maddock.Calcasieu(0..7), HillTop.Maddock.Calcasieu(8..15), HillTop.Maddock.Calcasieu(16..23), HillTop.Maddock.Calcasieu(24..31), HillTop.RossFork.Laxon(0..7), HillTop.RossFork.Laxon(8..15), HillTop.RossFork.Laxon(16..23), HillTop.RossFork.Laxon(24..31) ]
    hit: [  English_0,  English_0,  English_0,  English_0,  _Lindy_0 ]
    miss:  English_0
    action_bus: { 32..33 : immediate(0..13) }
    action: _Brady_0$st1$action_data($DIRECT, $DEFAULT)
    instruction: _Brady_0$st1(action, $DEFAULT)
    actions:
      Callao(0, 1):
      - p4_param_order: { Calcasieu: 32, Bratt: 32, Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000062
      - next_table: 0
      - { Bratt.0-15: $adf_f0(0..15), Bonduel: $adf_h1(0..13), Calcasieu: $adf_f1(0..31) }
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 0
      - set HillTop.Naubinway.Bonduel, Bonduel
      - set HillTop.RossFork.Suttle, 1
      Ambler(1, 2):
      - p4_param_order: { Calcasieu: 32, Avondale: 16, Bratt: 32, Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000063
      - next_table: 1
      - { Bratt.0-15: $adf_f0(0..15), Avondale: $adf_h1(0..15), Calcasieu: $adf_f1(0..31), Bonduel: immediate(0..13) }
      - set HillTop.RossFork.DonaAna, Avondale
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 0
      - set HillTop.Naubinway.Bonduel, Bonduel
      - set HillTop.RossFork.Suttle, 1
      Wagener(2, 4):
      - p4_param_order: { Calcasieu: 32, Bratt: 32, Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000064
      - next_table: 2
      - { Bratt.0-15: $adf_f0(0..15), Sardinia: $adf_h1(0..13), Calcasieu: $adf_f1(0..31) }
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 1
      - set HillTop.Naubinway.Sardinia, Sardinia
      - set HillTop.RossFork.Suttle, 1
      Olmitz(3, 6):
      - p4_param_order: { Calcasieu: 32, Avondale: 16, Bratt: 32, Sardinia: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000065
      - next_table: 3
      - { Bratt.0-15: $adf_f0(0..15), Avondale: $adf_h1(0..15), Calcasieu: $adf_f1(0..31), Sardinia: immediate(0..13) }
      - set HillTop.RossFork.DonaAna, Avondale
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.Naubinway.Ayden, 1
      - set HillTop.Naubinway.Sardinia, Sardinia
      - set HillTop.RossFork.Suttle, 1
      Sequim(4, 0):
      - default_action: { allowed: true }
      - handle: 0x20000066
      - next_table: 4
      - {  }
    default_action: Sequim
    idletime:
      row: 4
      bus: 0
      column: [ 0, 1, 2, 3, 4 ]
      precision: 1
      sweep_interval: 7
      notification: enable
      per_flow_enable: false
  action _Brady_0$st1$action_data:
    p4: { name: Brady$action }
    row: [ 14, 12, 10, 8, 6, 4, 0 ]
    word: [ 0, 0, 0, 0, 0, 0, 0 ]
    column:
    - [ 2, 3, 4, 5 ]
    - [ 4, 5 ]
    - [ 4, 5 ]
    - [ 4, 5 ]
    - [ 3, 4, 5 ]
    - [ 3, 4, 5 ]
    - 3
    vpns: 
    - [ 0, 1, 2, 3 ]
    - [ 4, 5 ]
    - [ 6, 7 ]
    - [ 8, 9 ]
    - [ 10, 11, 12 ]
    - [ 13, 14, 15 ]
    - [ 16 ]
    home_row:
    - [ 14, 0 ]
    format Callao: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Ambler: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Wagener: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    format Olmitz: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    action_bus: { 38..39 : $adf_h1, 100..103 : $adf_f1, 36..39 : $adf_f0 }
  ternary_match English_0 6:
    p4: { name: English, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      Millston.Bergton.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Bergton" }
      Millston.Ramos.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Ramos" }
      Millston.Provencal.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Provencal" }
      Millston.Shirley.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Shirley" }
      Millston.Grays.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Grays" }
      Millston.Maumee.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Maumee" }
      Millston.GlenAvon.$valid: { type: ternary, size: 1, full_size: 1, key_name: "GlenAvon" }
    row: 10
    bus: 1
    column: 1
    input_xbar:
      ternary group 1: { 2: Millston.Provencal.$valid, 3: Millston.Grays.$valid, 8: Millston.Shirley.$valid, 10: Millston.Maumee.$valid, 20: Millston.GlenAvon.$valid, 21: Millston.Ramos.$valid, 22: Millston.Bergton.$valid }
    match:
    - { group: 1, dirtcam: 0x15 }
    hit: [  cond-19 ]
    miss:  cond-19
    indirect: English_0$tind
  ternary_indirect English_0$tind:
    row: 2
    bus: 0
    column: 2
    input_xbar:
      ternary group 1: { 2: Millston.Provencal.$valid, 3: Millston.Grays.$valid, 8: Millston.Shirley.$valid, 10: Millston.Maumee.$valid, 20: Millston.GlenAvon.$valid, 21: Millston.Ramos.$valid, 22: Millston.Bergton.$valid }
    format: { action: 0..2 }
    instruction: English_0$tind(action, $DEFAULT)
    actions:
      Dresden(0, 3):
      - default_action: { allowed: true }
      - handle: 0x20000089
      - next_table: 0
      - set HillTop.Lewiston.Lugert, HillTop.Cutten.Pathfork
      Lorane(1, 5):
      - default_action: { allowed: true }
      - handle: 0x2000008a
      - next_table: 0
      - set HillTop.Lewiston.Lugert, HillTop.Cutten.Tombstone
      Dundalk(2, 7):
      - default_action: { allowed: true }
      - handle: 0x2000008b
      - next_table: 0
      - set HillTop.Lewiston.Lugert, HillTop.Cutten.Marcus
      Bellville(3, 9):
      - default_action: { allowed: true }
      - handle: 0x2000008c
      - next_table: 0
      - set HillTop.Lewiston.Lugert, HillTop.Cutten.Pittsboro
      DeerPark(4, 11):
      - default_action: { allowed: true }
      - handle: 0x2000008d
      - next_table: 0
      - set HillTop.Lewiston.Lugert, HillTop.Cutten.Subiaco
      Sequim(5, 0):
      - default_action: { allowed: true }
      - handle: 0x2000008e
      - next_table: 0
      NoAction(-1, 13):
      - default_only_action: { allowed: true }
      - handle: 0x2000008f
      - next_table: 0
    default_only_action: NoAction
  gateway cond-19 7:
    name: cond-19
    input_xbar:
      exact group 0: { 105: Millston.Hayfield.$valid }
    row: 6
    bus: 1
    unit: 0
    match: { 1: Millston.Hayfield.$valid }
    0b******0:  _Sardinia
    miss:  _Jemison
    condition: 
      expression: "(Millston.Hayfield.$valid == 1 == 0)"
      true:  _Sardinia
      false:  _Jemison
  ternary_match _Jemison 8:
    p4: { name: Jemison, size: 1024, disable_atomic_modify : true }
    p4_param_order: 
      Millston.Hayfield.Blitchton: { type: exact, size: 6, full_size: 6, key_name: "Hayfield.Blitchton" }
      Millston.Hayfield.Avondale: { type: exact, size: 10, full_size: 10, key_name: "Hayfield.Avondale" }
      Millston.Hayfield.Glassboro: { type: exact, size: 4, full_size: 4, key_name: "Hayfield.Glassboro" }
      Millston.Hayfield.Grabill: { type: exact, size: 12, full_size: 12, key_name: "Hayfield.Grabill" }
      HillTop.Wisdom.Onycha: { type: ternary, size: 3, full_size: 3, key_name: "Wisdom.Onycha" }
    row: [ 6, 7 ]
    bus: [ 1, 1 ]
    column:
    - 1
    - 1
    input_xbar:
      ternary group 3: { 0: Millston.Hayfield.Grabill(8..11), 4: Millston.Hayfield.Glassboro, 8: Millston.Hayfield.Avondale, 18: Millston.Hayfield.Blitchton, 24: Millston.Hayfield.Grabill(0..7), 33: HillTop.Wisdom.Onycha }
    match:
    - { group: 3, dirtcam: 0x155 }
    gateway:
      name: cond-21
      input_xbar:
        exact group 0: { 105: Millston.Hayfield.$valid }
      row: 5
      bus: 1
      unit: 0
      match: { 1: Millston.Hayfield.$valid }
      0b******1: run_table
      miss:  _Romeo
      condition: 
        expression: "(Millston.Hayfield.$valid == 1)"
        true:  _Jemison
        false:  _Romeo
    hit: [  _Romeo ]
    miss:  _Romeo
    indirect: _Jemison$tind
  ternary_indirect _Jemison$tind:
    row: 1
    bus: 0
    column: 2
    input_xbar:
      ternary group 3: { 0: Millston.Hayfield.Grabill(8..11), 4: Millston.Hayfield.Glassboro, 8: Millston.Hayfield.Avondale, 18: Millston.Hayfield.Blitchton, 24: Millston.Hayfield.Grabill(0..7), 33: HillTop.Wisdom.Onycha }
    format: { action: 0..2, immediate: 3..22 }
    action_bus: { 116..119 : immediate(0..19) }
    instruction: _Jemison$tind(action, $DEFAULT)
    actions:
      Neosho(1, 15):
      - p4_param_order: { Stilwell: 20 }
      - default_action: { allowed: true }
      - handle: 0x20000092
      - next_table: 0
      - { Stilwell: immediate(0..19) }
      - set HillTop.Wisdom.Onycha, 2
      - set HillTop.Wisdom.Morstein, Stilwell
      - set HillTop.Wisdom.Nenana, HillTop.RossFork.CeeVee
      Islen(2, 17):
      - default_action: { allowed: true }
      - handle: 0x20000093
      - next_table: 0
      - {  }
      - set HillTop.Wisdom.Onycha, 3
      - set HillTop.RossFork.Brinkman, 0
      - set HillTop.RossFork.Parkland, 0
      BarNunn(3, 19):
      - default_action: { allowed: true }
      - handle: 0x20000094
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Chugwater, 1
      Swandale(4, 0):
      - default_action: { allowed: true }
      - handle: 0x20000095
      - next_table: 0
      - {  }
    default_action: BarNunn
stage 6 ingress:
  exact_match _Sardinia 0:
    p4: { name: Sardinia, size: 256, action_profile: Coryville, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Naubinway.Sardinia: { type: exact, size: 8, full_size: 14, key_name: "Naubinway.Sardinia" }
    row: 2
    bus: 1
    column: 7
    stash: 
      row: [ 2 ]
      col: [ 7 ]
      unit: [ 1 ]
    ways:
      - [0, 0, 0x0, [2, 7]]
    input_xbar:
      exact group 0: { 0: HillTop.Naubinway.Sardinia(0..7) }
      hash 0:
        0..7: HillTop.Naubinway.Sardinia(0..7)
      hash group 0:
        table: [0]
        seed: 0x0
      exact group 1: { 0: HillTop.Tiburon.Arnold, 16: HillTop.Lewiston.Lugert }
      hash 2:
        0..9: slice(stripe(crc_rev(0x18005, 0x0, 0x0, 25, { 0: HillTop.Tiburon.Arnold, 9: HillTop.Lewiston.Lugert }, { })), 0..9)
      hash group 2:
        table: [2]
        seed: 0x0
    format: { action(0): 2..2, version(0): 112..115, meter_addr(0): 3..12, meter_pfe(0): 13..13, action_addr(0): 14..28, sel_len_mod(0): 0..1 }
    gateway:
      name: cond-20
      input_xbar:
        exact group 1: { 70: HillTop.Naubinway.Ayden }
      row: 1
      bus: 0
      unit: 1
      match: { 6: HillTop.Naubinway.Ayden }
      0x1: run_table
      miss:  _Romeo
      condition: 
        expression: "(HillTop.Naubinway.Ayden == 1)"
        true:  _Sardinia
        false:  _Romeo
    hit: [  _Romeo ]
    miss:  _Romeo
    selector: _Sardinia$selector.Bellamy(meter_addr, meter_pfe, $DEFAULT)
    selector_length: _Sardinia$selector.Bellamy(sel_len_mod, $DEFAULT)
    action: _Sardinia$action_data.Coryville(action_addr, $DEFAULT)
    instruction: _Sardinia(action, $DEFAULT)
    actions:
      Ackerly(1, 1):
      - p4_param_order: { Ayden: 2, Bonduel: 14 }
      - default_action: { allowed: true }
      - handle: 0x20000090
      - next_table: 0
      - { Bonduel: $adf_h0(0..13) }
      - set HillTop.Naubinway.Bonduel, Bonduel
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x20000091
      - next_table: 0
      - {  }
    default_only_action: NoAction
  selection _Sardinia$selector.Bellamy:
    p4: { name: Bellamy, size: 192 }
    row: 15
    column: [ 2, 3 ]
    maprams: [ 2, 3 ]
    input_xbar:
      exact group 0: { 64: HillTop.Tiburon.Arnold, 80: HillTop.Lewiston.Lugert }
      hash 1:
        0..50: slice(stripe(crc_rev(0x18005, 0x0, 0x0, 25, { 0: HillTop.Tiburon.Arnold, 9: HillTop.Lewiston.Lugert })), 0..50)
      hash group 1:
        table: [1]
        seed: 0x0
    mode: resilient 0
    non_linear: true
    pool_sizes: [256]
    hash_dist:
      0: { hash: 2, mask: 0x3ff, shift: 0 }
  action _Sardinia$action_data.Coryville:
    p4: { name: Coryville, size: 16384 }
    row: 5
    column: [ 2, 3 ]
    vpns: [ 0, 1 ]
    home_row:
    - 5
    format Ackerly: { $adf_h0: 0..15 }
    action_bus: { 32..33 : $adf_h0 }
  stateful _Sardinia$salu.Bellamy$salu:
    p4: { name: Bellamy$salu, size: 122880, hidden: true }
    selection_table: _Sardinia$selector.Bellamy
    row: 15
    column: [ 2, 3 ]
    maprams: [ 2, 3 ]
    format: { lo: 1 }
    actions:
      set_bit_at_alu$0:
      - set_bit_at
      clr_bit_at_alu$0:
      - clr_bit_at
      set_bit_alu$0:
      - set_bit
      clr_bit_alu$0:
      - clr_bit
  exact_match _Romeo 1:
    p4: { name: Romeo, size: 16384, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Maddock.Calcasieu: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Calcasieu" }
      HillTop.RossFork.Bicknell: { type: exact, size: 12, full_size: 12, key_name: "RossFork.Bicknell" }
    row: [ 1, 2 ]
    bus: [ 0, 0 ]
    column:
    - [ 2, 3, 4, 6 ]
    - [ 2, 3, 4, 6 ]
    stash: 
      row: [ 1, 2 ]
      col: [ 2, 2 ]
      unit: [ 0, 0 ]
    ways:
      - [3, 0, 0x0, [2, 2], [1, 2]]
      - [3, 1, 0x0, [2, 3], [1, 3]]
      - [3, 2, 0x0, [2, 4], [1, 4]]
      - [3, 3, 0x0, [2, 6], [1, 6]]
    input_xbar:
      exact group 1: { 72: HillTop.Maddock.Calcasieu(8..31), 96: HillTop.Maddock.Calcasieu(0..7), 104: HillTop.RossFork.Bicknell(8..11), 112: HillTop.RossFork.Bicknell(0..7) }
      hash 3:
        0..3: random(HillTop.Maddock.Calcasieu(8..31), HillTop.Maddock.Calcasieu(0..7), HillTop.RossFork.Bicknell(6..7)) ^ HillTop.RossFork.Bicknell(8..11)
        4..9: random(HillTop.Maddock.Calcasieu(8..31), HillTop.Maddock.Calcasieu(0..7), HillTop.RossFork.Bicknell(6..7)) ^ HillTop.RossFork.Bicknell(0..5)
        11..14: random(HillTop.Maddock.Calcasieu(8..31), HillTop.Maddock.Calcasieu(0..7), HillTop.RossFork.Bicknell(6..7)) ^ HillTop.RossFork.Bicknell(8..11)
        15..19: random(HillTop.Maddock.Calcasieu(8..31), HillTop.Maddock.Calcasieu(0..7), HillTop.RossFork.Bicknell(6..7)) ^ HillTop.RossFork.Bicknell(0..4)
        10: random(HillTop.Maddock.Calcasieu(8..31), HillTop.Maddock.Calcasieu(0..7), HillTop.RossFork.Bicknell(6..7)) ^ HillTop.RossFork.Bicknell(5)
        22..25: random(HillTop.Maddock.Calcasieu(8..31), HillTop.Maddock.Calcasieu(0..7), HillTop.RossFork.Bicknell(6..7)) ^ HillTop.RossFork.Bicknell(8..11)
        26..29: random(HillTop.Maddock.Calcasieu(8..31), HillTop.Maddock.Calcasieu(0..7), HillTop.RossFork.Bicknell(6..7)) ^ HillTop.RossFork.Bicknell(0..3)
        20..21: random(HillTop.Maddock.Calcasieu(8..31), HillTop.Maddock.Calcasieu(0..7), HillTop.RossFork.Bicknell(6..7)) ^ HillTop.RossFork.Bicknell(4..5)
        33..36: random(HillTop.Maddock.Calcasieu(8..31), HillTop.Maddock.Calcasieu(0..7), HillTop.RossFork.Bicknell(6..7)) ^ HillTop.RossFork.Bicknell(8..11)
        37..39: random(HillTop.Maddock.Calcasieu(8..31), HillTop.Maddock.Calcasieu(0..7), HillTop.RossFork.Bicknell(6..7)) ^ HillTop.RossFork.Bicknell(0..2)
        30..32: random(HillTop.Maddock.Calcasieu(8..31), HillTop.Maddock.Calcasieu(0..7), HillTop.RossFork.Bicknell(6..7)) ^ HillTop.RossFork.Bicknell(3..5)
      hash group 3:
        table: [3]
        seed: 0x957f7806d9
    format: { action(0): 0..0, immediate(0): 3..4, version(0): 112..115, match(0): 14..47, action(1): 1..1, immediate(1): 5..6, version(1): 116..119, match(1): [86..87, 48..79 ], action(2): 2..2, immediate(2): 7..8, version(2): 248..251, match(2): [214..215, 88..111, 120..127 ], action(3): 128..128, immediate(3): 130..131, version(3): 240..243, match(3): 134..167, action(4): 129..129, immediate(4): 132..133, version(4): 244..247, match(4): [206..207, 168..199 ] }
    match: [ HillTop.RossFork.Bicknell(6..7), HillTop.Maddock.Calcasieu(0..7), HillTop.Maddock.Calcasieu(8..15), HillTop.Maddock.Calcasieu(16..23), HillTop.Maddock.Calcasieu(24..31) ]
    gateway:
      name: cond-23
      input_xbar:
        exact group 0: { 9: HillTop.Ovett.Hammond.1-3(1), 21: HillTop.RossFork.Weyauwega, 30: HillTop.Murphy.Blairsden, 37: HillTop.RossFork.Naruna.2-2, 43: HillTop.RossFork.Juniata, 51: HillTop.Murphy.Standish, 59: HillTop.RossFork.Naruna.0-1 }
        hash 0:
          40: HillTop.Murphy.Blairsden
          41: HillTop.Ovett.Hammond.1-3(1)
          42: HillTop.RossFork.Juniata
        hash group 0:
          table: [0]
          seed: 0x0
      row: 1
      bus: 1
      unit: 0
      match: { 21: HillTop.RossFork.Weyauwega, 27: HillTop.Murphy.Standish, 32: HillTop.Murphy.Blairsden, 33: HillTop.Ovett.Hammond.1-3(1), 34: HillTop.RossFork.Juniata, 3: HillTop.RossFork.Naruna.0-1, 13: HillTop.RossFork.Naruna.2-2 }
      0b110****0*****0*******0********01: run_table
      miss:  _Elkton
      condition: 
        expression: "(HillTop.RossFork.Weyauwega == 0 && HillTop.Murphy.Standish == 0 && HillTop.Murphy.Blairsden == 0 && HillTop.Ovett.Hammond & 4 == 4 && HillTop.RossFork.Juniata == 1 && HillTop.RossFork.Naruna == 1)"
        true:  _Romeo
        false:  _Elkton
    hit: [  _Elkton ]
    miss:  _Elkton
    action_bus: { 0 : immediate(0..1), 36..37 : immediate(0..1) }
    action: _Romeo$action_data($DIRECT, $DEFAULT)
    instruction: _Romeo(action, $DEFAULT)
    actions:
      Catlin(1, 2):
      - p4_param_order: { Antoine: 16, Townville: 16, Monahans: 1, Pinole: 1 }
      - default_action: { allowed: true }
      - handle: 0x200000a1
      - next_table: 0
      - { Antoine: $adf_h0(0..15), Townville.12-15: $adf_h1(0..3), Townville.0-11: $adf_h1(4..15), Pinole: immediate(0..0), Monahans: immediate(1..1) }
      - set HillTop.Salix.Hueytown, Antoine
      - set HillTop.Komatke.Monahans, Monahans
      - set HillTop.Komatke.Townville.0-11, Townville.0-11
      - set HillTop.Komatke.Townville.12-15, Townville.12-15
      - set HillTop.Komatke.Pinole, Pinole
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x200000a2
      - next_table: 0
      - {  }
    default_only_action: NoAction
    idletime:
      row: 4
      bus: 0
      column: [ 0, 1, 4 ]
      precision: 1
      sweep_interval: 7
      notification: enable
      per_flow_enable: false
  action _Romeo$action_data:
    p4: { name: Romeo$action }
    row: [ 3, 1 ]
    word: [ 0, 0 ]
    column:
    - [ 3, 4, 5 ]
    - [ 4, 5 ]
    vpns: 
    - [ 0, 1, 2 ]
    - [ 3, 4 ]
    home_row:
    - 3
    format Catlin: { $adf_h0: 0..15, $adf_h1: 16..31 }
    action_bus: { 40..41 : $adf_h0, 42..43 : $adf_h1 }
  hash_action _Elkton 2:
    p4: { name: Elkton, size: 2, disable_atomic_modify : true }
    p4_param_order: 
      Millston.Calabash.$valid: { type: exact, size: 1, full_size: 1, key_name: "Calabash" }
    row: 3
    bus: 1
    hash_dist:
      1: { hash: 2, mask: 0x1, shift: 3 }
    input_xbar:
      exact group 1: { 34: Millston.Calabash.$valid }
      hash 2:
        16..16: stripe(Millston.Calabash.$valid)
      hash group 2:
        table: [2]
        seed: 0x0
    gateway:
      name: cond-22
      input_xbar:
        exact group 0: { 97: HillTop.Wisdom.Onycha }
      row: 2
      bus: 1
      unit: 0
      payload: 0x1
      format: { action: 0..0 }
      match: { 1: HillTop.Wisdom.Onycha }
      0b****010: run_table
      miss:  Fittstown_0
      condition: 
        expression: "(HillTop.Wisdom.Onycha != 2)"
        true:  Fittstown_0
        false:  Fittstown_0
    next:  Fittstown_0
    action: _Elkton$action_data(hash_dist 1, $DEFAULT)
    instruction: _Elkton(action, $DEFAULT)
    actions:
      Beatrice(1, 3):
      - p4_param_order: { Avondale: 20 }
      - default_action: { allowed: true }
      - handle: 0x200000a0
      - next_table: 0
      - { Avondale: $adf_f0(0..19) }
      - set HillTop.Wisdom.Dolores, HillTop.Lamona.Whitefish
      - set HillTop.Wisdom.Connell.0-15, HillTop.RossFork.Connell.0-15
      - set HillTop.Wisdom.Nenana, HillTop.RossFork.CeeVee
      - set HillTop.Wisdom.Morstein, Avondale
      - or W10, W1, W10
      - deposit-field W13(8..31), W0(2..25), W14
    default_action: Beatrice
    default_action_parameters:
      Avondale: "0x1ff"
  action _Elkton$action_data:
    p4: { name: Elkton$action, how_referenced: direct }
    row: 13
    column: 4
    vpns: [ 0 ]
    home_row:
    - 13
    format Beatrice: { $adf_f0: 0..31 }
    action_bus: { 96..99 : $adf_f0 }
  ternary_match Fittstown_0 3:
    p4: { name: Fittstown, size: 256, disable_atomic_modify : true }
    p4_param_order: 
      Millston.Bergton.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Bergton" }
      Millston.Ramos.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Ramos" }
      Millston.Provencal.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Provencal" }
      Millston.Shirley.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Shirley" }
      Millston.Grays.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Grays" }
      Millston.GlenAvon.$valid: { type: ternary, size: 1, full_size: 1, key_name: "GlenAvon" }
      Millston.Maumee.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Maumee" }
      Millston.Calabash.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Calabash" }
    row: 6
    bus: 1
    column: 1
    hash_dist:
      2: { hash: 2, mask: 0xffff, shift: 0 }
    input_xbar:
      ternary group 0: { 2: Millston.Provencal.$valid, 3: Millston.Grays.$valid, 8: Millston.Shirley.$valid, 10: Millston.Maumee.$valid, 18: Millston.Calabash.$valid, 20: Millston.GlenAvon.$valid, 21: Millston.Ramos.$valid, 22: Millston.Bergton.$valid }
      exact group 2: { 0: Millston.Calabash.Connell.16-23, 8: Millston.Calabash.Adona, 32: Millston.Calabash.Fabens, 56: Millston.Calabash.Goldsboro.0-7, 64: Millston.Calabash.Goldsboro.8-23, 80: Millston.Calabash.Connell.0-15, 96: HillTop.RossFork.McCaulley.0-7, 104: HillTop.RossFork.McCaulley.8-15 }
      hash 4:
        32..47: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 112, { 16: Millston.Calabash.Fabens, 40: Millston.Calabash.Goldsboro.0-7, 80: Millston.Calabash.Connell.16-23, 88: Millston.Calabash.Adona }, { })), 0..15)
      hash 5:
        32..47: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 112, { 0: HillTop.RossFork.McCaulley.0-7, 8: HillTop.RossFork.McCaulley.8-15, 48: Millston.Calabash.Goldsboro.8-23, 64: Millston.Calabash.Connell.0-15 }, { })), 0..15)
      hash group 2:
        table: [4, 5]
        seed: 0x0
    match:
    - { group: 0, dirtcam: 0x15 }
    hit: [  _Havana ]
    miss:  _Havana
    indirect: Fittstown_0$tind
  ternary_indirect Fittstown_0$tind:
    row: 1
    bus: 0
    column: 5
    hash_dist:
      2: { hash: 2, mask: 0xffff, shift: 0 }
    input_xbar:
      ternary group 0: { 2: Millston.Provencal.$valid, 3: Millston.Grays.$valid, 8: Millston.Shirley.$valid, 10: Millston.Maumee.$valid, 18: Millston.Calabash.$valid, 20: Millston.GlenAvon.$valid, 21: Millston.Ramos.$valid, 22: Millston.Bergton.$valid }
      exact group 2: { 0: Millston.Calabash.Connell.16-23, 8: Millston.Calabash.Adona, 32: Millston.Calabash.Fabens, 56: Millston.Calabash.Goldsboro.0-7, 64: Millston.Calabash.Goldsboro.8-23, 80: Millston.Calabash.Connell.0-15, 96: HillTop.RossFork.McCaulley.0-7, 104: HillTop.RossFork.McCaulley.8-15 }
      hash 4:
        32..47: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 112, { 16: Millston.Calabash.Fabens, 40: Millston.Calabash.Goldsboro.0-7, 80: Millston.Calabash.Connell.16-23, 88: Millston.Calabash.Adona }, { })), 0..15)
      hash 5:
        32..47: slice(stripe(crc_rev(0xc002, 0x0, 0x0, 112, { 0: HillTop.RossFork.McCaulley.0-7, 8: HillTop.RossFork.McCaulley.8-15, 48: Millston.Calabash.Goldsboro.8-23, 64: Millston.Calabash.Connell.0-15 }, { })), 0..15)
      hash group 2:
        table: [4, 5]
        seed: 0x0
    format: { action: 0..2 }
    action_bus: { 44..45 : hash_dist(2, lo) }
    instruction: Fittstown_0$tind(action, $DEFAULT)
    actions:
      Watters(0, 4):
      - default_action: { allowed: true }
      - handle: 0x20000096
      - next_table: 0
      - set H51, hash_dist(2, 0..15)
      Burmester(1, 6):
      - default_action: { allowed: true }
      - handle: 0x20000097
      - next_table: 0
      - set HillTop.Lewiston.Staunton, HillTop.Cutten.Pathfork
      Petrolia(2, 8):
      - default_action: { allowed: true }
      - handle: 0x20000098
      - next_table: 0
      - set HillTop.Lewiston.Staunton, HillTop.Cutten.Tombstone
      Aguada(3, 10):
      - default_action: { allowed: true }
      - handle: 0x20000099
      - next_table: 0
      - set HillTop.Lewiston.Staunton, HillTop.Cutten.Subiaco
      Brush(4, 12):
      - default_action: { allowed: true }
      - handle: 0x2000009a
      - next_table: 0
      - set HillTop.Lewiston.Staunton, HillTop.Cutten.Marcus
      Ceiba(5, 14):
      - default_action: { allowed: true }
      - handle: 0x2000009b
      - next_table: 0
      - set HillTop.Lewiston.Staunton, HillTop.Cutten.Pittsboro
      Sequim(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x2000009c
      - next_table: 0
    default_only_action: Sequim
  ternary_match _Havana 4:
    p4: { name: Havana, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.McCaulley: { type: ternary, size: 16, full_size: 16, key_name: "RossFork.McCaulley" }
      HillTop.RossFork.Pridgen: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Pridgen" }
      HillTop.RossFork.Tenino: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Tenino" }
      HillTop.RossFork.Denhoff: { type: ternary, size: 3, full_size: 3, key_name: "RossFork.Denhoff" }
      HillTop.RossFork.Chevak: { type: ternary, size: 16, full_size: 16, key_name: "RossFork.Chevak" }
      HillTop.RossFork.Mendocino: { type: ternary, size: 16, full_size: 16, key_name: "RossFork.Mendocino" }
      HillTop.Lamona.Fristoe: { type: ternary, size: 14, full_size: 14, key_name: "Lamona.Fristoe" }
      HillTop.RossFork.Bicknell: { type: ternary, size: 12, full_size: 12, key_name: "RossFork.Bicknell" }
      HillTop.Ovett.Hematite: { type: ternary, size: 1, full_size: 1, key_name: "Ovett.Hematite" }
      HillTop.RossFork.Exton: { type: ternary, size: 8, full_size: 8, key_name: "RossFork.Exton" }
      Millston.Rainelle.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Rainelle" }
      Millston.Rainelle.Findlay: { type: ternary, size: 16, full_size: 16, key_name: "Rainelle.Findlay" }
      HillTop.RossFork.Brinkman: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Brinkman" }
      HillTop.Maddock.Calcasieu: { type: ternary, size: 32, full_size: 32, key_name: "Maddock.Calcasieu" }
      HillTop.RossFork.Ocoee: { type: ternary, size: 8, full_size: 8, key_name: "RossFork.Ocoee" }
      HillTop.Wisdom.Delavan: { type: ternary, size: 1, full_size: 1, key_name: "Wisdom.Delavan" }
      HillTop.Wisdom.Onycha: { type: ternary, size: 3, full_size: 3, key_name: "Wisdom.Onycha" }
      HillTop.Sublett.Calcasieu: { type: ternary, size: 16, full_size: 128, key_name: "Sublett.Calcasieu", start_bit: 112 }
      HillTop.RossFork.Parkland: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Parkland" }
      HillTop.Wisdom.Blencoe: { type: ternary, size: 8, full_size: 8, key_name: "Wisdom.Blencoe" }
    row: [ 0, 1, 2, 3, 4, 5 ]
    bus: [ 0, 0, 0, 0, 0, 0 ]
    column:
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    input_xbar:
      ternary group 1: { 0: HillTop.Lamona.Fristoe(8..13), 8: HillTop.Maddock.Calcasieu(24..31), 16: HillTop.Maddock.Calcasieu(0..7), 24: HillTop.Lamona.Fristoe(0..7), 32: HillTop.Maddock.Calcasieu(16..23) }
      ternary group 2: { 0: HillTop.Sublett.Calcasieu.96-127(24..31), 8: HillTop.RossFork.Bicknell(0..7), 16: HillTop.Maddock.Calcasieu(8..15), 24: HillTop.Sublett.Calcasieu.96-127(16..23), 32: HillTop.RossFork.Bicknell(8..11) }
      ternary group 3: { 0: HillTop.RossFork.Mendocino(8..15), 8: HillTop.RossFork.Mendocino(0..7), 16: Millston.Rainelle.Findlay(8..15), 24: Millston.Rainelle.Findlay(0..7), 37: HillTop.Ovett.Hematite }
      ternary group 4: { 0: HillTop.RossFork.Chevak(0..7), 14: HillTop.RossFork.Tenino, 15: HillTop.RossFork.Pridgen, 17: HillTop.Wisdom.Onycha, 24: HillTop.RossFork.Chevak(8..15), 39: HillTop.Wisdom.Delavan }
      ternary group 5: { 0: HillTop.Wisdom.Blencoe, 8: HillTop.RossFork.Ocoee, 19: Millston.Rainelle.$valid, 24: HillTop.RossFork.McCaulley.0-7, 32: HillTop.RossFork.McCaulley.8-15 }
      ternary group 6: { 0: HillTop.RossFork.Exton, 11: HillTop.RossFork.Denhoff.0-0, 21: HillTop.RossFork.Brinkman }
      byte group 3: { 1: HillTop.RossFork.Parkland, 2: HillTop.RossFork.Denhoff.1-2 }
    match:
    - { group: 1, byte_group: 3, byte_config: 0, dirtcam: 0x555 }
    - { group: 2, dirtcam: 0x155 }
    - { group: 3, dirtcam: 0x155 }
    - { group: 4, dirtcam: 0x155 }
    - { group: 5, dirtcam: 0x155 }
    - { group: 6, dirtcam: 0x15 }
    hit: [  _Nooksack ]
    miss:  _Nooksack
    indirect: _Havana$tind
  counter _Havana$stats.Palco:
    p4: { name: Palco }
    row: 13
    column: [ 2, 3 ]
    maprams: [ 2, 3 ]
    count: packets_and_bytes
    format: {packets(0): 0..63, bytes(0): 64..127}
  ternary_indirect _Havana$tind:
    row: 0
    bus: 1
    column: 3
    input_xbar:
      ternary group 1: { 0: HillTop.Lamona.Fristoe(8..13), 8: HillTop.Maddock.Calcasieu(24..31), 16: HillTop.Maddock.Calcasieu(0..7), 24: HillTop.Lamona.Fristoe(0..7), 32: HillTop.Maddock.Calcasieu(16..23) }
      ternary group 2: { 0: HillTop.Sublett.Calcasieu.96-127(24..31), 8: HillTop.RossFork.Bicknell(0..7), 16: HillTop.Maddock.Calcasieu(8..15), 24: HillTop.Sublett.Calcasieu.96-127(16..23), 32: HillTop.RossFork.Bicknell(8..11) }
      ternary group 3: { 0: HillTop.RossFork.Mendocino(8..15), 8: HillTop.RossFork.Mendocino(0..7), 16: Millston.Rainelle.Findlay(8..15), 24: Millston.Rainelle.Findlay(0..7), 37: HillTop.Ovett.Hematite }
      ternary group 4: { 0: HillTop.RossFork.Chevak(0..7), 14: HillTop.RossFork.Tenino, 15: HillTop.RossFork.Pridgen, 17: HillTop.Wisdom.Onycha, 24: HillTop.RossFork.Chevak(8..15), 39: HillTop.Wisdom.Delavan }
      ternary group 5: { 0: HillTop.Wisdom.Blencoe, 8: HillTop.RossFork.Ocoee, 19: Millston.Rainelle.$valid, 24: HillTop.RossFork.McCaulley.0-7, 32: HillTop.RossFork.McCaulley.8-15 }
      ternary group 6: { 0: HillTop.RossFork.Exton, 11: HillTop.RossFork.Denhoff.0-0, 21: HillTop.RossFork.Brinkman }
      byte group 3: { 1: HillTop.RossFork.Parkland, 2: HillTop.RossFork.Denhoff.1-2 }
    format: { action: 0..1, immediate: 2..17 }
    action_bus: { 16 : immediate(0..7), 17 : immediate(8..15) }
    stats: _Havana$stats.Palco($DIRECT, $DEFAULT)
    instruction: _Havana$tind(action, $DEFAULT)
    actions:
      Melder(0, 5):
      - p4_param_order: { Blencoe: 8 }
      - default_action: { allowed: true }
      - handle: 0x200000a7
      - next_table: 0
      - { Blencoe: immediate(0..7) }
      - set ig_intr_md_for_tm.mcast_grp_a, 0
      - set HillTop.Wisdom.Havana, 1
      - set HillTop.Wisdom.Blencoe, Blencoe
      - set HillTop.RossFork.Montross, 0
      - set HillTop.Moose.Pinole, 0
      - _Havana$stats.Palco($DIRECT)
      FourTown(1, 7):
      - p4_param_order: { Blencoe: 8, Redden: 1 }
      - default_action: { allowed: true }
      - handle: 0x200000a8
      - next_table: 0
      - { Redden: immediate(0..0), Blencoe: immediate(8..15) }
      - set ig_intr_md_for_tm.copy_to_cpu, 1
      - set HillTop.Wisdom.Blencoe, Blencoe
      - set HillTop.RossFork.Redden, Redden
      - set HillTop.RossFork.Montross, 0
      - set HillTop.Moose.Pinole, 0
      - _Havana$stats.Palco($DIRECT)
      Hyrum(2, 9):
      - default_action: { allowed: true }
      - handle: 0x200000a9
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Redden, 1
      - set HillTop.RossFork.Montross, 0
      - set HillTop.Moose.Pinole, 0
      - _Havana$stats.Palco($DIRECT)
      Farner(3, 11):
      - default_action: { allowed: true }
      - handle: 0x200000aa
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Montross, 0
      - set HillTop.Moose.Pinole, 0
      - _Havana$stats.Palco($DIRECT)
      NoAction(-1, 13):
      - default_only_action: { allowed: true }
      - handle: 0x200000ab
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Montross, 0
      - set HillTop.Moose.Pinole, 0
    default_only_action: NoAction
  exact_match _Nooksack 5:
    p4: { name: Nooksack, size: 67584, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Ocoee: { type: exact, size: 8, full_size: 8, key_name: "RossFork.Ocoee" }
      HillTop.Maddock.Kaluaaha: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Kaluaaha" }
      Millston.Grays.Chevak: { type: exact, size: 16, full_size: 16, key_name: "Grays.Chevak" }
      HillTop.Maddock.Calcasieu: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Calcasieu" }
      Millston.Grays.Mendocino: { type: exact, size: 16, full_size: 16, key_name: "Grays.Mendocino" }
    row: [ 3, 4, 5, 6, 7 ]
    bus: [ 0, 0, 0, 0, 0 ]
    column:
    - [ 2, 3, 4, 6, 7 ]
    - [ 2, 3, 4, 6, 7 ]
    - [ 2, 3, 4, 6, 7 ]
    - [ 2, 3, 4, 6, 7 ]
    - [ 2, 3, 4, 6, 7 ]
    stash: 
      row: [ 3, 4, 5, 6, 7 ]
      col: [ 2, 2, 2, 2, 2 ]
      unit: [ 0, 0, 0, 0, 0 ]
    ways:
      - [4, 0, 0x1, [7, 2], [6, 2], [5, 2], [4, 2], [3, 2], [7, 3], [6, 3], [5, 3], [4, 3], [3, 3]]
      - [4, 1, 0x0, [7, 4], [6, 4], [5, 4], [4, 4], [3, 4]]
      - [4, 2, 0x0, [7, 6], [6, 6], [5, 6], [4, 6], [3, 6]]
      - [4, 3, 0x0, [7, 7], [6, 7], [5, 7], [4, 7], [3, 7]]
    input_xbar:
      exact group 3: { 0: HillTop.Maddock.Calcasieu, 32: HillTop.Maddock.Kaluaaha, 64: Millston.Grays.Chevak, 80: Millston.Grays.Mendocino, 96: HillTop.RossFork.Ocoee }
      hash 6:
        0..9: random(HillTop.Maddock.Calcasieu, HillTop.Maddock.Kaluaaha)
        40: random(HillTop.Maddock.Calcasieu, HillTop.Maddock.Kaluaaha)
        10..19: random(HillTop.Maddock.Calcasieu, HillTop.Maddock.Kaluaaha)
        20..29: random(HillTop.Maddock.Calcasieu, HillTop.Maddock.Kaluaaha)
        30..39: random(HillTop.Maddock.Calcasieu, HillTop.Maddock.Kaluaaha)
      hash 7:
        0..1: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ Millston.Grays.Chevak(0..1)
        2..9: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee
        40: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino)
        11..12: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ Millston.Grays.Chevak(0..1)
        13..19: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(0..6)
        10: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(7)
        22..23: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ Millston.Grays.Chevak(0..1)
        24..29: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(0..5)
        20..21: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(6..7)
        33..34: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ Millston.Grays.Chevak(0..1)
        35..39: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(0..4)
        30..32: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(5..7)
      hash group 4:
        table: [6, 7]
        seed: 0x15ad646b5e0
    format: { action(0): 2..3, version(0): 4..7, match(0): [98..103, 8..95 ], action(1): 0..1, version(1): 244..247, match(1): [506..511, 104..127, 224..239, 248..255, 352..367, 376..383, 480..495 ], action(2): 128..129, version(2): 240..243, match(2): 130..223, action(3): 256..257, version(3): 368..371, match(3): 258..351, action(4): 384..385, version(4): 496..499, match(4): 386..479, action(5): 512..513, version(5): 624..627, match(5): 514..607 }
    match: [ Millston.Grays.Chevak(2..7), Millston.Grays.Chevak(8..15), Millston.Grays.Mendocino(0..7), Millston.Grays.Mendocino(8..15), HillTop.Maddock.Calcasieu(0..7), HillTop.Maddock.Calcasieu(8..15), HillTop.Maddock.Calcasieu(16..23), HillTop.Maddock.Calcasieu(24..31), HillTop.Maddock.Kaluaaha(0..7), HillTop.Maddock.Kaluaaha(8..15), HillTop.Maddock.Kaluaaha(16..23), HillTop.Maddock.Kaluaaha(24..31) ]
    gateway:
      name: cond-24
      input_xbar:
        exact group 4: { 0: HillTop.RossFork.Merrill(0..7), 11: HillTop.Ovett.Hammond.0-0, 19: HillTop.RossFork.Alamosa, 21: HillTop.RossFork.Weyauwega, 29: HillTop.Ovett.Hematite, 37: HillTop.RossFork.Naruna.2-2, 40: HillTop.RossFork.Merrill(8..15), 51: HillTop.Murphy.Standish, 62: HillTop.Murphy.Blairsden, 67: HillTop.RossFork.Naruna.0-1 }
        hash 8:
          44: HillTop.RossFork.Weyauwega
          45: HillTop.Ovett.Hematite
          46: HillTop.Murphy.Standish
          47: HillTop.Murphy.Blairsden
          48: HillTop.Ovett.Hammond.0-0
          49: HillTop.RossFork.Alamosa
        hash 9:
        hash group 0:
          table: [8, 9]
          seed: 0x0
      row: 0
      bus: 1
      unit: 1
      match: { 36: HillTop.RossFork.Weyauwega, 37: HillTop.Ovett.Hematite, 38: HillTop.Murphy.Standish, 39: HillTop.Murphy.Blairsden, 40: HillTop.Ovett.Hammond.0-0, 19: HillTop.RossFork.Naruna.0-1, 29: HillTop.RossFork.Naruna.2-2, 0: HillTop.RossFork.Merrill(0..7), 8: HillTop.RossFork.Merrill(8..15), 41: HillTop.RossFork.Alamosa }
      0b010010******0********01***0000000000000000: run_table
      miss:  _Buras
      condition: 
        expression: "(HillTop.RossFork.Weyauwega == 0 && HillTop.Ovett.Hematite == 1 && HillTop.Murphy.Standish == 0 && HillTop.Murphy.Blairsden == 0 && (HillTop.Ovett.Hammond & 1 == 1 && HillTop.RossFork.Naruna == 1 && HillTop.RossFork.Merrill == 0 && HillTop.RossFork.Alamosa == 0))"
        true:  _Nooksack
        false:  _Buras
    hit: [ [],  _Buras,  _Buras,  _Pineville ]
    miss:  _Nooksack$st1
    action: _Nooksack$action_data($DIRECT, $DEFAULT)
    instruction: _Nooksack(action, $DEFAULT)
    actions:
      Milano(1, 15):
      - p4_param_order: { Kaluaaha: 32, Bratt: 32 }
      - default_action: { allowed: true }
      - handle: 0x200000ac
      - next_table: 1
      - { Kaluaaha: $adf_f0(0..31), Bratt.0-15: $adf_f1(0..15) }
      - set HillTop.Maddock.Kaluaaha, Kaluaaha
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Boerne, 1
      - set HillTop.RossFork.Suttle, 1
      Biggers(2, 16):
      - p4_param_order: { Kaluaaha: 32, Avondale: 16, Bratt: 32 }
      - default_action: { allowed: true }
      - handle: 0x200000ad
      - next_table: 2
      - { Bratt.0-15: $adf_f0(0..15), Avondale: $adf_h1(0..15), Kaluaaha: $adf_f1(0..31) }
      - set HillTop.RossFork.Glenmora, Avondale
      - set HillTop.Maddock.Kaluaaha, Kaluaaha
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Boerne, 1
      - set HillTop.RossFork.Suttle, 1
      Sequim(3, 0):
      - default_action: { allowed: true }
      - handle: 0x200000ae
      - next_table: 3
      - {  }
    default_action: Sequim
    idletime:
      row: 0
      bus: 0
      column: [ 0, 1, 2, 3 ]
      precision: 1
      sweep_interval: 7
      notification: enable
      per_flow_enable: false
  action _Nooksack$action_data:
    p4: { name: Nooksack$action }
    row: [ 15, 14, 13, 12, 10, 9, 8, 6, 5, 1 ]
    word: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
    column:
    - [ 4, 5 ]
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - 5
    - [ 4, 5 ]
    - [ 0, 1, 2, 3 ]
    vpns: 
    - [ 0, 1 ]
    - [ 2 ]
    - [ 3 ]
    - [ 4 ]
    - [ 5 ]
    - [ 6 ]
    - [ 7 ]
    - [ 8 ]
    - [ 9, 10 ]
    - [ 11, 12, 13, 14 ]
    home_row:
    - [ 15, 1 ]
    format Milano: { $adf_f0: 0..31, $adf_f1: 32..63 }
    format Biggers: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    action_bus: { 50..51 : $adf_h1, 108..111 : $adf_f1, 48..51 : $adf_f0 }
stage 7 ingress:
  ternary_match _Pineville 1:
    p4: { name: Pineville, size: 4096, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Maddock.Calcasieu: { type: ternary, size: 32, full_size: 32, key_name: "Maddock.Calcasieu" }
      HillTop.RossFork.Ocoee: { type: ternary, size: 8, full_size: 8, key_name: "RossFork.Ocoee" }
      HillTop.Bessie.Peebles: { type: ternary, size: 1, full_size: 1, key_name: "Bessie.Peebles" }
    row: [ 10, 11, 0, 1, 2, 3, 4, 5 ]
    bus: [ 0, 0, 1, 1, 1, 1, 1, 1 ]
    column:
    - 0
    - 0
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    input_xbar:
      ternary group 0: { 0: HillTop.Maddock.Calcasieu, 32: HillTop.RossFork.Ocoee }
      byte group 0: { 5: HillTop.Bessie.Peebles }
    match:
    - { group: 0, byte_group: 0, byte_config: 1, dirtcam: 0x555 }
    hit: [  _Buras ]
    miss:  _Buras
    indirect: _Pineville$tind
  ternary_indirect _Pineville$tind:
    row: 2
    bus: 0
    column: 3
    input_xbar:
      ternary group 0: { 0: HillTop.Maddock.Calcasieu, 32: HillTop.RossFork.Ocoee }
      byte group 0: { 5: HillTop.Bessie.Peebles }
    format: { action: 0..0, immediate: 1..12 }
    action_bus: { 104..107 : immediate(0..11) }
    instruction: _Pineville$tind(action, $DEFAULT)
    actions:
      Hearne(0, 3):
      - p4_param_order: { Moultrie: 12 }
      - default_action: { allowed: true }
      - handle: 0x200000af
      - next_table: 0
      - { Moultrie: immediate(0..11) }
      - set HillTop.RossFork.Montross, Moultrie
      Pinetop(1, 0):
      - default_action: { allowed: true }
      - handle: 0x200000b0
      - next_table: 0
      - {  }
    default_action: Pinetop
  exact_match _Nooksack$st1 0:
    p4: { name: Nooksack, size: 67584, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Ocoee: { type: exact, size: 8, full_size: 8, key_name: "RossFork.Ocoee" }
      HillTop.Maddock.Kaluaaha: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Kaluaaha" }
      Millston.Grays.Chevak: { type: exact, size: 16, full_size: 16, key_name: "Grays.Chevak" }
      HillTop.Maddock.Calcasieu: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Calcasieu" }
      Millston.Grays.Mendocino: { type: exact, size: 16, full_size: 16, key_name: "Grays.Mendocino" }
    row: [ 3, 4, 5, 6, 7 ]
    bus: [ 0, 0, 0, 0, 0 ]
    column:
    - [ 2, 6, 7, 8, 9, 10 ]
    - [ 2, 6, 7, 8, 9, 10 ]
    - [ 2, 6, 7, 8, 9, 10 ]
    - [ 2, 6, 7, 8, 9, 10 ]
    - [ 2, 6, 7, 8, 9, 10 ]
    stash: 
      row: [ 3, 4, 5, 6, 7 ]
      col: [ 2, 2, 2, 2, 2 ]
      unit: [ 0, 0, 0, 0, 0 ]
    ways:
      - [0, 0, 0x1, [7, 2], [6, 2], [5, 2], [4, 2], [3, 2], [7, 6], [6, 6], [5, 6], [4, 6], [3, 6]]
      - [0, 1, 0x2, [7, 7], [6, 7], [5, 7], [4, 7], [3, 7], [7, 8], [6, 8], [5, 8], [4, 8], [3, 8]]
      - [0, 2, 0x0, [7, 9], [6, 9], [5, 9], [4, 9], [3, 9]]
      - [0, 3, 0x0, [7, 10], [6, 10], [5, 10], [4, 10], [3, 10]]
    input_xbar:
      exact group 0: { 0: HillTop.Maddock.Calcasieu, 32: HillTop.Maddock.Kaluaaha, 64: Millston.Grays.Chevak, 80: Millston.Grays.Mendocino, 96: HillTop.RossFork.Ocoee }
      hash 0:
        0..9: random(HillTop.Maddock.Calcasieu, HillTop.Maddock.Kaluaaha)
        40: random(HillTop.Maddock.Calcasieu, HillTop.Maddock.Kaluaaha)
        10..19: random(HillTop.Maddock.Calcasieu, HillTop.Maddock.Kaluaaha)
        41: random(HillTop.Maddock.Calcasieu, HillTop.Maddock.Kaluaaha)
        20..29: random(HillTop.Maddock.Calcasieu, HillTop.Maddock.Kaluaaha)
        30..39: random(HillTop.Maddock.Calcasieu, HillTop.Maddock.Kaluaaha)
      hash 1:
        0..1: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ Millston.Grays.Chevak(0..1)
        2..9: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee
        40: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino)
        11..12: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ Millston.Grays.Chevak(0..1)
        13..19: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(0..6)
        10: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(7)
        41: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino)
        22..23: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ Millston.Grays.Chevak(0..1)
        24..29: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(0..5)
        20..21: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(6..7)
        33..34: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ Millston.Grays.Chevak(0..1)
        35..39: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(0..4)
        30..32: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(5..7)
      hash group 0:
        table: [0, 1]
        seed: 0xe86e73c23b
    format: { action(0): 2..3, version(0): 4..7, match(0): [98..103, 8..95 ], action(1): 0..1, version(1): 244..247, match(1): [506..511, 104..127, 224..239, 248..255, 352..367, 376..383, 480..495 ], action(2): 128..129, version(2): 240..243, match(2): 130..223, action(3): 256..257, version(3): 368..371, match(3): 258..351, action(4): 384..385, version(4): 496..499, match(4): 386..479, action(5): 512..513, version(5): 624..627, match(5): 514..607 }
    match: [ Millston.Grays.Chevak(2..7), Millston.Grays.Chevak(8..15), Millston.Grays.Mendocino(0..7), Millston.Grays.Mendocino(8..15), HillTop.Maddock.Calcasieu(0..7), HillTop.Maddock.Calcasieu(8..15), HillTop.Maddock.Calcasieu(16..23), HillTop.Maddock.Calcasieu(24..31), HillTop.Maddock.Kaluaaha(0..7), HillTop.Maddock.Kaluaaha(8..15), HillTop.Maddock.Kaluaaha(16..23), HillTop.Maddock.Kaluaaha(24..31) ]
    hit: [  _Buras,  _Buras,  _Pineville ]
    miss:  _Buras
    action: _Nooksack$st1$action_data($DIRECT, $DEFAULT)
    instruction: _Nooksack$st1(action, $DEFAULT)
    actions:
      Milano(0, 1):
      - p4_param_order: { Kaluaaha: 32, Bratt: 32 }
      - default_action: { allowed: true }
      - handle: 0x200000ac
      - next_table: 0
      - { Kaluaaha: $adf_f0(0..31), Bratt.0-15: $adf_f1(0..15) }
      - set HillTop.Maddock.Kaluaaha, Kaluaaha
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Boerne, 1
      - set HillTop.RossFork.Suttle, 1
      Biggers(1, 2):
      - p4_param_order: { Kaluaaha: 32, Avondale: 16, Bratt: 32 }
      - default_action: { allowed: true }
      - handle: 0x200000ad
      - next_table: 1
      - { Bratt.0-15: $adf_f0(0..15), Avondale: $adf_h1(0..15), Kaluaaha: $adf_f1(0..31) }
      - set HillTop.RossFork.Glenmora, Avondale
      - set HillTop.Maddock.Kaluaaha, Kaluaaha
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Boerne, 1
      - set HillTop.RossFork.Suttle, 1
      Sequim(2, 0):
      - default_action: { allowed: true }
      - handle: 0x200000ae
      - next_table: 2
      - {  }
    default_action: Sequim
    idletime:
      row: 4
      bus: 0
      column: [ 0, 1, 2, 3, 4 ]
      precision: 1
      sweep_interval: 7
      notification: enable
      per_flow_enable: false
  action _Nooksack$st1$action_data:
    p4: { name: Nooksack$action }
    row: [ 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 ]
    word: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
    column:
    - 5
    - 5
    - 5
    - [ 4, 5 ]
    - 5
    - [ 4, 5 ]
    - 5
    - [ 3, 4, 5 ]
    - 5
    - [ 3, 4, 5 ]
    - 5
    - 4
    vpns: 
    - [ 0 ]
    - [ 1 ]
    - [ 2 ]
    - [ 3, 4 ]
    - [ 5 ]
    - [ 6, 7 ]
    - [ 8 ]
    - [ 9, 10, 11 ]
    - [ 12 ]
    - [ 13, 14, 15 ]
    - [ 16 ]
    - [ 17 ]
    home_row:
    - 15
    format Milano: { $adf_f0: 0..31, $adf_f1: 32..63 }
    format Biggers: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    action_bus: { 34..35 : $adf_h1, 100..103 : $adf_f1, 32..35 : $adf_f0 }
  hash_action _Buras 2:
    p4: { name: Buras, size: 256, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Bessie.Miranda: { type: exact, size: 8, full_size: 8, key_name: "Bessie.Miranda" }
    row: 3
    bus: 1
    hash_dist:
      0: { hash: 1, mask: 0xff, shift: 5 }
    input_xbar:
      exact group 1: { 4: HillTop.Bessie.Miranda }
      hash 2:
        0..7: stripe(HillTop.Bessie.Miranda)
      hash group 1:
        table: [2]
        seed: 0x0
    gateway:
      name: _Buras-gateway
      row: 2
      bus: 0
      unit: 1
      0x0:  _Mabana
      miss:  _Mabana
      condition: 
        expression: "true(always hit)"
        true:  _Mabana
        false:  _Mabana
    next: []
    action: _Buras$action_data(hash_dist 0, $DEFAULT)
    instruction: _Buras($DEFAULT, $DEFAULT)
    actions:
      Eudora(0, 4):
      - p4_param_order: { Kaluaaha: 16, Calcasieu: 16, Chevak: 16, Mendocino: 16, LasVegas: 8, PineCity: 6, Exton: 8, Noyes: 8, Peebles: 1 }
      - default_action: { allowed: true }
      - handle: 0x2000005f
      - next_table: 0
      - { Peebles: $adf_b0(5..5), Noyes: $adf_b1(0..7), LasVegas: $adf_b2(0..7), Exton: $adf_b3(0..7), Chevak: $adf_h2(0..15), Mendocino: $adf_h3(0..15), Calcasieu: $adf_h4(0..15), Kaluaaha: $adf_h5(0..15), PineCity: $adf_h6(6..11) }
      - and HillTop.Savery.Kaluaaha, HillTop.Bessie.Kaluaaha, Kaluaaha
      - and HillTop.Savery.Calcasieu, HillTop.Bessie.Calcasieu, Calcasieu
      - and HillTop.Savery.Chevak, HillTop.Bessie.Chevak, Chevak
      - and HillTop.Savery.Mendocino, HillTop.Bessie.Mendocino, Mendocino
      - and HillTop.Savery.LasVegas, HillTop.Bessie.LasVegas, LasVegas
      - and HillTop.Savery.Exton, HillTop.Bessie.Exton, Exton
      - and HillTop.Savery.Noyes, HillTop.Bessie.Noyes, Noyes
      - and B10, Peebles, B9
      - and H85, PineCity, H90
    default_action: Eudora
    default_action_parameters:
      Kaluaaha: "0xffff"
      Calcasieu: "0xffff"
      Chevak: "0xffff"
      Mendocino: "0xffff"
      LasVegas: "0xff"
      PineCity: "0x3f"
      Exton: "0xff"
      Noyes: "0xff"
      Peebles: "0x1"
  action _Buras$action_data:
    p4: { name: Buras$action, how_referenced: direct }
    row: 10
    column: 3
    vpns: [ 0 ]
    home_row:
    - 10
    format Eudora: { $adf_b0: 0..7, $adf_b1: 8..15, $adf_b2: 16..23, $adf_b3: 24..31, $adf_h2: 32..47, $adf_h3: 48..63, $adf_h4: 64..79, $adf_h5: 80..95, $adf_h6: 96..111 }
    action_bus: { 16 : $adf_b0, 17 : $adf_b1, 18 : $adf_b2, 19 : $adf_b3, 64..65 : $adf_h4, 66..67 : $adf_h5, 68..69 : $adf_h6, 36..37 : $adf_h2, 38..39 : $adf_h3 }
  ternary_match _Mabana 3:
    p4: { name: Mabana, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Naruna: { type: exact, size: 3, full_size: 3, key_name: "RossFork.Naruna" }
      HillTop.RossFork.Joslin: { type: exact, size: 3, full_size: 3, key_name: "RossFork.Joslin" }
      Millston.GlenAvon.$valid: { type: exact, size: 1, full_size: 1, key_name: "GlenAvon" }
      Millston.GlenAvon.Rexville: { type: ternary, size: 14, full_size: 16, key_name: "GlenAvon.Rexville" }
      Millston.Maumee.Norwood: { type: ternary, size: 14, full_size: 16, key_name: "Maumee.Norwood" }
    row: [ 8, 9 ]
    bus: [ 0, 0 ]
    column:
    - 0
    - 0
    input_xbar:
      ternary group 1: { 5: HillTop.RossFork.Joslin, 8: Millston.GlenAvon.Rexville(8..13), 16: Millston.GlenAvon.Rexville(0..7), 29: HillTop.RossFork.Naruna.2-2, 32: Millston.Maumee.Norwood.8-15(0..5) }
      ternary group 2: { 0: Millston.Maumee.Norwood.0-7, 12: Millston.GlenAvon.$valid, 19: HillTop.RossFork.Naruna.0-1 }
    match:
    - { group: 1, dirtcam: 0x155 }
    - { group: 2, dirtcam: 0x15 }
    hit: [  _Somis ]
    miss:  _Somis
    indirect: _Mabana$tind
  ternary_indirect _Mabana$tind:
    row: 1
    bus: 0
    column: 3
    input_xbar:
      ternary group 1: { 5: HillTop.RossFork.Joslin, 8: Millston.GlenAvon.Rexville(8..13), 16: Millston.GlenAvon.Rexville(0..7), 29: HillTop.RossFork.Naruna.2-2, 32: Millston.Maumee.Norwood.8-15(0..5) }
      ternary group 2: { 0: Millston.Maumee.Norwood.0-7, 12: Millston.GlenAvon.$valid, 19: HillTop.RossFork.Naruna.0-1 }
    format: { action: 0..0, immediate: 1..2 }
    action_bus: { 40..41 : immediate(0..1) }
    instruction: _Mabana$tind(action, $DEFAULT)
    actions:
      Sneads(0, 5):
      - p4_param_order: { Bradner: 2 }
      - default_action: { allowed: true }
      - handle: 0x20000060
      - next_table: 0
      - { Bradner: immediate(0..1) }
      - set HillTop.RossFork.Bradner, Bradner
      Hemlock(1, 6):
      - default_action: { allowed: true }
      - handle: 0x20000061
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Ravena, 1
    default_action: Hemlock
  ternary_match _Somis 4:
    p4: { name: Somis, size: 1024, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Lamona.Fristoe: { type: ternary, size: 14, full_size: 14, key_name: "Lamona.Fristoe" }
      HillTop.Tiburon.Arnold: { type: ternary, size: 9, full_size: 9, key_name: "Tiburon.Arnold" }
      HillTop.Edwards.PineCity: { type: ternary, size: 6, full_size: 6, key_name: "Edwards.PineCity" }
      HillTop.Bessie.Heuvelton: { type: ternary, size: 16, full_size: 16, key_name: "Bessie.Heuvelton" }
      HillTop.Bessie.Chavies: { type: ternary, size: 16, full_size: 16, key_name: "Bessie.Chavies" }
      HillTop.RossFork.Ocoee: { type: ternary, size: 8, full_size: 8, key_name: "RossFork.Ocoee" }
      HillTop.RossFork.Exton: { type: ternary, size: 8, full_size: 8, key_name: "RossFork.Exton" }
      Millston.Grays.Chevak: { type: ternary, size: 16, full_size: 16, key_name: "Grays.Chevak" }
      Millston.Grays.Mendocino: { type: ternary, size: 16, full_size: 16, key_name: "Grays.Mendocino" }
      Millston.Grays.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Grays" }
      HillTop.Bessie.Peebles: { type: ternary, size: 1, full_size: 1, key_name: "Bessie.Peebles" }
      HillTop.Bessie.Noyes: { type: ternary, size: 8, full_size: 8, key_name: "Bessie.Noyes" }
      HillTop.RossFork.Naruna: { type: ternary, size: 3, full_size: 3, key_name: "RossFork.Naruna" }
    row: [ 0, 1, 2, 3, 4, 5, 6, 7 ]
    bus: [ 0, 0, 0, 0, 0, 0, 0, 0 ]
    column:
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    input_xbar:
      ternary group 3: { 0: HillTop.Bessie.Heuvelton(6..13), 8: HillTop.Lamona.Fristoe(8..13), 16: Millston.Grays.Chevak(8..15), 26: HillTop.Bessie.Heuvelton(0..5), 32: HillTop.Lamona.Fristoe(0..7) }
      ternary group 4: { 0: Millston.Grays.Chevak(0..7), 8: Millston.Grays.Mendocino(8..15), 16: Millston.Grays.Mendocino(0..7), 24: HillTop.Tiburon.Arnold(8), 32: HillTop.Tiburon.Arnold(0..7) }
      ternary group 5: { 0: HillTop.Bessie.Chavies, 16: HillTop.Edwards.PineCity, 29: HillTop.RossFork.Naruna.2-2, 35: Millston.Grays.$valid }
      ternary group 6: { 0: HillTop.Bessie.Noyes, 8: HillTop.RossFork.Ocoee, 16: HillTop.RossFork.Exton, 27: HillTop.RossFork.Naruna.0-1 }
      byte group 0: { 5: HillTop.Bessie.Peebles }
      byte group 3: { 0: HillTop.Bessie.Heuvelton(14..15) }
    match:
    - { group: 3, byte_group: 0, byte_config: 1, dirtcam: 0x555 }
    - { group: 4, dirtcam: 0x155 }
    - { group: 5, byte_group: 3, byte_config: 0, dirtcam: 0x555 }
    - { group: 6, dirtcam: 0x55 }
    hit: [  _Sanborn ]
    miss:  _Sanborn
    indirect: _Somis$tind
  ternary_indirect _Somis$tind:
    row: 0
    bus: 0
    column: 3
    input_xbar:
      ternary group 3: { 0: HillTop.Bessie.Heuvelton(6..13), 8: HillTop.Lamona.Fristoe(8..13), 16: Millston.Grays.Chevak(8..15), 26: HillTop.Bessie.Heuvelton(0..5), 32: HillTop.Lamona.Fristoe(0..7) }
      ternary group 4: { 0: Millston.Grays.Chevak(0..7), 8: Millston.Grays.Mendocino(8..15), 16: Millston.Grays.Mendocino(0..7), 24: HillTop.Tiburon.Arnold(8), 32: HillTop.Tiburon.Arnold(0..7) }
      ternary group 5: { 0: HillTop.Bessie.Chavies, 16: HillTop.Edwards.PineCity, 29: HillTop.RossFork.Naruna.2-2, 35: Millston.Grays.$valid }
      ternary group 6: { 0: HillTop.Bessie.Noyes, 8: HillTop.RossFork.Ocoee, 16: HillTop.RossFork.Exton, 27: HillTop.RossFork.Naruna.0-1 }
      byte group 0: { 5: HillTop.Bessie.Peebles }
      byte group 3: { 0: HillTop.Bessie.Heuvelton(14..15) }
    format: { action: 0..0, immediate: 1..10 }
    action_bus: { 44..45 : immediate(0..9) }
    instruction: _Somis$tind(action, $DEFAULT)
    actions:
      Level(0, 7):
      - default_action: { allowed: true }
      - handle: 0x200000a4
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Level, 1
      Tullytown(1, 8):
      - p4_param_order: { Heaton: 10 }
      - default_action: { allowed: true }
      - handle: 0x200000a5
      - next_table: 0
      - { Heaton: immediate(0..9) }
      - set HillTop.Minturn.Grassflat, Heaton
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x200000a6
      - next_table: 0
      - {  }
    default_only_action: NoAction
  exact_match _Sanborn 5:
    p4: { name: Sanborn, size: 16384, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Adona: { type: exact, size: 24, full_size: 24, key_name: "Wisdom.Adona" }
      HillTop.Wisdom.Connell: { type: exact, size: 24, full_size: 24, key_name: "Wisdom.Connell" }
      HillTop.Wisdom.Nenana: { type: exact, size: 12, full_size: 12, key_name: "Wisdom.Nenana" }
    row: [ 2, 1 ]
    bus: [ 0, 0 ]
    column:
    - [ 2, 6, 7, 8, 9, 10 ]
    - [ 2, 6 ]
    stash: 
      row: [ 2 ]
      col: [ 2 ]
      unit: [ 0 ]
    ways:
      - [2, 0, 0x1, [2, 2], [2, 6]]
      - [2, 1, 0x2, [2, 7], [2, 8]]
      - [2, 2, 0x4, [2, 9], [2, 10]]
      - [2, 3, 0x8, [1, 2], [1, 6]]
    input_xbar:
      exact group 2: { 0: HillTop.Wisdom.Connell.16-23, 8: HillTop.Wisdom.Adona, 32: HillTop.Wisdom.Nenana, 48: HillTop.Wisdom.Connell.0-15 }
      hash 4:
        0..6: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(0..6)
        7..9: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(8..10)
        40: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(11)
        11..17: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(0..6)
        18..19: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(8..9)
        10: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(11)
        41: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(10)
        22..28: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(0..6)
        29: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(8)
        20..21: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(10..11)
        42: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(9)
        33..39: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(0..6)
        30..32: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(9..11)
        43: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(8)
      hash group 2:
        table: [4]
        seed: 0x158d36c8b1b
    format: { action(0): 0..0, immediate(0): 2..3, version(0): 112..115, match(0): [87..87, 32..79 ], action(1): 1..1, immediate(1): 4..5, version(1): 116..119, match(1): [7..7, 88..111, 8..31 ] }
    match: [ HillTop.Wisdom.Nenana(7), HillTop.Wisdom.Connell.0-15(0..7), HillTop.Wisdom.Connell.0-15(8..15), HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona(0..7), HillTop.Wisdom.Adona(8..15), HillTop.Wisdom.Adona(16..23) ]
    gateway:
      name: cond-25
      input_xbar:
        exact group 0: { 110: HillTop.RossFork.Tenino }
      row: 2
      bus: 1
      unit: 0
      match: { 6: HillTop.RossFork.Tenino }
      0b*1: run_table
      miss:  _Uvalde
      condition: 
        expression: "(HillTop.RossFork.Tenino == 1)"
        true:  _Sanborn
        false:  _Uvalde
    hit: [  _Uvalde ]
    miss:  _Uvalde
    action_bus: { 48..49 : immediate(0..1) }
    action: _Sanborn$action_data($DIRECT, $DEFAULT)
    instruction: _Sanborn(action, $DEFAULT)
    actions:
      CassCity(1, 9):
      - p4_param_order: { Townville: 16, Monahans: 1, Pinole: 1 }
      - default_action: { allowed: true }
      - handle: 0x200000b1
      - next_table: 0
      - { Townville: $adf_h0(0..15), Pinole: immediate(0..0), Monahans: immediate(1..1) }
      - set HillTop.Moose.Townville, Townville
      - set HillTop.Moose.Monahans, Monahans
      - set HillTop.Moose.Pinole, Pinole
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x200000b2
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action _Sanborn$action_data:
    p4: { name: Sanborn$action }
    row: 14
    column: [ 3, 4 ]
    vpns: [ 0, 1 ]
    home_row:
    - 14
    format CassCity: { $adf_h0: 0..15 }
    action_bus: { 52..53 : $adf_h0 }
  ternary_match _Uvalde 6:
    p4: { name: Uvalde, size: 1, disable_atomic_modify : true }
    gateway:
      name: cond-26
      input_xbar:
        exact group 1: { 64: HillTop.Naubinway.Bonduel }
      row: 0
      bus: 1
      unit: 1
      match: { 0: HillTop.Naubinway.Bonduel(0..7), 8: HillTop.Naubinway.Bonduel(8..13) }
      0b**00000000000000:  Sodaville_0
      miss: run_table
      condition: 
        expression: "(HillTop.Naubinway.Bonduel != 0)"
        true:  _Uvalde
        false:  Sodaville_0
    hit: [  _Bonduel ]
    miss:  _Bonduel
    indirect: _Uvalde$tind
  ternary_indirect _Uvalde$tind:
    row: 2
    bus: 1
    format: { action: 0..0 }
    instruction: _Uvalde$tind(action, $DEFAULT)
    actions:
      Uniopolis(1, 10):
      - default_action: { allowed: true }
      - handle: 0x200000b5
      - next_table: 0
      - set HillTop.RossFork.Uvalde, HillTop.RossFork.Kapalua
    default_action: Uniopolis
  hash_action _Bonduel 7:
    p4: { name: Bonduel, size: 16384, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Naubinway.Bonduel: { type: exact, size: 14, full_size: 14, key_name: "Naubinway.Bonduel" }
    row: 0
    bus: 1
    hash_dist:
      1: { hash: 1, mask: 0x3fff, shift: 4 }
    input_xbar:
      exact group 1: { 64: HillTop.Naubinway.Bonduel }
      hash 3:
        16..29: stripe(HillTop.Naubinway.Bonduel)
      hash group 1:
        table: [3]
        seed: 0x0
    gateway:
      name: cond-27
      input_xbar:
        exact group 2: { 68: HillTop.Naubinway.Bonduel(4..13) }
      row: 0
      bus: 0
      unit: 0
      payload: 0x1
      format: { action: 0..0 }
      match: { 4: HillTop.Naubinway.Bonduel(4..7), 8: HillTop.Naubinway.Bonduel(8..13) }
      0b**0000000000: run_table
      miss:  _GunnCity
      condition: 
        expression: "(HillTop.Naubinway.Bonduel & 16368 == 0)"
        true:  _Kempton
        false:  _GunnCity
    next:  _Kempton
    action: _Bonduel$action_data(hash_dist 1, $DEFAULT)
    instruction: _Bonduel(action, $DEFAULT)
    actions:
      Ossining(1, 11):
      - p4_param_order: { Adona: 24, Connell: 24, Nason: 12 }
      - default_action: { allowed: true }
      - handle: 0x200000b9
      - next_table: 0
      - { Nason: $adf_h0(0..11), Connell.0-15: $adf_h1(0..15), $data0: $adf_f1(0..31), Connell.16-23: $data0(0..7), Adona: $data0(8..31) }
      - set HillTop.Wisdom.Connell.0-15, Connell.0-15
      - set HillTop.Wisdom.Nenana, Nason
      - set W13, $data0
    default_action: Ossining
    default_action_parameters:
      Adona: "0x0"
      Connell: "0x0"
      Nason: "0x0"
  action _Bonduel$action_data:
    p4: { name: Bonduel$action, how_referenced: direct }
    row: [ 4, 3, 2, 1 ]
    word: [ 0, 0, 0, 0 ]
    column:
    - 5
    - [ 2, 3, 4, 5 ]
    - [ 4, 5 ]
    - 0
    vpns: 
    - [ 0 ]
    - [ 1, 2, 3, 4 ]
    - [ 5, 6 ]
    - [ 7 ]
    home_row:
    - 4
    format Ossining: { $adf_h0: 0..15, $adf_h1: 16..31, $adf_f1: 32..63 }
    action_bus: { 56..57 : $adf_h0, 58..59 : $adf_h1, 116..119 : $adf_f1 }
  exact_match _Kempton 8:
    p4: { name: Kempton, size: 16, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Naubinway.Bonduel: { type: exact, size: 4, full_size: 14, key_name: "Naubinway.Bonduel" }
    row: 0
    bus: 0
    column: 2
    stash: 
      row: [ 0 ]
      col: [ 2 ]
      unit: [ 0 ]
    ways:
      - [3, 0, 0x0, [0, 2]]
    input_xbar:
      exact group 2: { 64: HillTop.Naubinway.Bonduel(0..3) }
      hash 5:
        0..3: HillTop.Naubinway.Bonduel(0..3)
      hash group 3:
        table: [5]
        seed: 0x0
    format: { immediate(0): 0..7, version(0): 112..115 }
    hit: [  Sodaville_0 ]
    miss:  Sodaville_0
    action_bus: { 0 : immediate(0..7) }
    instruction: _Kempton($DEFAULT, $DEFAULT)
    actions:
      Moosic(0, 12):
      - p4_param_order: { Blencoe: 8 }
      - default_action: { allowed: true }
      - handle: 0x200000b6
      - next_table: 0
      - { Blencoe: immediate(0..7) }
      - set HillTop.Wisdom.Havana, 1
      - set HillTop.Wisdom.Blencoe, Blencoe
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x200000b7
      - next_table: 0
      - {  }
    default_only_action: NoAction
  hash_action _GunnCity 9:
    p4: { name: GunnCity, size: 16384, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Naubinway.Bonduel: { type: exact, size: 14, full_size: 14, key_name: "Naubinway.Bonduel" }
    row: 2
    bus: 1
    hash_dist:
      2: { hash: 1, mask: 0x3fff, shift: 3 }
    input_xbar:
      exact group 1: { 64: HillTop.Naubinway.Bonduel }
      hash 3:
        32..45: stripe(HillTop.Naubinway.Bonduel)
      hash group 1:
        table: [3]
        seed: 0x0
    gateway:
      name: _GunnCity-gateway
      row: 1
      bus: 0
      unit: 1
      0x0:  Sodaville_0
      miss:  Sodaville_0
      condition: 
        expression: "true(always hit)"
        true:  Sodaville_0
        false:  Sodaville_0
    next: []
    action: _GunnCity$action_data(hash_dist 2, $DEFAULT)
    instruction: _GunnCity($DEFAULT, $DEFAULT)
    actions:
      Marquand(0, 13):
      - p4_param_order: { Morstein: 20, Placedo: 10, TroutRun: 2 }
      - default_action: { allowed: true }
      - handle: 0x200000b8
      - next_table: 0
      - { Morstein: $adf_f0(0..19), TroutRun: $adf_h1(4..5) }
      - set HillTop.Wisdom.Piqua, 1
      - set HillTop.Wisdom.Morstein, Morstein
      - set HillTop.RossFork.TroutRun, TroutRun
    default_action: Marquand
    default_action_parameters:
      Morstein: "0x1ff"
      Placedo: "0x0"
      TroutRun: "0x0"
  action _GunnCity$action_data:
    p4: { name: GunnCity$action, how_referenced: direct }
    row: 1
    column: [ 1, 2, 3, 4 ]
    vpns: [ 0, 1, 2, 3 ]
    home_row:
    - 1
    format Marquand: { $adf_f0: 0..31, $adf_h1: 16..31 }
    action_bus: { 62..63 : $adf_h1, 60..63 : $adf_f0 }
  exact_match Sodaville_0 10:
    p4: { name: Sodaville, size: 1024, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Onycha: { type: exact, size: 3, full_size: 3, key_name: "Wisdom.Onycha" }
      HillTop.RossFork.Ocoee: { type: exact, size: 1, full_size: 8, key_name: "RossFork.Ocoee", start_bit: 7 }
      Millston.GlenAvon.$valid: { type: exact, size: 1, full_size: 1, key_name: "GlenAvon" }
      Millston.Maumee.$valid: { type: exact, size: 1, full_size: 1, key_name: "Maumee" }
    row: 1
    bus: 1
    column: 7
    stash: 
      row: [ 1 ]
      col: [ 7 ]
      unit: [ 0 ]
    ways:
      - [3, 1, 0x0, [1, 7]]
    input_xbar:
      exact group 2: { 81: HillTop.Wisdom.Onycha, 90: Millston.Maumee.$valid, 103: HillTop.RossFork.Ocoee(7), 108: Millston.GlenAvon.$valid }
      hash 5:
        10..12: HillTop.Wisdom.Onycha
        13: Millston.Maumee.$valid
        14: HillTop.RossFork.Ocoee(7)
        15: Millston.GlenAvon.$valid
      hash group 3:
        table: [5]
        seed: 0x0
    format: { action(0): 0..1, immediate(0): 2..17, version(0): 112..115 }
    hit: [  _Weissert ]
    miss:  _Weissert
    action_bus: { 20 : immediate(0..7), 21 : immediate(8..15) }
    instruction: Sodaville_0(action, $DEFAULT)
    actions:
      Boyes(0, 14):
      - p4_param_order: { Renfroe: 1 }
      - default_action: { allowed: true }
      - handle: 0x200000e3
      - next_table: 0
      - { Renfroe: immediate(0..0), $constant0: immediate(8..15), $constant0: 128 }
      - set HillTop.Wisdom.Dyess, Renfroe
      - or Millston.GlenAvon.Ocoee, Millston.GlenAvon.Ocoee, $constant0
      McCallum(1, 16):
      - p4_param_order: { Renfroe: 1 }
      - default_action: { allowed: true }
      - handle: 0x200000e4
      - next_table: 0
      - { Renfroe: immediate(0..0), $constant0: immediate(8..15), $constant0: 128 }
      - set HillTop.Wisdom.Dyess, Renfroe
      - or Millston.Maumee.Dassel, Millston.Maumee.Dassel, $constant0
      Waucousta(2, 15):
      - default_action: { allowed: true }
      - handle: 0x200000e5
      - next_table: 0
      - {  }
      - set Millston.GlenAvon.$valid, 0
      - set Millston.Wondervu$0.$valid, 0
      - set Millston.Calabash.McCaulley.0-7, HillTop.RossFork.McCaulley.0-7
      - set Millston.Calabash.McCaulley.8-15, HillTop.RossFork.McCaulley.8-15
      Selvin(3, 17):
      - default_action: { allowed: true }
      - handle: 0x200000e6
      - next_table: 0
      - {  }
      - set Millston.Maumee.$valid, 0
      - set Millston.Wondervu$0.$valid, 0
      - set Millston.Calabash.McCaulley.0-7, HillTop.RossFork.McCaulley.0-7
      - set Millston.Calabash.McCaulley.8-15, HillTop.RossFork.McCaulley.8-15
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x200000e7
      - next_table: 0
      - {  }
    default_only_action: NoAction
  ternary_match _Weissert 11:
    p4: { name: Weissert, size: 306, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Edwards.AquaPark: { type: ternary, size: 2, full_size: 2, key_name: "Edwards.AquaPark" }
      HillTop.Edwards.McGrady: { type: ternary, size: 3, full_size: 3, key_name: "Edwards.McGrady" }
      HillTop.Edwards.RedElm: { type: ternary, size: 3, full_size: 3, key_name: "Edwards.RedElm" }
      HillTop.Edwards.PineCity: { type: ternary, size: 6, full_size: 6, key_name: "Edwards.PineCity" }
      HillTop.Edwards.Satolah: { type: ternary, size: 1, full_size: 1, key_name: "Edwards.Satolah" }
      HillTop.Wisdom.Onycha: { type: ternary, size: 3, full_size: 3, key_name: "Wisdom.Onycha" }
      Millston.Hayfield.AquaPark: { type: ternary, size: 2, full_size: 2, key_name: "Hayfield.AquaPark" }
      Millston.Hayfield.Vichy: { type: ternary, size: 3, full_size: 3, key_name: "Hayfield.Vichy" }
    row: 6
    bus: 1
    column: 1
    indirect_bus: 3
    input_xbar:
      ternary group 7: { 1: HillTop.Wisdom.Onycha, 8: HillTop.Edwards.PineCity, 18: HillTop.Edwards.McGrady, 21: HillTop.Edwards.AquaPark, 25: HillTop.Edwards.Satolah, 35: Millston.Hayfield.Vichy, 38: Millston.Hayfield.AquaPark }
      byte group 1: { 5: HillTop.Edwards.RedElm }
    match:
    - { group: 7, byte_group: 1, byte_config: 1, dirtcam: 0x555 }
    hit: [  _Barnsboro ]
    miss:  _Barnsboro
    action: _Weissert$action_data($DIRECT, $DEFAULT)
    instruction: _Weissert($DEFAULT, $DEFAULT)
    actions:
      Anawalt(0, 18):
      - p4_param_order: { Vichy: 3, Asharoken: 5 }
      - default_action: { allowed: true }
      - handle: 0x200000a3
      - next_table: 0
      - { Asharoken: $adf_b0(0..4), Vichy: $adf_b0(5..7) }
      - set HillTop.Freeny.Dunedin, Vichy
      - set ig_intr_md_for_tm.qid, Asharoken
    default_action: Anawalt
    default_action_parameters:
      Vichy: "0x0"
      Asharoken: "0x0"
  action _Weissert$action_data:
    p4: { name: Weissert$action }
    row: 12
    column: 3
    vpns: [ 0 ]
    home_row:
    - 12
    format Anawalt: { $adf_b0: 0..7 }
    action_bus: { 2 : $adf_b0 }
  ternary_match _Barnsboro 12:
    p4: { name: Barnsboro, size: 1, disable_atomic_modify : true }
    gateway:
      name: cond-40
      input_xbar:
        exact group 2: { 105: Millston.Hayfield.$valid }
      row: 1
      bus: 1
      unit: 0
      match: { 1: Millston.Hayfield.$valid }
      0b******0: run_table
      miss:  _Lowemont
      condition: 
        expression: "(Millston.Hayfield.$valid == 1 == 0)"
        true:  _Barnsboro
        false:  _Lowemont
    hit: [  _Standard ]
    miss:  _Standard
    indirect: _Barnsboro$tind
  ternary_indirect _Barnsboro$tind:
    row: 3
    bus: 0
    format: { action: 0..0, immediate: 1..2 }
    action_bus: { 4 : immediate(0..1) }
    instruction: _Barnsboro$tind(action, $DEFAULT)
    actions:
      NorthRim(1, 19):
      - p4_param_order: { Oilmont: 1, Tornillo: 1 }
      - default_action: { allowed: true }
      - handle: 0x200000f3
      - next_table: 0
      - { $data0: immediate(0..1), Oilmont: $data0(0..0), Tornillo: $data0(1..1) }
      - set B7(4..5), $data0
    default_action: NorthRim
    default_action_parameters:
      Oilmont: "0x0"
      Tornillo: "0x0"
stage 8 ingress:
  exact_match _Standard 0:
    p4: { name: Standard, size: 1024, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Edwards.AquaPark: { type: exact, size: 2, full_size: 2, key_name: "Edwards.AquaPark" }
      HillTop.Edwards.Oilmont: { type: exact, size: 1, full_size: 1, key_name: "Edwards.Oilmont" }
      HillTop.Edwards.Tornillo: { type: exact, size: 1, full_size: 1, key_name: "Edwards.Tornillo" }
      HillTop.Freeny.Dunedin: { type: exact, size: 3, full_size: 3, key_name: "Freeny.Dunedin" }
      HillTop.Wisdom.Onycha: { type: exact, size: 3, full_size: 3, key_name: "Wisdom.Onycha" }
    row: 5
    bus: 1
    column: 7
    stash: 
      row: [ 5 ]
      col: [ 7 ]
      unit: [ 0 ]
    ways:
      - [0, 0, 0x0, [5, 7]]
    input_xbar:
      exact group 0: { 1: HillTop.Wisdom.Onycha, 13: HillTop.Edwards.AquaPark, 20: HillTop.Edwards.Oilmont, 21: HillTop.Edwards.Tornillo, 24: HillTop.Freeny.Dunedin }
      hash 0:
        0..2: HillTop.Wisdom.Onycha
        3..4: HillTop.Edwards.AquaPark
        5: HillTop.Edwards.Oilmont
        6: HillTop.Edwards.Tornillo
        7..9: HillTop.Freeny.Dunedin
      hash group 0:
        table: [0]
        seed: 0x0
    format: { action(0): 0..1, immediate(0): 2..10, version(0): 112..115 }
    hit: [  _Lowemont ]
    miss:  _Lowemont
    action_bus: { 32..33 : immediate(0..8) }
    instruction: _Standard(action, $DEFAULT)
    actions:
      Wardville(0, 1):
      - p4_param_order: { PineCity: 6 }
      - default_action: { allowed: true }
      - handle: 0x200000f4
      - next_table: 0
      - { PineCity: immediate(0..5) }
      - set HillTop.Edwards.PineCity, PineCity
      Oregon(1, 2):
      - p4_param_order: { RedElm: 3 }
      - default_action: { allowed: true }
      - handle: 0x200000f5
      - next_table: 0
      - { RedElm: immediate(0..2) }
      - set HillTop.Edwards.RedElm, RedElm
      Ranburne(2, 4):
      - p4_param_order: { RedElm: 3, PineCity: 6 }
      - default_action: { allowed: true }
      - handle: 0x200000f6
      - next_table: 0
      - { PineCity: immediate(0..5), RedElm: immediate(6..8) }
      - set HillTop.Edwards.RedElm, RedElm
      - set HillTop.Edwards.PineCity, PineCity
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x200000f7
      - next_table: 0
      - {  }
    default_only_action: NoAction
  exact_match _Lowemont 1:
    p4: { name: Lowemont, size: 16384, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Maddock.Kaluaaha: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Kaluaaha" }
      HillTop.Salix.Hueytown: { type: exact, size: 16, full_size: 16, key_name: "Salix.Hueytown" }
    row: 0
    bus: 0
    column: [ 2, 3, 4, 6, 7, 8, 9, 10 ]
    stash: 
      row: [ 0 ]
      col: [ 2 ]
      unit: [ 0 ]
    ways:
      - [0, 1, 0x3, [0, 2], [0, 3], [0, 4], [0, 6]]
      - [0, 2, 0xc, [0, 7], [0, 8], [0, 9], [0, 10]]
    input_xbar:
      exact group 0: { 32: HillTop.Maddock.Kaluaaha, 64: HillTop.Salix.Hueytown }
      hash 0:
        10..19: random(HillTop.Maddock.Kaluaaha)
        40..41: random(HillTop.Maddock.Kaluaaha)
        20..29: random(HillTop.Maddock.Kaluaaha)
        42..43: random(HillTop.Maddock.Kaluaaha)
      hash 1:
        10..17: random(HillTop.Salix.Hueytown(12..15)) ^ HillTop.Salix.Hueytown(0..7)
        18..19: random(HillTop.Salix.Hueytown(12..15)) ^ HillTop.Salix.Hueytown(8..9)
        40..41: random(HillTop.Salix.Hueytown(12..15)) ^ HillTop.Salix.Hueytown(10..11)
        21..28: random(HillTop.Salix.Hueytown(12..15)) ^ HillTop.Salix.Hueytown(0..7)
        29: random(HillTop.Salix.Hueytown(12..15)) ^ HillTop.Salix.Hueytown(8)
        20: random(HillTop.Salix.Hueytown(12..15)) ^ HillTop.Salix.Hueytown(11)
        42..43: random(HillTop.Salix.Hueytown(12..15)) ^ HillTop.Salix.Hueytown(9..10)
      hash group 0:
        table: [0, 1]
        seed: 0xc0032cb5c00
    format: { action(0): 0..0, immediate(0): 2..2, version(0): 112..115, match(0): [68..71, 32..63 ], action(1): 1..1, immediate(1): 3..3, version(1): 116..119, match(1): [108..111, 72..103 ] }
    match: [ HillTop.Salix.Hueytown(12..15), HillTop.Maddock.Kaluaaha(0..7), HillTop.Maddock.Kaluaaha(8..15), HillTop.Maddock.Kaluaaha(16..23), HillTop.Maddock.Kaluaaha(24..31) ]
    gateway:
      name: cond-28
      input_xbar:
        exact group 0: { 27: HillTop.RossFork.Naruna.0-1, 64: HillTop.Salix.Hueytown, 85: HillTop.RossFork.Naruna.2-2 }
      row: 3
      bus: 1
      unit: 0
      match: { 0: HillTop.Salix.Hueytown(0..7), 8: HillTop.Salix.Hueytown(8..15), 19: HillTop.RossFork.Naruna.0-1, 29: HillTop.RossFork.Naruna.2-2 }
      0x****0000:  _Cranbury
      0b**0********01*******************: run_table
      miss:  _Cranbury
      condition: 
        expression: "(HillTop.Salix.Hueytown != 0 && HillTop.RossFork.Naruna == 1)"
        true:  _Lowemont
        false:  _Cranbury
    hit: [  _Cranbury ]
    miss:  _Cranbury
    action_bus: { 36..37 : immediate(0..0) }
    action: _Lowemont$action_data($DIRECT, $DEFAULT)
    instruction: _Lowemont(action, $DEFAULT)
    actions:
      Norridge(1, 3):
      - p4_param_order: { Townville: 16, Pinole: 1 }
      - default_action: { allowed: true }
      - handle: 0x200000ba
      - next_table: 0
      - { Townville.12-15: $adf_h0(0..3), Townville.0-11: $adf_h0(4..15), Pinole: immediate(0..0) }
      - set HillTop.Komatke.Townville.0-11, Townville.0-11
      - set HillTop.Komatke.Townville.12-15, Townville.12-15
      - set HillTop.Komatke.Monahans, 1
      - set HillTop.Komatke.Pinole, Pinole
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x200000bb
      - next_table: 0
      - {  }
    default_only_action: NoAction
    idletime:
      row: 4
      bus: 1
      column: [ 0, 1 ]
      precision: 1
      sweep_interval: 7
      notification: enable
      per_flow_enable: false
  action _Lowemont$action_data:
    p4: { name: Lowemont$action }
    row: 9
    column: [ 1, 2 ]
    vpns: [ 0, 1 ]
    home_row:
    - 9
    format Norridge: { $adf_h0: 0..15 }
    action_bus: { 40..41 : $adf_h0 }
  exact_match _Cranbury 2:
    p4: { name: Cranbury, size: 32768, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Ocoee: { type: exact, size: 8, full_size: 8, key_name: "RossFork.Ocoee" }
      HillTop.Maddock.Kaluaaha: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Kaluaaha" }
      Millston.Grays.Chevak: { type: exact, size: 16, full_size: 16, key_name: "Grays.Chevak" }
      HillTop.Maddock.Calcasieu: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Calcasieu" }
      Millston.Grays.Mendocino: { type: exact, size: 16, full_size: 16, key_name: "Grays.Mendocino" }
    row: [ 1, 2, 3, 4, 5, 6, 7 ]
    bus: [ 0, 0, 0, 0, 0, 0, 0 ]
    column:
    - [ 2, 3, 4, 6 ]
    - [ 2, 3, 4, 6 ]
    - [ 2, 3, 4, 6 ]
    - [ 2, 3, 4, 6 ]
    - [ 2, 3, 4, 6 ]
    - [ 2, 3, 4, 6 ]
    - [ 2, 3, 4, 6 ]
    stash: 
      row: [ 1, 2, 3, 4, 5, 6, 7 ]
      col: [ 2, 2, 2, 2, 2, 2, 2 ]
      unit: [ 1, 1, 1, 1, 1, 1, 1 ]
    ways:
      - [1, 0, 0x0, [7, 2], [6, 2], [5, 2], [4, 2], [3, 2], [2, 2], [1, 2]]
      - [1, 1, 0x0, [7, 3], [6, 3], [5, 3], [4, 3], [3, 3], [2, 3], [1, 3]]
      - [1, 2, 0x0, [7, 4], [6, 4], [5, 4], [4, 4], [3, 4], [2, 4], [1, 4]]
      - [1, 3, 0x0, [7, 6], [6, 6], [5, 6], [4, 6], [3, 6], [2, 6], [1, 6]]
    input_xbar:
      exact group 1: { 0: HillTop.Maddock.Calcasieu, 32: HillTop.Maddock.Kaluaaha, 64: Millston.Grays.Chevak, 80: Millston.Grays.Mendocino, 96: HillTop.RossFork.Ocoee }
      hash 2:
        0..9: random(HillTop.Maddock.Calcasieu, HillTop.Maddock.Kaluaaha)
        10..19: random(HillTop.Maddock.Calcasieu, HillTop.Maddock.Kaluaaha)
        20..29: random(HillTop.Maddock.Calcasieu, HillTop.Maddock.Kaluaaha)
        30..39: random(HillTop.Maddock.Calcasieu, HillTop.Maddock.Kaluaaha)
      hash 3:
        0..1: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ Millston.Grays.Chevak(0..1)
        2..9: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee
        11..12: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ Millston.Grays.Chevak(0..1)
        13..19: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(0..6)
        10: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(7)
        22..23: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ Millston.Grays.Chevak(0..1)
        24..29: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(0..5)
        20..21: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(6..7)
        33..34: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ Millston.Grays.Chevak(0..1)
        35..39: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(0..4)
        30..32: random(Millston.Grays.Chevak(2..15), Millston.Grays.Mendocino) ^ HillTop.RossFork.Ocoee(5..7)
      hash group 1:
        table: [2, 3]
        seed: 0x62805adaf2
    format: { action(0): 2..3, version(0): 4..7, match(0): [98..103, 8..95 ], action(1): 0..1, version(1): 244..247, match(1): [506..511, 104..127, 224..239, 248..255, 352..367, 376..383, 480..495 ], action(2): 128..129, version(2): 240..243, match(2): 130..223, action(3): 256..257, version(3): 368..371, match(3): 258..351, action(4): 384..385, version(4): 496..499, match(4): 386..479, action(5): 512..513, version(5): 624..627, match(5): 514..607, action(6): 640..641, version(6): 752..755, match(6): 642..735, action(7): 768..769, version(7): 880..883, match(7): 770..863 }
    match: [ Millston.Grays.Chevak(2..7), Millston.Grays.Chevak(8..15), Millston.Grays.Mendocino(0..7), Millston.Grays.Mendocino(8..15), HillTop.Maddock.Calcasieu(0..7), HillTop.Maddock.Calcasieu(8..15), HillTop.Maddock.Calcasieu(16..23), HillTop.Maddock.Calcasieu(24..31), HillTop.Maddock.Kaluaaha(0..7), HillTop.Maddock.Kaluaaha(8..15), HillTop.Maddock.Kaluaaha(16..23), HillTop.Maddock.Kaluaaha(24..31) ]
    gateway:
      name: cond-32
      input_xbar:
        exact group 2: { 0: HillTop.RossFork.Merrill(0..7), 11: HillTop.Ovett.Hammond.0-0, 19: HillTop.RossFork.Alamosa, 21: HillTop.RossFork.Weyauwega, 29: HillTop.Ovett.Hematite, 37: HillTop.RossFork.Naruna.2-2, 40: HillTop.RossFork.Merrill(8..15), 48: HillTop.RossFork.Boerne, 59: HillTop.RossFork.Naruna.0-1 }
        hash 4:
          44: HillTop.RossFork.Weyauwega
          45: HillTop.Ovett.Hematite
          46: HillTop.Ovett.Hammond.0-0
          47: HillTop.RossFork.Boerne
          48: HillTop.RossFork.Alamosa
        hash group 0:
          table: [4]
          seed: 0x0
      row: 2
      bus: 1
      unit: 0
      match: { 36: HillTop.RossFork.Weyauwega, 37: HillTop.Ovett.Hematite, 38: HillTop.Ovett.Hammond.0-0, 19: HillTop.RossFork.Naruna.0-1, 29: HillTop.RossFork.Naruna.2-2, 0: HillTop.RossFork.Merrill(0..7), 8: HillTop.RossFork.Merrill(8..15), 39: HillTop.RossFork.Boerne, 40: HillTop.RossFork.Alamosa }
      0b00110******0********01***0000000000000000: run_table
      miss:  _Devola
      condition: 
        expression: "(HillTop.RossFork.Weyauwega == 0 && HillTop.Ovett.Hematite == 1 && HillTop.Ovett.Hammond & 1 == 1 && HillTop.RossFork.Naruna == 1 && HillTop.RossFork.Merrill == 0 && HillTop.RossFork.Boerne == 0 && HillTop.RossFork.Alamosa == 0)"
        true:  _Cranbury
        false:  _Devola
    hit: [ [],  _Devola,  _Devola,  _PeaRidge ]
    miss:  _Devola
    action: _Cranbury$action_data($DIRECT, $DEFAULT)
    instruction: _Cranbury(action, $DEFAULT)
    actions:
      Milano(1, 5):
      - p4_param_order: { Kaluaaha: 32, Bratt: 32 }
      - default_action: { allowed: true }
      - handle: 0x200000cb
      - next_table: 1
      - { Kaluaaha: $adf_f0(0..31), Bratt.0-15: $adf_f1(0..15) }
      - set HillTop.Maddock.Kaluaaha, Kaluaaha
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Boerne, 1
      - set HillTop.RossFork.Suttle, 1
      Biggers(2, 6):
      - p4_param_order: { Kaluaaha: 32, Avondale: 16, Bratt: 32 }
      - default_action: { allowed: true }
      - handle: 0x200000cc
      - next_table: 2
      - { Bratt.0-15: $adf_f0(0..15), Avondale: $adf_h1(0..15), Kaluaaha: $adf_f1(0..31) }
      - set HillTop.RossFork.Glenmora, Avondale
      - set HillTop.Maddock.Kaluaaha, Kaluaaha
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Boerne, 1
      - set HillTop.RossFork.Suttle, 1
      Sequim(3, 0):
      - default_action: { allowed: true }
      - handle: 0x200000cd
      - next_table: 3
      - {  }
    default_action: Sequim
    idletime:
      row: 0
      bus: 0
      column: [ 0, 1, 2, 3 ]
      precision: 1
      sweep_interval: 7
      notification: enable
      per_flow_enable: false
  action _Cranbury$action_data:
    p4: { name: Cranbury$action }
    row: [ 14, 12, 11, 10, 9, 8, 7, 6, 5 ]
    word: [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
    column:
    - 5
    - 5
    - [ 4, 5 ]
    - 5
    - [ 3, 4, 5 ]
    - 5
    - [ 2, 3, 4, 5 ]
    - 5
    - [ 1, 2 ]
    vpns: 
    - [ 0 ]
    - [ 1 ]
    - [ 2, 3 ]
    - [ 4 ]
    - [ 5, 6, 7 ]
    - [ 8 ]
    - [ 9, 10, 11, 12 ]
    - [ 13 ]
    - [ 14, 15 ]
    home_row:
    - [ 14, 12 ]
    format Milano: { $adf_f0: 0..31, $adf_f1: 32..63 }
    format Biggers: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_f1: 32..63 }
    action_bus: { 46..47 : $adf_h1, 100..103 : $adf_f1, 44..47 : $adf_f0 }
  hash_action _PeaRidge 3:
    p4: { name: PeaRidge, size: 4096, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Nenana: { type: exact, size: 12, full_size: 12, key_name: "Wisdom.Nenana" }
    row: 1
    bus: 1
    hash_dist:
      0: { hash: 2, mask: 0xfff, shift: 3 }
    input_xbar:
      exact group 2: { 64: HillTop.Wisdom.Nenana }
      hash 5:
        0..11: stripe(HillTop.Wisdom.Nenana)
      hash group 2:
        table: [5]
        seed: 0x0
    gateway:
      name: _PeaRidge-gateway
      row: 2
      bus: 0
      unit: 1
      0x0:  _Devola
      miss:  _Devola
      condition: 
        expression: "true(always hit)"
        true:  _Devola
        false:  _Devola
    next: []
    action: _PeaRidge$action_data(hash_dist 0, $DEFAULT)
    instruction: _PeaRidge($DEFAULT, $DEFAULT)
    actions:
      Swifton(0, 7):
      - p4_param_order: { Panaca: 8 }
      - default_action: { allowed: true }
      - handle: 0x200000ce
      - next_table: 0
      - { Panaca: $adf_f0(0..7) }
      - set HillTop.RossFork.Brinklow, Panaca
    default_action: Swifton
    default_action_parameters:
      Panaca: "0x0"
  action _PeaRidge$action_data:
    p4: { name: PeaRidge$action, how_referenced: direct }
    row: 3
    column: 1
    vpns: [ 0 ]
    home_row:
    - 3
    format Swifton: { $adf_f0: 0..31 }
    action_bus: { 104..107 : $adf_f0 }
  exact_match _Devola 4:
    p4: { name: Devola, size: 4096, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Bessie.Miranda: { type: exact, size: 8, full_size: 8, key_name: "Bessie.Miranda" }
      HillTop.Savery.Kaluaaha: { type: exact, size: 16, full_size: 16, key_name: "Savery.Kaluaaha" }
      HillTop.Savery.Calcasieu: { type: exact, size: 16, full_size: 16, key_name: "Savery.Calcasieu" }
      HillTop.Savery.Chevak: { type: exact, size: 16, full_size: 16, key_name: "Savery.Chevak" }
      HillTop.Savery.Mendocino: { type: exact, size: 16, full_size: 16, key_name: "Savery.Mendocino" }
      HillTop.Savery.LasVegas: { type: exact, size: 8, full_size: 8, key_name: "Savery.LasVegas" }
      HillTop.Savery.PineCity: { type: exact, size: 6, full_size: 6, key_name: "Savery.PineCity" }
      HillTop.Savery.Exton: { type: exact, size: 8, full_size: 8, key_name: "Savery.Exton" }
      HillTop.Savery.Noyes: { type: exact, size: 8, full_size: 8, key_name: "Savery.Noyes" }
      HillTop.Savery.Peebles: { type: exact, size: 1, full_size: 1, key_name: "Savery.Peebles" }
    row: 7
    bus: 1
    column: [ 7, 8, 9, 10 ]
    stash: 
      row: [ 7 ]
      col: [ 7 ]
      unit: [ 0 ]
    ways:
      - [0, 3, 0x600, [7, 7], [7, 8], [7, 9], [7, 10]]
    input_xbar:
      exact group 3: { 0: HillTop.Savery.Chevak, 16: HillTop.Savery.Mendocino, 32: HillTop.Savery.Calcasieu, 48: HillTop.Savery.Kaluaaha, 68: HillTop.Bessie.Miranda, 86: HillTop.Savery.PineCity, 101: HillTop.Savery.Peebles, 104: HillTop.Savery.Noyes, 112: HillTop.Savery.LasVegas, 120: HillTop.Savery.Exton }
      hash 6:
        30..39: random(HillTop.Savery.Chevak, HillTop.Savery.Mendocino, HillTop.Savery.Calcasieu, HillTop.Savery.Kaluaaha)
        49..50: random(HillTop.Savery.Chevak, HillTop.Savery.Mendocino, HillTop.Savery.Calcasieu, HillTop.Savery.Kaluaaha)
      hash 7:
        30..33: random(HillTop.Savery.PineCity(3..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Bessie.Miranda(0..3)
        34..37: random(HillTop.Savery.PineCity(3..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Bessie.Miranda(4..7)
        38..39: random(HillTop.Savery.PineCity(3..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Savery.PineCity(0..1)
        49: random(HillTop.Savery.PineCity(3..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Savery.PineCity(2)
        50: random(HillTop.Savery.PineCity(3..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Savery.Peebles
      hash group 0:
        table: [6, 7]
        seed: 0x4000200000000
    format: { version(0): 112..115, match(0): [32..111, 0..7, 9..11 ] }
    match: [ HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton, HillTop.Savery.Chevak(0..7), HillTop.Savery.Chevak(8..15), HillTop.Savery.Mendocino(0..7), HillTop.Savery.Mendocino(8..15), HillTop.Savery.Calcasieu(0..7), HillTop.Savery.Calcasieu(8..15), HillTop.Savery.Kaluaaha(0..7), HillTop.Savery.Kaluaaha(8..15), HillTop.Savery.PineCity(3..5) ]
    hit: [  _Ammon ]
    miss:  _Ammon
    action: _Devola$action_data($DIRECT, $DEFAULT)
    instruction: _Devola($DEFAULT, $DEFAULT)
    actions:
      Unionvale(0, 8):
      - p4_param_order: { Cornell: 32 }
      - default_action: { allowed: true }
      - handle: 0x20000086
      - next_table: 0
      - { Cornell: $adf_f0(0..31) }
      - maxu HillTop.Mausdale.Kenney, HillTop.Mausdale.Kenney, Cornell
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x20000087
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action _Devola$action_data:
    p4: { name: Devola$action }
    row: 4
    column: 5
    vpns: [ 0 ]
    home_row:
    - 4
    format Unionvale: { $adf_f0: 0..31 }
    action_bus: { 112..115 : $adf_f0 }
  hash_action _Ammon 5:
    p4: { name: Ammon, size: 256, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Bessie.Miranda: { type: exact, size: 8, full_size: 8, key_name: "Bessie.Miranda" }
    row: 0
    bus: 1
    hash_dist:
      1: { hash: 2, mask: 0xff, shift: 5 }
    input_xbar:
      exact group 2: { 84: HillTop.Bessie.Miranda }
      hash 5:
        16..23: stripe(HillTop.Bessie.Miranda)
      hash group 2:
        table: [5]
        seed: 0x0
    gateway:
      name: _Ammon-gateway
      row: 1
      bus: 0
      unit: 1
      0x0:  cond-29
      miss:  cond-29
      condition: 
        expression: "true(always hit)"
        true:  cond-29
        false:  cond-29
    next: []
    action: _Ammon$action_data(hash_dist 1, $DEFAULT)
    instruction: _Ammon($DEFAULT, $DEFAULT)
    actions:
      Angeles(0, 9):
      - p4_param_order: { Kaluaaha: 16, Calcasieu: 16, Chevak: 16, Mendocino: 16, LasVegas: 8, PineCity: 6, Exton: 8, Noyes: 8, Peebles: 1 }
      - default_action: { allowed: true }
      - handle: 0x20000088
      - next_table: 0
      - { Peebles: $adf_b0(5..5), Noyes: $adf_b1(0..7), LasVegas: $adf_b2(0..7), Exton: $adf_b3(0..7), Chevak: $adf_h2(0..15), Mendocino: $adf_h3(0..15), Calcasieu: $adf_h4(0..15), Kaluaaha: $adf_h5(0..15), PineCity: $adf_h6(6..11) }
      - and HillTop.Savery.Kaluaaha, HillTop.Bessie.Kaluaaha, Kaluaaha
      - and HillTop.Savery.Calcasieu, HillTop.Bessie.Calcasieu, Calcasieu
      - and HillTop.Savery.Chevak, HillTop.Bessie.Chevak, Chevak
      - and HillTop.Savery.Mendocino, HillTop.Bessie.Mendocino, Mendocino
      - and HillTop.Savery.LasVegas, HillTop.Bessie.LasVegas, LasVegas
      - and HillTop.Savery.Exton, HillTop.Bessie.Exton, Exton
      - and HillTop.Savery.Noyes, HillTop.Bessie.Noyes, Noyes
      - and B10, Peebles, B9
      - and H85, PineCity, H90
    default_action: Angeles
    default_action_parameters:
      Kaluaaha: "0xffff"
      Calcasieu: "0xffff"
      Chevak: "0xffff"
      Mendocino: "0xffff"
      LasVegas: "0xff"
      PineCity: "0x3f"
      Exton: "0xff"
      Noyes: "0xff"
      Peebles: "0x1"
  action _Ammon$action_data:
    p4: { name: Ammon$action, how_referenced: direct }
    row: 5
    column: 3
    vpns: [ 0 ]
    home_row:
    - 5
    format Angeles: { $adf_b0: 0..7, $adf_b1: 8..15, $adf_b2: 16..23, $adf_b3: 24..31, $adf_h2: 32..47, $adf_h3: 48..63, $adf_h4: 64..79, $adf_h5: 80..95, $adf_h6: 96..111 }
    action_bus: { 16 : $adf_b0, 17 : $adf_b1, 18 : $adf_b2, 19 : $adf_b3, 64..65 : $adf_h4, 66..67 : $adf_h5, 68..69 : $adf_h6, 48..49 : $adf_h2, 50..51 : $adf_h3 }
  gateway cond-29 6:
    name: cond-29
    input_xbar:
      exact group 0: { 1: HillTop.Wisdom.Onycha, 93: HillTop.RossFork.Weyauwega, 96: HillTop.Wisdom.Havana, 107: HillTop.Murphy.Standish }
    row: 1
    bus: 1
    unit: 0
    match: { 8: HillTop.Wisdom.Havana, 1: HillTop.Wisdom.Onycha, 21: HillTop.RossFork.Weyauwega, 27: HillTop.Murphy.Standish }
    0b***********************1*******:  _Circle
    0b****************************010:  _Circle
    0b**********1********************:  _Circle
    0b****1**************************:  _Circle
    miss:  cond-29$split
    condition: 
      expression: "(HillTop.Wisdom.Havana == 0 && HillTop.Wisdom.Onycha != 2 && HillTop.RossFork.Weyauwega == 0 && HillTop.Murphy.Standish == 0 && HillTop.Murphy.Blairsden == 0)"
      true:  cond-29$split
      false:  _Circle
  gateway cond-29$split 7:
    name: cond-29$split
    input_xbar:
      exact group 0: { 126: HillTop.Murphy.Blairsden }
    row: 5
    bus: 1
    unit: 0
    match: { 6: HillTop.Murphy.Blairsden }
    0b*1:  _Circle
    miss:  _Horatio
    condition: 
      expression: "(HillTop.Wisdom.Havana == 0 && HillTop.Wisdom.Onycha != 2 && HillTop.RossFork.Weyauwega == 0 && HillTop.Murphy.Standish == 0 && HillTop.Murphy.Blairsden == 0)"
      true:  _Horatio
      false:  _Circle
  exact_match _Horatio 8:
    p4: { name: Horatio, size: 8192, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Adona: { type: exact, size: 24, full_size: 24, key_name: "Wisdom.Adona" }
      HillTop.Wisdom.Connell: { type: exact, size: 24, full_size: 24, key_name: "Wisdom.Connell" }
      HillTop.Wisdom.Nenana: { type: exact, size: 12, full_size: 12, key_name: "Wisdom.Nenana" }
    row: 6
    bus: 1
    column: [ 7, 8, 9, 10 ]
    stash: 
      row: [ 6 ]
      col: [ 7 ]
      unit: [ 0 ]
    ways:
      - [3, 0, 0x0, [6, 7]]
      - [3, 1, 0x0, [6, 8]]
      - [3, 2, 0x0, [6, 9]]
      - [3, 3, 0x0, [6, 10]]
    input_xbar:
      exact group 4: { 0: HillTop.Wisdom.Connell.16-23, 8: HillTop.Wisdom.Adona, 32: HillTop.Wisdom.Nenana, 48: HillTop.Wisdom.Connell.0-15 }
      hash 8:
        0..5: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(6..7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(0..5)
        6..9: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(6..7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(8..11)
        11..16: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(6..7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(0..5)
        17..19: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(6..7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(8..10)
        10: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(6..7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(11)
        22..27: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(6..7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(0..5)
        28..29: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(6..7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(8..9)
        20..21: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(6..7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(10..11)
        33..38: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(6..7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(0..5)
        39: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(6..7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(8)
        30..32: random(HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona, HillTop.Wisdom.Nenana(6..7), HillTop.Wisdom.Connell.0-15) ^ HillTop.Wisdom.Nenana(9..11)
      hash group 3:
        table: [8]
        seed: 0xac1adff564
    format: { action(0): 0..2, version(0): 112..115, match(0): [86..87, 32..79 ], action(1): 3..5, version(1): 116..119, match(1): [6..7, 88..111, 8..31 ] }
    match: [ HillTop.Wisdom.Nenana(6..7), HillTop.Wisdom.Connell.0-15(0..7), HillTop.Wisdom.Connell.0-15(8..15), HillTop.Wisdom.Connell.16-23, HillTop.Wisdom.Adona(0..7), HillTop.Wisdom.Adona(8..15), HillTop.Wisdom.Adona(16..23) ]
    gateway:
      name: cond-30
      input_xbar:
        exact group 4: { 64: HillTop.Wisdom.Morstein }
      row: 0
      bus: 1
      unit: 1
      match: { 0: HillTop.Wisdom.Morstein(0..7), 8: HillTop.Wisdom.Morstein(8..15), 16: HillTop.Wisdom.Morstein(16..19) }
      0x*001ff: run_table
      miss:  _Circle
      condition: 
        expression: "(HillTop.Wisdom.Morstein == 511)"
        true:  _Horatio
        false:  _Circle
    hit: [ [],  _Circle,  _Circle,  _Circle,  _Circle,  _DeepGap ]
    miss:  _Circle
    action: _Horatio$action_data($DIRECT, $DEFAULT)
    instruction: _Horatio(action, $DEFAULT)
    actions:
      Laclede(1, 10):
      - p4_param_order: { Stilwell: 20 }
      - default_action: { allowed: true }
      - handle: 0x200000bc
      - next_table: 1
      - { Stilwell: $adf_f0(0..19) }
      - set HillTop.Wisdom.Morstein, Stilwell
      RedLake(2, 11):
      - p4_param_order: { Minto: 16 }
      - default_action: { allowed: true }
      - handle: 0x200000bd
      - next_table: 2
      - { Minto: $adf_h0(0..15) }
      - set ig_intr_md_for_tm.mcast_grp_a, Minto
      Ruston(3, 12):
      - p4_param_order: { Stilwell: 20, Placedo: 10 }
      - default_action: { allowed: true }
      - handle: 0x200000be
      - next_table: 3
      - { Stilwell: $adf_f0(0..19) }
      - set HillTop.Wisdom.Morstein, Stilwell
      - set HillTop.Wisdom.Westhoff, 5
      LaPlant(4, 13):
      - default_action: { allowed: true }
      - handle: 0x200000bf
      - next_table: 4
      - {  }
      - set HillTop.RossFork.Almedia, 1
      Sequim(5, 0):
      - default_action: { allowed: true }
      - handle: 0x200000c0
      - next_table: 5
      - {  }
    default_action: Sequim
  action _Horatio$action_data:
    p4: { name: Horatio$action }
    row: 11
    column: [ 2, 3 ]
    vpns: [ 0, 1 ]
    home_row:
    - 11
    format Laclede: { $adf_f0: 0..31 }
    format RedLake: { $adf_h0: 0..15 }
    format Ruston: { $adf_f0: 0..31 }
    action_bus: { 52..53 : $adf_h0, 52..55 : $adf_f0 }
  ternary_match _DeepGap 9:
    p4: { name: DeepGap, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Tiburon.Arnold: { type: ternary, size: 7, full_size: 9, key_name: "Tiburon.Arnold" }
      HillTop.Wisdom.Adona: { type: ternary, size: 24, full_size: 24, key_name: "Wisdom.Adona" }
      HillTop.Wisdom.Connell: { type: ternary, size: 24, full_size: 24, key_name: "Wisdom.Connell" }
    row: [ 2, 3 ]
    bus: [ 0, 0 ]
    column:
    - 0
    - 0
    input_xbar:
      ternary group 0: { 0: HillTop.Wisdom.Connell.16-23, 8: HillTop.Wisdom.Adona, 32: HillTop.Tiburon.Arnold(0..6) }
      ternary group 1: { 0: HillTop.Wisdom.Connell.0-15 }
    match:
    - { group: 0, dirtcam: 0x155 }
    - { group: 1, dirtcam: 0x5 }
    hit: [  _Circle ]
    miss:  _Circle
    indirect: _DeepGap$tind
  meter _DeepGap$meter..Morrow:
    p4: { name: Morrow }
    row: [ 15, 13 ]
    column:
    - 5
    - 5
    maprams: 
    - 5
    - 5
    color_maprams:
      row: 7
      bus: 0
      column: 0
      address: idletime
    type: standard
    count: bytes
  ternary_indirect _DeepGap$tind:
    row: 1
    bus: 0
    column: 5
    input_xbar:
      ternary group 0: { 0: HillTop.Wisdom.Connell.16-23, 8: HillTop.Wisdom.Adona, 32: HillTop.Tiburon.Arnold(0..6) }
      ternary group 1: { 0: HillTop.Wisdom.Connell.0-15 }
    format: { action: 0..1 }
    action_bus: { 3 : _DeepGap$meter..Morrow color }
    meter: _DeepGap$meter..Morrow($DIRECT, $DEFAULT, $DEFAULT)
    meter_color : _DeepGap$meter..Morrow($DIRECT, $DEFAULT)
    action: _DeepGap$action_data($DIRECT, $DEFAULT)
    instruction: _DeepGap$tind(action, $DEFAULT)
    actions:
      Shasta(0, 14):
      - default_action: { allowed: true }
      - handle: 0x200000c1
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Thayne, _DeepGap$meter..Morrow color(0..0)
      - set ig_intr_md_for_tm.copy_to_cpu, HillTop.RossFork.Parkland
      - deposit-field H7(12..15), 0, H2
      - _DeepGap$meter..Morrow(2, $DIRECT)
      Weathers(1, 16):
      - default_action: { allowed: true }
      - handle: 0x200000c2
      - next_table: 0
      - { $constant0: $adf_h0(0..15), $constant0: 4096 }
      - set HillTop.RossFork.Thayne, _DeepGap$meter..Morrow color(0..0)
      - add ig_intr_md_for_tm.mcast_grp_a, HillTop.Wisdom.Nenana, $constant0
      - set HillTop.RossFork.Tenino, 1
      - _DeepGap$meter..Morrow(2, $DIRECT)
      Coupland(2, 18):
      - default_action: { allowed: true }
      - handle: 0x200000c3
      - next_table: 0
      - {  }
      - set HillTop.RossFork.Thayne, _DeepGap$meter..Morrow color(0..0)
      - deposit-field H7(12..15), 0, H2
      - _DeepGap$meter..Morrow(2, $DIRECT)
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x200000c4
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action _DeepGap$action_data:
    p4: { name: DeepGap$action }
    row: 7
    column: 1
    vpns: [ 0 ]
    home_row:
    - 7
    format Weathers: { $adf_h0: 0..15 }
    action_bus: { 56..57 : $adf_h0 }
  ternary_match _Circle 10:
    p4: { name: Circle, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Quinault.Foster: { type: exact, size: 2, full_size: 2, key_name: "Quinault.Foster" }
      HillTop.RossFork.Powderly: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Powderly" }
      HillTop.Tiburon.Arnold: { type: ternary, size: 9, full_size: 9, key_name: "Tiburon.Arnold" }
      HillTop.RossFork.Quebrada: { type: ternary, size: 1, full_size: 20, key_name: "RossFork.Quebrada", start_bit: 19 }
      HillTop.Murphy.Blairsden: { type: ternary, size: 1, full_size: 1, key_name: "Murphy.Blairsden" }
      HillTop.Murphy.Standish: { type: ternary, size: 1, full_size: 1, key_name: "Murphy.Standish" }
      HillTop.RossFork.Beaverdam: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Beaverdam" }
    row: [ 0, 1 ]
    bus: [ 0, 0 ]
    column:
    - 0
    - 0
    input_xbar:
      ternary group 1: { 16: HillTop.Tiburon.Arnold, 35: HillTop.RossFork.Quebrada(19) }
      ternary group 2: { 6: HillTop.Murphy.Blairsden, 12: HillTop.Quinault.Foster, 14: HillTop.RossFork.Powderly, 19: HillTop.Murphy.Standish }
      byte group 3: { 2: HillTop.RossFork.Beaverdam }
    match:
    - { group: 1, byte_group: 3, byte_config: 0, dirtcam: 0x550 }
    - { group: 2, dirtcam: 0x15 }
    gateway:
      name: cond-31
      input_xbar:
        exact group 0: { 4: HillTop.Quinault.Foster }
      row: 0
      bus: 0
      unit: 0
      match: { 4: HillTop.Quinault.Foster }
      0b**00:  _Mapleton
      miss: run_table
      condition: 
        expression: "(HillTop.Quinault.Foster != 0)"
        true:  _Circle
        false:  _Mapleton
    hit: [  _Mapleton ]
    miss:  _Mapleton
    indirect: _Circle$tind
  ternary_indirect _Circle$tind:
    row: 0
    bus: 0
    column: 5
    input_xbar:
      ternary group 1: { 16: HillTop.Tiburon.Arnold, 35: HillTop.RossFork.Quebrada(19) }
      ternary group 2: { 6: HillTop.Murphy.Blairsden, 12: HillTop.Quinault.Foster, 14: HillTop.RossFork.Powderly, 19: HillTop.Murphy.Standish }
      byte group 3: { 2: HillTop.RossFork.Beaverdam }
    format: { action: 0..2 }
    instruction: _Circle$tind(action, $DEFAULT)
    actions:
      Wyndmoor(1, 15):
      - default_action: { allowed: true }
      - handle: 0x200000c5
      - next_table: 0
      - set ig_intr_md_for_dprsr.digest_type, 1
      Picabo(2, 17):
      - default_action: { allowed: true }
      - handle: 0x200000c6
      - next_table: 0
      - set HillTop.Wisdom.Havana, 1
      - set HillTop.Wisdom.Blencoe, 22
      - set HillTop.Murphy.Blairsden, 0
      - set HillTop.Murphy.Standish, 0
      Algoa(3, 19):
      - default_action: { allowed: true }
      - handle: 0x200000c7
      - next_table: 0
      - set HillTop.RossFork.Algoa, 1
      Crump(4, 0):
      - default_action: { allowed: true }
      - handle: 0x200000c8
      - next_table: 0
    default_action: Crump
  ternary_match _Mapleton 11:
    p4: { name: Mapleton, disable_atomic_modify : true }
    hit: [  _Nowlin ]
    miss:  _Nowlin
    indirect: _Mapleton$tind
  ternary_indirect _Mapleton$tind:
    row: 0
    bus: 1
    format: { action: 0..0 }
    instruction: _Mapleton$tind(action, $DEFAULT)
    actions:
      Claypool(0, 20):
      - default_action: { allowed: true }
      - handle: 0x2000011b
      - next_table: 0
      - set HillTop.Plains.Roachdale, 1
      - set HillTop.Plains.Miller, HillTop.Tiburon.Arnold
      - set Millston.Belgrade.$valid, 1
      - set Millston.Belgrade.Willard, HillTop.Freeny.Dunedin
    default_action: Claypool
  hash_action _Nowlin 12:
    p4: { name: Nowlin, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Tiburon.Arnold: { type: exact, size: 9, full_size: 9, key_name: "Tiburon.Arnold" }
    row: 2
    bus: 1
    hash_dist:
      2: { hash: 2, mask: 0x1ff, shift: 3 }
    input_xbar:
      exact group 2: { 96: HillTop.Tiburon.Arnold }
      hash 5:
        32..40: stripe(HillTop.Tiburon.Arnold)
      hash group 2:
        table: [5]
        seed: 0x0
    gateway:
      name: _Nowlin-gateway
      row: 3
      bus: 0
      unit: 1
      0x0:  _Walland
      miss:  _Walland
      condition: 
        expression: "true(always hit)"
        true:  _Walland
        false:  _Walland
    next: []
    action: _Nowlin$action_data(hash_dist 2, $DEFAULT)
    instruction: _Nowlin($DEFAULT, $DEFAULT)
    actions:
      Newland(0, 21):
      - p4_param_order: { Waumandee: 9 }
      - default_action: { allowed: true }
      - handle: 0x200000f8
      - next_table: 0
      - { Waumandee: $adf_f0(0..8) }
      - set ig_intr_md_for_tm.level2_mcast_hash, HillTop.Lewiston.Staunton(0..12)
      - set ig_intr_md_for_tm.level2_exclusion_id, Waumandee
    default_action: Newland
    default_action_parameters:
      Waumandee: "0x0"
  action _Nowlin$action_data:
    p4: { name: Nowlin$action, how_referenced: direct }
    row: 1
    column: 5
    vpns: [ 0 ]
    home_row:
    - 1
    format Newland: { $adf_f0: 0..31 }
    action_bus: { 120..123 : $adf_f0 }
stage 9 ingress:
  exact_match _Walland 0:
    p4: { name: Walland, size: 8192, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Bessie.Miranda: { type: exact, size: 8, full_size: 8, key_name: "Bessie.Miranda" }
      HillTop.Savery.Kaluaaha: { type: exact, size: 16, full_size: 16, key_name: "Savery.Kaluaaha" }
      HillTop.Savery.Calcasieu: { type: exact, size: 16, full_size: 16, key_name: "Savery.Calcasieu" }
      HillTop.Savery.Chevak: { type: exact, size: 16, full_size: 16, key_name: "Savery.Chevak" }
      HillTop.Savery.Mendocino: { type: exact, size: 16, full_size: 16, key_name: "Savery.Mendocino" }
      HillTop.Savery.LasVegas: { type: exact, size: 8, full_size: 8, key_name: "Savery.LasVegas" }
      HillTop.Savery.PineCity: { type: exact, size: 6, full_size: 6, key_name: "Savery.PineCity" }
      HillTop.Savery.Exton: { type: exact, size: 8, full_size: 8, key_name: "Savery.Exton" }
      HillTop.Savery.Noyes: { type: exact, size: 8, full_size: 8, key_name: "Savery.Noyes" }
      HillTop.Savery.Peebles: { type: exact, size: 1, full_size: 1, key_name: "Savery.Peebles" }
    row: [ 7, 4, 3 ]
    bus: [ 1, 0, 0 ]
    column:
    - [ 4, 6 ]
    - [ 2, 3, 4, 6 ]
    - [ 2, 3 ]
    stash: 
      row: [ 7 ]
      col: [ 4 ]
      unit: [ 1 ]
    ways:
      - [0, 0, 0x7, [7, 4], [7, 6], [4, 2], [4, 3], [4, 4], [4, 6], [3, 2], [3, 3]]
    input_xbar:
      exact group 0: { 0: HillTop.Savery.Chevak, 16: HillTop.Savery.Mendocino, 32: HillTop.Savery.Calcasieu, 48: HillTop.Savery.Kaluaaha, 68: HillTop.Bessie.Miranda, 86: HillTop.Savery.PineCity, 101: HillTop.Savery.Peebles, 104: HillTop.Savery.Noyes, 112: HillTop.Savery.LasVegas, 120: HillTop.Savery.Exton }
      hash 0:
        0..9: random(HillTop.Savery.Chevak, HillTop.Savery.Mendocino, HillTop.Savery.Calcasieu, HillTop.Savery.Kaluaaha)
        40..42: random(HillTop.Savery.Chevak, HillTop.Savery.Mendocino, HillTop.Savery.Calcasieu, HillTop.Savery.Kaluaaha)
      hash 1:
        0..3: random(HillTop.Savery.PineCity(4..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Bessie.Miranda(0..3)
        4..7: random(HillTop.Savery.PineCity(4..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Bessie.Miranda(4..7)
        8..9: random(HillTop.Savery.PineCity(4..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Savery.PineCity(0..1)
        40..41: random(HillTop.Savery.PineCity(4..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Savery.PineCity(2..3)
        42: random(HillTop.Savery.PineCity(4..5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Savery.Peebles
      hash group 0:
        table: [0, 1]
        seed: 0x30
    format: { version(0): 112..115, match(0): [32..111, 0..7, 10..11 ] }
    match: [ HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton, HillTop.Savery.Chevak(0..7), HillTop.Savery.Chevak(8..15), HillTop.Savery.Mendocino(0..7), HillTop.Savery.Mendocino(8..15), HillTop.Savery.Calcasieu(0..7), HillTop.Savery.Calcasieu(8..15), HillTop.Savery.Kaluaaha(0..7), HillTop.Savery.Kaluaaha(8..15), HillTop.Savery.PineCity(4..5) ]
    hit: [  _Ferndale ]
    miss:  _Ferndale
    action: _Walland$action_data($DIRECT, $DEFAULT)
    instruction: _Walland($DEFAULT, $DEFAULT)
    actions:
      Unionvale(0, 1):
      - p4_param_order: { Cornell: 32 }
      - default_action: { allowed: true }
      - handle: 0x2000009d
      - next_table: 0
      - { Cornell: $adf_f0(0..31) }
      - maxu HillTop.Mausdale.Kenney, HillTop.Mausdale.Kenney, Cornell
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x2000009e
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action _Walland$action_data:
    p4: { name: Walland$action }
    row: 11
    column: [ 0, 1 ]
    vpns: [ 0, 1 ]
    home_row:
    - 11
    format Unionvale: { $adf_f0: 0..31 }
    action_bus: { 96..99 : $adf_f0 }
  hash_action _Ferndale 1:
    p4: { name: Ferndale, size: 256, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Bessie.Miranda: { type: exact, size: 8, full_size: 8, key_name: "Bessie.Miranda" }
    row: 4
    bus: 1
    hash_dist:
      0: { hash: 1, mask: 0xff, shift: 5 }
    input_xbar:
      exact group 1: { 4: HillTop.Bessie.Miranda }
      hash 2:
        0..7: stripe(HillTop.Bessie.Miranda)
      hash group 1:
        table: [2]
        seed: 0x0
    gateway:
      name: _Ferndale-gateway
      row: 0
      bus: 0
      unit: 1
      0x0:  _Chilson
      miss:  _Chilson
      condition: 
        expression: "true(always hit)"
        true:  _Chilson
        false:  _Chilson
    next: []
    action: _Ferndale$action_data(hash_dist 0, $DEFAULT)
    instruction: _Ferndale($DEFAULT, $DEFAULT)
    actions:
      Twichell(0, 2):
      - p4_param_order: { Kaluaaha: 16, Calcasieu: 16, Chevak: 16, Mendocino: 16, LasVegas: 8, PineCity: 6, Exton: 8, Noyes: 8, Peebles: 1 }
      - default_action: { allowed: true }
      - handle: 0x2000009f
      - next_table: 0
      - { Peebles: $adf_b0(5..5), Noyes: $adf_b1(0..7), LasVegas: $adf_b2(0..7), Exton: $adf_b3(0..7), Chevak: $adf_h2(0..15), Mendocino: $adf_h3(0..15), Calcasieu: $adf_h4(0..15), Kaluaaha: $adf_h5(0..15), PineCity: $adf_h6(6..11) }
      - and HillTop.Savery.Kaluaaha, HillTop.Bessie.Kaluaaha, Kaluaaha
      - and HillTop.Savery.Calcasieu, HillTop.Bessie.Calcasieu, Calcasieu
      - and HillTop.Savery.Chevak, HillTop.Bessie.Chevak, Chevak
      - and HillTop.Savery.Mendocino, HillTop.Bessie.Mendocino, Mendocino
      - and HillTop.Savery.LasVegas, HillTop.Bessie.LasVegas, LasVegas
      - and HillTop.Savery.Exton, HillTop.Bessie.Exton, Exton
      - and HillTop.Savery.Noyes, HillTop.Bessie.Noyes, Noyes
      - and B10, Peebles, B9
      - and H85, PineCity, H90
    default_action: Twichell
    default_action_parameters:
      Kaluaaha: "0xffff"
      Calcasieu: "0xffff"
      Chevak: "0xffff"
      Mendocino: "0xffff"
      LasVegas: "0xff"
      PineCity: "0x3f"
      Exton: "0xff"
      Noyes: "0xff"
      Peebles: "0x1"
  action _Ferndale$action_data:
    p4: { name: Ferndale$action, how_referenced: direct }
    row: 6
    column: 5
    vpns: [ 0 ]
    home_row:
    - 6
    format Twichell: { $adf_b0: 0..7, $adf_b1: 8..15, $adf_b2: 16..23, $adf_b3: 24..31, $adf_h2: 32..47, $adf_h3: 48..63, $adf_h4: 64..79, $adf_h5: 80..95, $adf_h6: 96..111 }
    action_bus: { 16 : $adf_b0, 17 : $adf_b1, 18 : $adf_b2, 19 : $adf_b3, 64..65 : $adf_h4, 66..67 : $adf_h5, 68..69 : $adf_h6, 32..33 : $adf_h2, 34..35 : $adf_h3 }
  exact_match _Chilson 2:
    p4: { name: Chilson, size: 128, action_profile: Wakeman, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Minturn.Grassflat: { type: exact, size: 7, full_size: 10, key_name: "Minturn.Grassflat" }
    row: 0
    bus: 1
    column: 4
    stash: 
      row: [ 0 ]
      col: [ 4 ]
      unit: [ 0 ]
    ways:
      - [0, 1, 0x0, [0, 4]]
    input_xbar:
      exact group 1: { 64: HillTop.Minturn.Grassflat(0..6) }
      hash 3:
        10..16: HillTop.Minturn.Grassflat(0..6)
      hash group 0:
        table: [3]
        seed: 0x0
    format: { version(0): 112..115, meter_addr(0): 0..9, meter_pfe(0): 10..10, action_addr(0): 11..21 }
    hit: [  _Sedan_0 ]
    miss:  _Sedan_0
    selector: _Chilson$selector.Wakeman_sel(meter_addr, meter_pfe, $DEFAULT)
    selector_length: _Chilson$selector.Wakeman_sel($DEFAULT, $DEFAULT)
    action: _Chilson$action_data.Wakeman(action_addr, $DEFAULT)
    instruction: _Chilson($DEFAULT, $DEFAULT)
    actions:
      Froid(0, 3):
      - p4_param_order: { Hector: 10 }
      - default_action: { allowed: true }
      - handle: 0x200000b3
      - next_table: 0
      - { Hector: $adf_h0(0..9) }
      - or H34, Hector, H34
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x200000b4
      - next_table: 0
      - {  }
    default_only_action: NoAction
  selection _Chilson$selector.Wakeman_sel:
    p4: { name: Wakeman_sel, size: 4 }
    row: 15
    column: [ 1, 2 ]
    maprams: [ 1, 2 ]
    input_xbar:
      exact group 2: { 0: HillTop.Lewiston.Staunton }
      hash 4:
        0..50: slice(stripe(crc_rev(0x18005, 0x0, 0x0, 16, { 0: HillTop.Lewiston.Staunton })), 0..50)
      hash group 2:
        table: [4]
        seed: 0x0
    mode: resilient 0
    non_linear: true
    pool_sizes: [120]
  action _Chilson$action_data.Wakeman:
    p4: { name: Wakeman, size: 1024 }
    row: 4
    column: 5
    vpns: [ 0 ]
    home_row:
    - 4
    format Froid: { $adf_h0: 0..15 }
    action_bus: { 36..37 : $adf_h0 }
  stateful _Chilson$salu.Wakeman_sel$salu:
    p4: { name: Wakeman_sel$salu, size: 122880, hidden: true }
    selection_table: _Chilson$selector.Wakeman_sel
    row: 15
    column: [ 1, 2 ]
    maprams: [ 1, 2 ]
    format: { lo: 1 }
    actions:
      set_bit_at_alu$0:
      - set_bit_at
      clr_bit_at_alu$0:
      - clr_bit_at
      set_bit_alu$0:
      - set_bit
      clr_bit_alu$0:
      - clr_bit
  exact_match _Sedan_0 3:
    p4: { name: Sedan, size: 20480, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Merrill: { type: exact, size: 16, full_size: 16, key_name: "RossFork.Merrill" }
    row: [ 1, 0 ]
    bus: [ 1, 0 ]
    column:
    - [ 4, 6 ]
    - [ 2, 3 ]
    stash: 
      row: [ 1 ]
      col: [ 4 ]
      unit: [ 0 ]
    ways:
      - [3, 0, 0x0, [1, 4]]
      - [3, 1, 0x0, [1, 6]]
      - [3, 2, 0x0, [0, 2]]
      - [3, 3, 0x0, [0, 3]]
    input_xbar:
      exact group 2: { 64: HillTop.RossFork.Merrill }
      hash 5:
        0..7: random(HillTop.RossFork.Merrill(10..15)) ^ HillTop.RossFork.Merrill(0..7)
        8..9: random(HillTop.RossFork.Merrill(10..15)) ^ HillTop.RossFork.Merrill(8..9)
        11..18: random(HillTop.RossFork.Merrill(10..15)) ^ HillTop.RossFork.Merrill(0..7)
        19: random(HillTop.RossFork.Merrill(10..15)) ^ HillTop.RossFork.Merrill(8)
        10: random(HillTop.RossFork.Merrill(10..15)) ^ HillTop.RossFork.Merrill(9)
        22..29: random(HillTop.RossFork.Merrill(10..15)) ^ HillTop.RossFork.Merrill(0..7)
        20..21: random(HillTop.RossFork.Merrill(10..15)) ^ HillTop.RossFork.Merrill(8..9)
        33..39: random(HillTop.RossFork.Merrill(10..15)) ^ HillTop.RossFork.Merrill(0..6)
        30: random(HillTop.RossFork.Merrill(10..15)) ^ HillTop.RossFork.Merrill(7)
        31..32: random(HillTop.RossFork.Merrill(10..15)) ^ HillTop.RossFork.Merrill(8..9)
      hash group 3:
        table: [5]
        seed: 0x506b8ed1a4
    format: { action(0): 0..1, version(0): 112..115, match(0): 34..39, action(1): 2..3, version(1): 116..119, match(1): 42..47, action(2): 4..5, version(2): 120..123, match(2): 50..55, action(3): 6..7, version(3): 124..127, match(3): 58..63, action(4): 8..9, version(4): 16..19, match(4): 66..71 }
    match: [ HillTop.RossFork.Merrill(10..15) ]
    gateway:
      name: cond-33
      input_xbar:
        exact group 1: { 75: HillTop.Ovett.Hammond.0-0, 80: ig_intr_md_for_tm.copy_to_cpu, 93: HillTop.Ovett.Hematite, 101: HillTop.RossFork.Weyauwega, 109: HillTop.RossFork.Naruna.2-2, 115: HillTop.RossFork.Naruna.0-1 }
        hash 3:
          44: HillTop.Ovett.Hammond.0-0
          45: ig_intr_md_for_tm.copy_to_cpu
        hash group 0:
          table: [3]
          seed: 0x0
      row: 0
      bus: 1
      unit: 0
      match: { 21: HillTop.RossFork.Weyauwega, 29: HillTop.Ovett.Hematite, 36: HillTop.Ovett.Hammond.0-0, 3: HillTop.RossFork.Naruna.0-1, 13: HillTop.RossFork.Naruna.2-2, 37: ig_intr_md_for_tm.copy_to_cpu }
      0b01******1*******0*******0********01: run_table
      miss:  _Lemont_0
      condition: 
        expression: "(HillTop.RossFork.Weyauwega == 0 && HillTop.Ovett.Hematite == 1 && HillTop.Ovett.Hammond & 1 == 1 && HillTop.RossFork.Naruna == 1 && ig_intr_md_for_tm.copy_to_cpu == 0)"
        true:  _Sedan_0
        false:  _Lemont_0
    hit: [ [],  _OldTown,  _OldTown,  _Casnovia_0 ]
    miss:  _OldTown
    action: _Sedan_0$action_data($DIRECT, $DEFAULT)
    instruction: _Sedan_0(action, $DEFAULT)
    actions:
      Bronwood(1, 4):
      - p4_param_order: { Kaluaaha: 32, Calcasieu: 32, Cotter: 32 }
      - default_action: { allowed: true }
      - handle: 0x200000cf
      - next_table: 1
      - { Calcasieu: $adf_f0(0..31), Kaluaaha: $adf_f1(0..31), Cotter.0-15: $adf_f2(0..15) }
      - set HillTop.Maddock.Kaluaaha, Kaluaaha
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Cotter.0-15
      - set HillTop.RossFork.Boerne, 1
      - set HillTop.RossFork.Alamosa, 1
      Kinde(2, 6):
      - p4_param_order: { Kaluaaha: 32, Calcasieu: 32, Hillside: 16, Wanamassa: 16, Cotter: 32 }
      - default_action: { allowed: true }
      - handle: 0x200000d0
      - next_table: 2
      - { Cotter.0-15: $adf_f0(0..15), Hillside: $adf_h1(0..15), Wanamassa: $adf_h2(0..15), Calcasieu: $adf_f2(0..31), Kaluaaha: $adf_f3(0..31) }
      - set HillTop.Maddock.Kaluaaha, Kaluaaha
      - set HillTop.Maddock.Calcasieu, Calcasieu
      - set HillTop.RossFork.Bucktown(0..15), Cotter.0-15
      - set HillTop.RossFork.Boerne, 1
      - set HillTop.RossFork.Alamosa, 1
      - set HillTop.RossFork.Glenmora, Hillside
      - set HillTop.RossFork.DonaAna, Wanamassa
      Sequim(3, 0):
      - default_action: { allowed: true }
      - handle: 0x200000d1
      - next_table: 3
      - {  }
    default_action: Sequim
  action _Sedan_0$action_data:
    p4: { name: Sedan$action }
    row: [ 15, 14, 13, 12, 11, 10, 9, 8, 7 ]
    word: [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
    column:
    - [ 3, 4, 5 ]
    - 5
    - 5
    - 5
    - [ 2, 3, 4, 5 ]
    - 5
    - [ 2, 3, 4, 5 ]
    - 5
    - [ 2, 3, 4, 5 ]
    vpns: 
    - [ 0, 1, 2 ]
    - [ 3 ]
    - [ 4 ]
    - [ 5 ]
    - [ 6, 7, 8, 9 ]
    - [ 10 ]
    - [ 11, 12, 13, 14 ]
    - [ 15 ]
    - [ 16, 17, 18, 19 ]
    home_row:
    - 15
    format Bronwood: { $adf_f0: 0..31, $adf_f1: 32..63, $adf_f2: 64..95 }
    format Kinde: { $adf_f0: 0..31, $adf_h1: 16..31, $adf_h2: 32..47, $adf_f2: 64..95, $adf_f3: 96..127 }
    action_bus: { 74..75 : $adf_h1, 76..77 : $adf_h2, 104..107 : $adf_f2, 108..111 : $adf_f3, 72..75 : $adf_f0, 76..79 : $adf_f1 }
  ternary_match _Lemont_0 8:
    p4: { name: Lemont, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Ravena: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Ravena" }
      HillTop.RossFork.Bradner: { type: ternary, size: 2, full_size: 2, key_name: "RossFork.Bradner" }
      HillTop.RossFork.TroutRun: { type: ternary, size: 2, full_size: 2, key_name: "RossFork.TroutRun" }
      HillTop.Wisdom.Piqua: { type: exact, size: 1, full_size: 1, key_name: "Wisdom.Piqua" }
      HillTop.Wisdom.Morstein: { type: ternary, size: 1, full_size: 20, key_name: "Wisdom.Morstein", start_bit: 19 }
    row: 4
    bus: 1
    column: 1
    input_xbar:
      ternary group 6: { 4: HillTop.RossFork.Bradner, 11: HillTop.Wisdom.Morstein(19), 20: HillTop.RossFork.Ravena, 28: HillTop.Wisdom.Piqua, 38: HillTop.RossFork.TroutRun }
    match:
    - { group: 6, dirtcam: 0x155 }
    hit: [  _OldTown ]
    miss:  _OldTown
    indirect: _Lemont_0$tind
  ternary_indirect _Lemont_0$tind:
    row: 5
    bus: 0
    column: 4
    input_xbar:
      ternary group 6: { 4: HillTop.RossFork.Bradner, 11: HillTop.Wisdom.Morstein(19), 20: HillTop.RossFork.Ravena, 28: HillTop.Wisdom.Piqua, 38: HillTop.RossFork.TroutRun }
    format: { action: 0..0, immediate: 1..8 }
    action_bus: { 0 : immediate(0..7) }
    instruction: _Lemont_0$tind(action, $DEFAULT)
    actions:
      Frederika(0, 7):
      - p4_param_order: { Blencoe: 8 }
      - default_action: { allowed: true }
      - handle: 0x200000db
      - next_table: 0
      - { Blencoe: immediate(0..7) }
      - set HillTop.Wisdom.Havana, 1
      - set HillTop.Wisdom.Blencoe, Blencoe
      Saugatuck(1, 0):
      - default_action: { allowed: true }
      - handle: 0x200000dc
      - next_table: 0
      - {  }
      NoAction(-1, 9):
      - default_only_action: { allowed: true }
      - handle: 0x200000dd
      - next_table: 0
      - {  }
    default_only_action: NoAction
  exact_match _Casnovia_0 4:
    p4: { name: Casnovia, size: 4096, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Montross: { type: exact, size: 12, full_size: 12, key_name: "RossFork.Montross" }
      HillTop.Maddock.Kaluaaha: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Kaluaaha" }
      Millston.Grays.Chevak: { type: exact, size: 16, full_size: 16, key_name: "Grays.Chevak" }
      HillTop.RossFork.Brinklow: { type: exact, size: 8, full_size: 8, key_name: "RossFork.Brinklow" }
    row: [ 2, 1 ]
    bus: [ 1, 0 ]
    column:
    - [ 4, 6 ]
    - [ 2, 3 ]
    stash: 
      row: [ 2 ]
      col: [ 4 ]
      unit: [ 0 ]
    ways:
      - [4, 0, 0x0, [2, 4]]
      - [4, 1, 0x0, [2, 6]]
      - [4, 2, 0x0, [1, 2]]
      - [4, 3, 0x0, [1, 3]]
    input_xbar:
      exact group 3: { 0: HillTop.Maddock.Kaluaaha(0..7), 9: HillTop.RossFork.Brinklow, 24: HillTop.Maddock.Kaluaaha(24..31), 32: HillTop.RossFork.Montross(0..7), 40: HillTop.Maddock.Kaluaaha(8..23), 56: Millston.Grays.Chevak(8..15), 64: Millston.Grays.Chevak(0..7), 72: HillTop.RossFork.Montross(8..11) }
      hash 6:
        6..9: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23), Millston.Grays.Chevak(8..15))
        0..4: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23), Millston.Grays.Chevak(8..15)) ^ HillTop.RossFork.Brinklow(0..4)
        5: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23), Millston.Grays.Chevak(8..15)) ^ HillTop.RossFork.Brinklow(7)
        10: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23), Millston.Grays.Chevak(8..15))
        17..19: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23), Millston.Grays.Chevak(8..15))
        11..15: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23), Millston.Grays.Chevak(8..15)) ^ HillTop.RossFork.Brinklow(0..4)
        16: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23), Millston.Grays.Chevak(8..15)) ^ HillTop.RossFork.Brinklow(7)
        20..21: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23), Millston.Grays.Chevak(8..15))
        28..29: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23), Millston.Grays.Chevak(8..15))
        22..26: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23), Millston.Grays.Chevak(8..15)) ^ HillTop.RossFork.Brinklow(0..4)
        27: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23), Millston.Grays.Chevak(8..15)) ^ HillTop.RossFork.Brinklow(7)
        30..32: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23), Millston.Grays.Chevak(8..15))
        39: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23), Millston.Grays.Chevak(8..15))
        33..37: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23), Millston.Grays.Chevak(8..15)) ^ HillTop.RossFork.Brinklow(0..4)
        38: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23), Millston.Grays.Chevak(8..15)) ^ HillTop.RossFork.Brinklow(7)
      hash 7:
        0..5: random(Millston.Grays.Chevak(0..7))
        6..9: random(Millston.Grays.Chevak(0..7)) ^ HillTop.RossFork.Montross(8..11)
        11..16: random(Millston.Grays.Chevak(0..7))
        17..19: random(Millston.Grays.Chevak(0..7)) ^ HillTop.RossFork.Montross(8..10)
        10: random(Millston.Grays.Chevak(0..7)) ^ HillTop.RossFork.Montross(11)
        22..27: random(Millston.Grays.Chevak(0..7))
        28..29: random(Millston.Grays.Chevak(0..7)) ^ HillTop.RossFork.Montross(8..9)
        20..21: random(Millston.Grays.Chevak(0..7)) ^ HillTop.RossFork.Montross(10..11)
        33..38: random(Millston.Grays.Chevak(0..7))
        39: random(Millston.Grays.Chevak(0..7)) ^ HillTop.RossFork.Montross(8)
        30..32: random(Millston.Grays.Chevak(0..7)) ^ HillTop.RossFork.Montross(9..11)
      hash group 4:
        table: [6, 7]
        seed: 0x67c3de1bef
    format: { action(0): 0..1, immediate(0): 2..33, version(0): 112..115, match(0): [40..55, 38..39, 56..95 ] }
    match: [ Millston.Grays.Chevak(0..7), Millston.Grays.Chevak(8..15), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(0..7), HillTop.Maddock.Kaluaaha(8..15), HillTop.Maddock.Kaluaaha(16..23), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7) ]
    hit: [  _OldTown,  _OldTown,  _Sunbury_0 ]
    miss:  _OldTown
    action_bus: { 100..103 : immediate(0..31) }
    action: _Casnovia_0$action_data($DIRECT, $DEFAULT)
    instruction: _Casnovia_0(action, $DEFAULT)
    actions:
      Garrison(0, 8):
      - p4_param_order: { Kaluaaha: 32, Bratt: 32 }
      - default_action: { allowed: true }
      - handle: 0x200000d2
      - next_table: 0
      - { Kaluaaha: $adf_f0(0..31), Bratt.0-15: immediate(0..15) }
      - set HillTop.Maddock.Kaluaaha, Kaluaaha
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Boerne, 1
      Dacono(1, 10):
      - p4_param_order: { Kaluaaha: 32, Avondale: 16, Bratt: 32 }
      - default_action: { allowed: true }
      - handle: 0x200000d3
      - next_table: 1
      - { Bratt.0-15: $adf_f0(0..15), Avondale: $adf_h1(0..15), Kaluaaha: immediate(0..31) }
      - set HillTop.RossFork.Glenmora, Avondale
      - set HillTop.Maddock.Kaluaaha, Kaluaaha
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Boerne, 1
      Sequim(2, 0):
      - default_action: { allowed: true }
      - handle: 0x200000d4
      - next_table: 2
      - {  }
    default_action: Sequim
  action _Casnovia_0$action_data:
    p4: { name: Casnovia$action }
    row: 7
    column: 1
    vpns: [ 0 ]
    home_row:
    - 7
    format Garrison: { $adf_f0: 0..31 }
    format Dacono: { $adf_f0: 0..31, $adf_h1: 16..31 }
    action_bus: { 42..43 : $adf_h1, 40..43 : $adf_f0 }
  exact_match _Sunbury_0 5:
    p4: { name: Sunbury, size: 1024, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Maddock.Kaluaaha: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Kaluaaha" }
      HillTop.RossFork.Brinklow: { type: exact, size: 8, full_size: 8, key_name: "RossFork.Brinklow" }
      Millston.Osyka.Noyes: { type: exact, size: 3, full_size: 8, key_name: "Osyka.Noyes" }
    row: [ 3, 2 ]
    bus: [ 1, 0 ]
    column:
    - [ 4, 6 ]
    - [ 2, 3 ]
    stash: 
      row: [ 3 ]
      col: [ 4 ]
      unit: [ 0 ]
    ways:
      - [5, 0, 0x0, [3, 4]]
      - [5, 1, 0x0, [3, 6]]
      - [5, 2, 0x0, [2, 2]]
      - [5, 3, 0x0, [2, 3]]
    input_xbar:
      exact group 4: { 0: HillTop.Maddock.Kaluaaha(0..7), 9: HillTop.RossFork.Brinklow, 24: HillTop.Maddock.Kaluaaha(24..31), 32: Millston.Osyka.Noyes(0..2), 40: HillTop.Maddock.Kaluaaha(8..23) }
      hash 8:
        0..5: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(6), HillTop.Maddock.Kaluaaha(24..31), HillTop.Maddock.Kaluaaha(8..23)) ^ HillTop.RossFork.Brinklow(0..5)
        6: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(6), HillTop.Maddock.Kaluaaha(24..31), HillTop.Maddock.Kaluaaha(8..23)) ^ HillTop.RossFork.Brinklow(7)
        7..9: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(6), HillTop.Maddock.Kaluaaha(24..31), HillTop.Maddock.Kaluaaha(8..23)) ^ Millston.Osyka.Noyes(0..2)
        11..16: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(6), HillTop.Maddock.Kaluaaha(24..31), HillTop.Maddock.Kaluaaha(8..23)) ^ HillTop.RossFork.Brinklow(0..5)
        17: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(6), HillTop.Maddock.Kaluaaha(24..31), HillTop.Maddock.Kaluaaha(8..23)) ^ HillTop.RossFork.Brinklow(7)
        18..19: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(6), HillTop.Maddock.Kaluaaha(24..31), HillTop.Maddock.Kaluaaha(8..23)) ^ Millston.Osyka.Noyes(0..1)
        10: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(6), HillTop.Maddock.Kaluaaha(24..31), HillTop.Maddock.Kaluaaha(8..23)) ^ Millston.Osyka.Noyes(2)
        22..27: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(6), HillTop.Maddock.Kaluaaha(24..31), HillTop.Maddock.Kaluaaha(8..23)) ^ HillTop.RossFork.Brinklow(0..5)
        28: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(6), HillTop.Maddock.Kaluaaha(24..31), HillTop.Maddock.Kaluaaha(8..23)) ^ HillTop.RossFork.Brinklow(7)
        29: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(6), HillTop.Maddock.Kaluaaha(24..31), HillTop.Maddock.Kaluaaha(8..23)) ^ Millston.Osyka.Noyes(0)
        20..21: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(6), HillTop.Maddock.Kaluaaha(24..31), HillTop.Maddock.Kaluaaha(8..23)) ^ Millston.Osyka.Noyes(1..2)
        33..38: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(6), HillTop.Maddock.Kaluaaha(24..31), HillTop.Maddock.Kaluaaha(8..23)) ^ HillTop.RossFork.Brinklow(0..5)
        39: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(6), HillTop.Maddock.Kaluaaha(24..31), HillTop.Maddock.Kaluaaha(8..23)) ^ HillTop.RossFork.Brinklow(7)
        30..32: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(6), HillTop.Maddock.Kaluaaha(24..31), HillTop.Maddock.Kaluaaha(8..23)) ^ Millston.Osyka.Noyes(0..2)
      hash group 5:
        table: [8]
        seed: 0x9ee4d2fffa
    format: { action(0): 0..0, immediate(0): 1..16, version(0): 112..115, match(0): [71..71, 32..63 ] }
    match: [ HillTop.RossFork.Brinklow(6), HillTop.Maddock.Kaluaaha(0..7), HillTop.Maddock.Kaluaaha(8..15), HillTop.Maddock.Kaluaaha(16..23), HillTop.Maddock.Kaluaaha(24..31) ]
    hit: [  _OldTown,  _Flaherty_0 ]
    miss:  _OldTown
    action_bus: { 112..115 : immediate(0..15) }
    action: _Sunbury_0$action_data($DIRECT, $DEFAULT)
    instruction: _Sunbury_0(action, $DEFAULT)
    actions:
      Milano(0, 12):
      - p4_param_order: { Kaluaaha: 32, Bratt: 32 }
      - default_action: { allowed: true }
      - handle: 0x200000d5
      - next_table: 0
      - { Kaluaaha: $adf_f0(0..31), Bratt.0-15: immediate(0..15) }
      - set HillTop.Maddock.Kaluaaha, Kaluaaha
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Boerne, 1
      Sequim(1, 0):
      - default_action: { allowed: true }
      - handle: 0x200000d6
      - next_table: 1
      - {  }
    default_action: Sequim
    idletime:
      row: 0
      bus: 0
      column: 0
      precision: 1
      sweep_interval: 7
      notification: enable
      per_flow_enable: false
  action _Sunbury_0$action_data:
    p4: { name: Sunbury$action }
    row: 9
    column: 1
    vpns: [ 0 ]
    home_row:
    - 9
    format Milano: { $adf_f0: 0..31 }
    action_bus: { 120..123 : $adf_f0 }
  exact_match _Flaherty_0 6:
    p4: { name: Flaherty, size: 10240, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Montross: { type: exact, size: 12, full_size: 12, key_name: "RossFork.Montross" }
      HillTop.Maddock.Kaluaaha: { type: exact, size: 32, full_size: 32, key_name: "Maddock.Kaluaaha" }
      HillTop.RossFork.Brinklow: { type: exact, size: 8, full_size: 8, key_name: "RossFork.Brinklow" }
    row: [ 5, 6, 7 ]
    bus: [ 0, 0, 0 ]
    column:
    - [ 2, 3 ]
    - [ 2, 3 ]
    - [ 2, 3 ]
    stash: 
      row: [ 5, 6, 7 ]
      col: [ 2, 2, 2 ]
      unit: [ 0, 0, 0 ]
    ways:
      - [0, 2, 0x0, [7, 2], [6, 2], [5, 2]]
      - [0, 3, 0x0, [7, 3], [6, 3], [5, 3]]
    input_xbar:
      exact group 5: { 0: HillTop.Maddock.Kaluaaha(0..7), 9: HillTop.RossFork.Brinklow, 24: HillTop.Maddock.Kaluaaha(24..31), 32: HillTop.RossFork.Montross(0..7), 40: HillTop.Maddock.Kaluaaha(8..23), 72: HillTop.RossFork.Montross(8..11) }
      hash 10:
        26..29: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23))
        20..24: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23)) ^ HillTop.RossFork.Brinklow(0..4)
        25: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23)) ^ HillTop.RossFork.Brinklow(7)
        30: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23))
        37..39: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23))
        31..35: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23)) ^ HillTop.RossFork.Brinklow(0..4)
        36: random(HillTop.Maddock.Kaluaaha(0..7), HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7), HillTop.Maddock.Kaluaaha(8..23)) ^ HillTop.RossFork.Brinklow(7)
      hash 11:
        26..29: HillTop.RossFork.Montross(8..11)
        37..39: HillTop.RossFork.Montross(8..10)
        30: HillTop.RossFork.Montross(11)
      hash group 0:
        table: [10, 11]
        seed: 0x57fe600000
    format: { action(0): 1..1, immediate(0): 2..17, version(0): 112..115, match(0): 38..79, action(1): 0..0, immediate(1): 18..33, version(1): 244..247, match(1): [118..119, 80..111, 120..127 ], action(2): 129..129, immediate(2): 130..145, version(2): 240..243, match(2): 166..207, action(3): 128..128, immediate(3): 146..161, version(3): 372..375, match(3): [326..327, 208..239, 248..255 ], action(4): 256..256, immediate(4): 257..272, version(4): 368..371, match(4): 278..319 }
    match: [ HillTop.RossFork.Brinklow(5..6), HillTop.Maddock.Kaluaaha(0..7), HillTop.Maddock.Kaluaaha(8..15), HillTop.Maddock.Kaluaaha(16..23), HillTop.Maddock.Kaluaaha(24..31), HillTop.RossFork.Montross(0..7) ]
    hit: [  _OldTown,  _Almota_0 ]
    miss:  _OldTown
    action_bus: { 116..119 : immediate(0..15) }
    action: _Flaherty_0$action_data($DIRECT, $DEFAULT)
    instruction: _Flaherty_0(action, $DEFAULT)
    actions:
      Garrison(0, 14):
      - p4_param_order: { Kaluaaha: 32, Bratt: 32 }
      - default_action: { allowed: true }
      - handle: 0x200000d7
      - next_table: 0
      - { Kaluaaha: $adf_f0(0..31), Bratt.0-15: immediate(0..15) }
      - set HillTop.Maddock.Kaluaaha, Kaluaaha
      - set HillTop.RossFork.Bucktown(0..15), Bratt.0-15
      - set HillTop.RossFork.Boerne, 1
      Sequim(1, 0):
      - default_action: { allowed: true }
      - handle: 0x200000d8
      - next_table: 1
      - {  }
    default_action: Sequim
  action _Flaherty_0$action_data:
    p4: { name: Flaherty$action }
    row: 13
    column: [ 2, 3, 4 ]
    vpns: [ 0, 1, 2 ]
    home_row:
    - 13
    format Garrison: { $adf_f0: 0..31 }
    action_bus: { 80..83 : $adf_f0 }
  ternary_match _Almota_0 7:
    p4: { name: Almota, size: 1024, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.RossFork.Chaffee: { type: ternary, size: 8, full_size: 8, key_name: "RossFork.Chaffee" }
      HillTop.RossFork.Brinklow: { type: ternary, size: 8, full_size: 8, key_name: "RossFork.Brinklow" }
      HillTop.Maddock.Kaluaaha: { type: ternary, size: 32, full_size: 32, key_name: "Maddock.Kaluaaha" }
      HillTop.Maddock.Calcasieu: { type: ternary, size: 32, full_size: 32, key_name: "Maddock.Calcasieu" }
      HillTop.RossFork.Chevak: { type: ternary, size: 16, full_size: 16, key_name: "RossFork.Chevak" }
      HillTop.RossFork.Mendocino: { type: ternary, size: 16, full_size: 16, key_name: "RossFork.Mendocino" }
      HillTop.RossFork.Ocoee: { type: ternary, size: 8, full_size: 8, key_name: "RossFork.Ocoee" }
      HillTop.RossFork.Suttle: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Suttle" }
      Millston.Osyka.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Osyka" }
      Millston.Osyka.Noyes: { type: ternary, size: 8, full_size: 8, key_name: "Osyka.Noyes" }
    row: [ 8, 9, 10, 11, 0, 1, 2, 3 ]
    bus: [ 0, 0, 0, 0, 1, 1, 1, 1 ]
    column:
    - 0
    - 0
    - 0
    - 0
    - 1
    - 1
    - 1
    - 1
    input_xbar:
      ternary group 0: { 0: HillTop.Maddock.Kaluaaha, 32: HillTop.RossFork.Chaffee }
      ternary group 1: { 0: HillTop.RossFork.Mendocino, 16: HillTop.RossFork.Chevak, 38: Millston.Osyka.$valid }
      ternary group 2: { 0: Millston.Osyka.Noyes, 8: HillTop.RossFork.Ocoee }
      ternary group 3: { 1: HillTop.RossFork.Brinklow(0..6), 8: HillTop.Maddock.Calcasieu(16..31), 24: HillTop.Maddock.Calcasieu(0..15) }
      byte group 0: { 0: HillTop.RossFork.Suttle }
      byte group 3: { 0: HillTop.RossFork.Brinklow(7) }
    match:
    - { group: 0, byte_group: 0, byte_config: 0, dirtcam: 0x555 }
    - { group: 1, dirtcam: 0x155 }
    - { group: 2, byte_group: 3, byte_config: 0, dirtcam: 0x405 }
    - { group: 3, dirtcam: 0x155 }
    gateway:
      name: cond-34
      input_xbar:
        exact group 3: { 83: HillTop.Murphy.Standish, 94: HillTop.Murphy.Blairsden }
      row: 1
      bus: 0
      unit: 0
      match: { 3: HillTop.Murphy.Standish, 14: HillTop.Murphy.Blairsden }
      0b*0**********0: run_table
      miss:  _OldTown
      condition: 
        expression: "(HillTop.Murphy.Standish == 0 && HillTop.Murphy.Blairsden == 0)"
        true:  _Almota_0
        false:  _OldTown
    hit: [ [],  _OldTown,  _Lemont_0 ]
    miss:  _OldTown
    indirect: _Almota_0$tind
  ternary_indirect _Almota_0$tind:
    row: 6
    bus: 0
    column: 4
    input_xbar:
      ternary group 0: { 0: HillTop.Maddock.Kaluaaha, 32: HillTop.RossFork.Chaffee }
      ternary group 1: { 0: HillTop.RossFork.Mendocino, 16: HillTop.RossFork.Chevak, 38: Millston.Osyka.$valid }
      ternary group 2: { 0: Millston.Osyka.Noyes, 8: HillTop.RossFork.Ocoee }
      ternary group 3: { 1: HillTop.RossFork.Brinklow(0..6), 8: HillTop.Maddock.Calcasieu(16..31), 24: HillTop.Maddock.Calcasieu(0..15) }
      byte group 0: { 0: HillTop.RossFork.Suttle }
      byte group 3: { 0: HillTop.RossFork.Brinklow(7) }
    format: { action: 0..1, immediate: 2..21 }
    action_bus: { 124..127 : immediate(0..19) }
    instruction: _Almota_0$tind(action, $DEFAULT)
    actions:
      Peoria(1, 5):
      - default_action: { allowed: true }
      - handle: 0x200000d9
      - next_table: 1
      - { $constant0: immediate(0..19), $constant0: 511 }
      - set HillTop.Wisdom.Havana, 1
      - set HillTop.Wisdom.Blencoe, HillTop.RossFork.Ankeny
      - set HillTop.Wisdom.Morstein, $constant0
      Sequim(2, 0):
      - default_action: { allowed: true }
      - handle: 0x200000da
      - next_table: 2
      - {  }
    default_action: Sequim
stage 10 ingress:
  ternary_match _OldTown 1:
    p4: { name: OldTown, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      Millston.Rainelle.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Rainelle" }
      HillTop.Wisdom.Blencoe: { type: ternary, size: 8, full_size: 8, key_name: "Wisdom.Blencoe" }
      HillTop.Wisdom.Havana: { type: ternary, size: 1, full_size: 1, key_name: "Wisdom.Havana" }
      HillTop.RossFork.Pridgen: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Pridgen" }
      HillTop.RossFork.Ocoee: { type: ternary, size: 8, full_size: 8, key_name: "RossFork.Ocoee" }
      HillTop.RossFork.Chevak: { type: ternary, size: 16, full_size: 16, key_name: "RossFork.Chevak" }
      HillTop.RossFork.Mendocino: { type: ternary, size: 16, full_size: 16, key_name: "RossFork.Mendocino" }
    row: [ 8, 9 ]
    bus: [ 0, 0 ]
    column:
    - 0
    - 0
    indirect_bus: 1
    input_xbar:
      ternary group 8: { 0: HillTop.RossFork.Chevak(0..7), 8: HillTop.Wisdom.Blencoe, 16: HillTop.RossFork.Ocoee, 27: Millston.Rainelle.$valid }
      ternary group 10: { 0: HillTop.RossFork.Mendocino(8..15), 8: HillTop.Wisdom.Havana, 23: HillTop.RossFork.Pridgen, 24: HillTop.RossFork.Mendocino(0..7), 32: HillTop.RossFork.Chevak(8..15) }
    match:
    - { group: 8, dirtcam: 0x55 }
    - { group: 10, dirtcam: 0x155 }
    hit: [  _Trevorton ]
    miss:  _Trevorton
    action: _OldTown$action_data($DIRECT, $DEFAULT)
    instruction: _OldTown($DEFAULT, $DEFAULT)
    actions:
      Lynne(0, 1):
      - p4_param_order: { Pajaros: 5 }
      - default_action: { allowed: true }
      - handle: 0x200000e8
      - next_table: 0
      - { Pajaros: $adf_b0(0..4) }
      - set HillTop.Edwards.Pajaros, Pajaros
    default_action: Lynne
    default_action_parameters:
      Pajaros: "0x0"
  action _OldTown$action_data:
    p4: { name: OldTown$action }
    row: 13
    column: 4
    vpns: [ 0 ]
    home_row:
    - 13
    format Lynne: { $adf_b0: 0..7 }
    action_bus: { 2 : $adf_b0 }
  exact_match _Trevorton 2:
    p4: { name: Trevorton, size: 1024, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Minturn.Whitewood: { type: exact, size: 10, full_size: 10, key_name: "Minturn.Whitewood" }
    row: 4
    bus: 1
    column: 3
    stash: 
      row: [ 4 ]
      col: [ 3 ]
      unit: [ 0 ]
    ways:
      - [0, 0, 0x0, [4, 3]]
    input_xbar:
      exact group 0: { 0: HillTop.Minturn.Whitewood }
      hash 0:
        0..7: HillTop.Minturn.Whitewood(0..7)
        8..9: HillTop.Minturn.Whitewood(8..9)
      hash group 0:
        table: [0]
        seed: 0x0
    format: { action(0): 0..0, version(0): 112..115, meter_addr(0): 1..10, meter_pfe(0): 11..11 }
    hit: [  _Ivanpah ]
    miss:  _Ivanpah
    action_bus: { 3 : _Trevorton$meter..Lacombe color }
    meter: _Trevorton$meter..Lacombe(meter_addr, meter_pfe, $DEFAULT)
    meter_color : _Trevorton$meter..Lacombe(meter_addr, meter_pfe)
    instruction: _Trevorton(action, $DEFAULT)
    actions:
      Clifton(0, 2):
      - p4_param_order: { Kingsland: 32 }
      - default_action: { allowed: true }
      - handle: 0x200000de
      - next_table: 0
      - { Kingsland: meter_addr }
      - set HillTop.Minturn.Tilton, _Trevorton$meter..Lacombe color(0..1)
      - _Trevorton$meter..Lacombe(2, Kingsland)
      Eaton(1, 4):
      - default_action: { allowed: true }
      - handle: 0x200000df
      - next_table: 0
      - set HillTop.Minturn.Tilton, 2
    default_action: Eaton
  meter _Trevorton$meter..Lacombe:
    p4: { name: Lacombe, size: 128 }
    row: 15
    column: [ 2, 3 ]
    maprams: [ 2, 3 ]
    color_maprams:
      row: 7
      bus: 0
      column: 0
      address: idletime
    type: standard
    count: bytes
    per_flow_enable: meter_pfe
  ternary_match _Ivanpah 3:
    p4: { name: Ivanpah, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Komatke.Monahans: { type: ternary, size: 1, full_size: 1, key_name: "Komatke.Monahans" }
      HillTop.Moose.Monahans: { type: ternary, size: 1, full_size: 1, key_name: "Moose.Monahans" }
      HillTop.RossFork.Ocoee: { type: ternary, size: 8, full_size: 8, key_name: "RossFork.Ocoee" }
      HillTop.RossFork.Juniata: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Juniata" }
      HillTop.RossFork.Brinkman: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Brinkman" }
      HillTop.RossFork.Redden: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Redden" }
      HillTop.Wisdom.Havana: { type: ternary, size: 1, full_size: 1, key_name: "Wisdom.Havana" }
      HillTop.Ovett.Hammond: { type: ternary, size: 4, full_size: 4, key_name: "Ovett.Hammond" }
    row: [ 10, 11 ]
    bus: [ 0, 0 ]
    column:
    - 0
    - 0
    input_xbar:
      ternary group 7: { 16: HillTop.Ovett.Hammond.1-3, 19: HillTop.Ovett.Hammond.0-0, 21: HillTop.Moose.Monahans, 28: HillTop.Komatke.Monahans, 35: HillTop.RossFork.Juniata }
      ternary group 9: { 0: HillTop.RossFork.Ocoee, 8: HillTop.RossFork.Redden, 16: HillTop.Wisdom.Havana, 29: HillTop.RossFork.Brinkman }
    match:
    - { group: 7, dirtcam: 0x150 }
    - { group: 9, dirtcam: 0x55 }
    gateway:
      name: cond-38
      input_xbar:
        exact group 0: { 17: HillTop.Wisdom.Onycha }
      row: 1
      bus: 0
      unit: 0
      match: { 1: HillTop.Wisdom.Onycha }
      0b****010:  _Edinburgh
      miss: run_table
      condition: 
        expression: "(HillTop.Wisdom.Onycha != 2)"
        true:  _Ivanpah
        false:  _Edinburgh
    hit: [  _Edinburgh ]
    miss:  _Edinburgh
    indirect: _Ivanpah$tind
  ternary_indirect _Ivanpah$tind:
    row: 0
    bus: 0
    column: 2
    input_xbar:
      ternary group 7: { 16: HillTop.Ovett.Hammond.1-3, 19: HillTop.Ovett.Hammond.0-0, 21: HillTop.Moose.Monahans, 28: HillTop.Komatke.Monahans, 35: HillTop.RossFork.Juniata }
      ternary group 9: { 0: HillTop.RossFork.Ocoee, 8: HillTop.RossFork.Redden, 16: HillTop.Wisdom.Havana, 29: HillTop.RossFork.Brinkman }
    format: { action: 0..2, immediate: 3..34 }
    action_bus: { 64..65 : immediate(0..15), 66..67 : immediate(16..31) }
    instruction: _Ivanpah$tind(action, $DEFAULT)
    actions:
      Langford(1, 3):
      - p4_param_order: { Pinole: 1 }
      - default_action: { allowed: true }
      - handle: 0x200000e9
      - next_table: 0
      - { Pinole: immediate(0..0) }
      - deposit-field H7(0..11), H1(0..11), H5
      - or H52, Pinole, H62
      Cowley(2, 5):
      - p4_param_order: { Pinole: 1 }
      - default_action: { allowed: true }
      - handle: 0x200000ea
      - next_table: 0
      - { Pinole: immediate(0..0) }
      - set ig_intr_md_for_tm.mcast_grp_a, HillTop.Moose.Townville
      - or H52, Pinole, H56
      Lackey(3, 6):
      - p4_param_order: { Pinole: 1 }
      - default_action: { allowed: true }
      - handle: 0x200000eb
      - next_table: 0
      - { Pinole: immediate(0..0), $constant0: immediate(16..31), $constant0: 4096 }
      - add ig_intr_md_for_tm.mcast_grp_a, HillTop.Wisdom.Nenana, $constant0
      - set ig_intr_md_for_tm.copy_to_cpu, Pinole
      Trion(4, 8):
      - p4_param_order: { Pinole: 1 }
      - default_action: { allowed: true }
      - handle: 0x200000ec
      - next_table: 0
      - { Pinole: immediate(0..0) }
      - set ig_intr_md_for_tm.mcast_grp_a, 0
      - set ig_intr_md_for_tm.copy_to_cpu, Pinole
      Baldridge(5, 10):
      - p4_param_order: { Pinole: 1 }
      - default_action: { allowed: true }
      - handle: 0x200000ed
      - next_table: 0
      - { Pinole: immediate(0..0) }
      - deposit-field H7(12..15), 0, H2
      - or H52, Pinole, H52
      Carlson(6, 12):
      - default_action: { allowed: true }
      - handle: 0x200000ee
      - next_table: 0
      - { $constant0: immediate(0..15), $constant0: 4096 }
      - add ig_intr_md_for_tm.mcast_grp_a, HillTop.Wisdom.Nenana, $constant0
      - set ig_intr_md_for_tm.copy_to_cpu, 1
      - set HillTop.Wisdom.Blencoe, 26
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x200000ef
      - next_table: 0
      - {  }
    default_only_action: NoAction
  exact_match _Edinburgh 4:
    p4: { name: Edinburgh, size: 16384, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Bessie.Miranda: { type: exact, size: 8, full_size: 8, key_name: "Bessie.Miranda" }
      HillTop.Savery.Kaluaaha: { type: exact, size: 16, full_size: 16, key_name: "Savery.Kaluaaha" }
      HillTop.Savery.Calcasieu: { type: exact, size: 16, full_size: 16, key_name: "Savery.Calcasieu" }
      HillTop.Savery.Chevak: { type: exact, size: 16, full_size: 16, key_name: "Savery.Chevak" }
      HillTop.Savery.Mendocino: { type: exact, size: 16, full_size: 16, key_name: "Savery.Mendocino" }
      HillTop.Savery.LasVegas: { type: exact, size: 8, full_size: 8, key_name: "Savery.LasVegas" }
      HillTop.Savery.PineCity: { type: exact, size: 6, full_size: 6, key_name: "Savery.PineCity" }
      HillTop.Savery.Exton: { type: exact, size: 8, full_size: 8, key_name: "Savery.Exton" }
      HillTop.Savery.Noyes: { type: exact, size: 8, full_size: 8, key_name: "Savery.Noyes" }
      HillTop.Savery.Peebles: { type: exact, size: 1, full_size: 1, key_name: "Savery.Peebles" }
    row: [ 7, 6, 5, 4 ]
    bus: [ 0, 0, 0, 0 ]
    column:
    - [ 2, 3, 4, 6, 7 ]
    - [ 2, 3, 4, 6, 7 ]
    - [ 2, 3, 4, 6, 7 ]
    - 2
    stash: 
      row: [ 7 ]
      col: [ 2 ]
      unit: [ 0 ]
    ways:
      - [0, 1, 0xf, [7, 2], [7, 3], [7, 4], [7, 6], [7, 7], [6, 2], [6, 3], [6, 4], [6, 6], [6, 7], [5, 2], [5, 3], [5, 4], [5, 6], [5, 7], [4, 2]]
    input_xbar:
      exact group 1: { 0: HillTop.Savery.Chevak, 16: HillTop.Savery.Mendocino, 32: HillTop.Savery.Calcasieu, 48: HillTop.Savery.Kaluaaha, 68: HillTop.Bessie.Miranda, 86: HillTop.Savery.PineCity, 101: HillTop.Savery.Peebles, 104: HillTop.Savery.Noyes, 112: HillTop.Savery.LasVegas, 120: HillTop.Savery.Exton }
      hash 2:
        10..19: random(HillTop.Savery.Chevak, HillTop.Savery.Mendocino, HillTop.Savery.Calcasieu, HillTop.Savery.Kaluaaha)
        40..43: random(HillTop.Savery.Chevak, HillTop.Savery.Mendocino, HillTop.Savery.Calcasieu, HillTop.Savery.Kaluaaha)
      hash 3:
        10..13: random(HillTop.Savery.PineCity(5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Bessie.Miranda(0..3)
        14..17: random(HillTop.Savery.PineCity(5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Bessie.Miranda(4..7)
        18..19: random(HillTop.Savery.PineCity(5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Savery.PineCity(0..1)
        40..42: random(HillTop.Savery.PineCity(5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Savery.PineCity(2..4)
        43: random(HillTop.Savery.PineCity(5), HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton) ^ HillTop.Savery.Peebles
      hash group 0:
        table: [2, 3]
        seed: 0x10000068400
    format: { action(0): 0..0, version(0): 112..115, match(0): [32..111, 8..15, 3..3 ] }
    match: [ HillTop.Savery.Noyes, HillTop.Savery.LasVegas, HillTop.Savery.Exton, HillTop.Savery.Chevak(0..7), HillTop.Savery.Chevak(8..15), HillTop.Savery.Mendocino(0..7), HillTop.Savery.Mendocino(8..15), HillTop.Savery.Calcasieu(0..7), HillTop.Savery.Calcasieu(8..15), HillTop.Savery.Kaluaaha(0..7), HillTop.Savery.Kaluaaha(8..15), HillTop.Savery.PineCity(5) ]
    gateway:
      name: cond-39
      input_xbar:
        exact group 0: { 29: HillTop.Ovett.Hematite, 32: HillTop.RossFork.Yaurel }
      row: 0
      bus: 1
      unit: 1
      match: { 0: HillTop.RossFork.Yaurel, 13: HillTop.Ovett.Hematite }
      0b**0************1:  Newcomb_0
      miss: run_table
      condition: 
        expression: "(HillTop.RossFork.Yaurel == 1 && HillTop.Ovett.Hematite == 0)"
        true:  Newcomb_0
        false:  _Edinburgh
    hit: [  cond-35 ]
    miss:  cond-35
    action: _Edinburgh$action_data($DIRECT, $DEFAULT)
    instruction: _Edinburgh(action, $DEFAULT)
    actions:
      Unionvale(1, 7):
      - p4_param_order: { Cornell: 32 }
      - default_action: { allowed: true }
      - handle: 0x200000f1
      - next_table: 0
      - { Cornell: $adf_f0(0..31) }
      - maxu HillTop.Mausdale.Kenney, HillTop.Mausdale.Kenney, Cornell
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x200000f2
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action _Edinburgh$action_data:
    p4: { name: Edinburgh$action }
    row: [ 15, 14, 13 ]
    word: [ 0, 0, 0 ]
    column:
    - [ 4, 5 ]
    - 5
    - 5
    vpns: 
    - [ 0, 1 ]
    - [ 2 ]
    - [ 3 ]
    home_row:
    - 15
    format Unionvale: { $adf_f0: 0..31 }
    action_bus: { 96..99 : $adf_f0 }
  ternary_match Newcomb_0 5:
    p4: { name: Newcomb, size: 1, disable_atomic_modify : true }
    hit: [  cond-35 ]
    miss:  cond-35
    indirect: Newcomb_0$tind
  ternary_indirect Newcomb_0$tind:
    row: 2
    bus: 0
    format: { action: 0..0 }
    instruction: Newcomb_0$tind(action, $DEFAULT)
    actions:
      Terry(0, 9):
      - default_action: { allowed: true }
      - handle: 0x200000f0
      - next_table: 0
      - set HillTop.Mausdale.Kenney, 0
    default_action: Terry
  gateway cond-35 6:
    name: cond-35
    input_xbar:
      exact group 0: { 36: HillTop.Wisdom.Piqua, 46: HillTop.Murphy.Blairsden, 53: HillTop.RossFork.Weyauwega, 62: HillTop.RossFork.Tenino, 63: HillTop.RossFork.Pridgen, 64: HillTop.Wisdom.Havana, 75: HillTop.Murphy.Standish }
      hash 0:
        44: HillTop.RossFork.Pridgen
        46: HillTop.Murphy.Blairsden
      hash 1:
        45: HillTop.Murphy.Standish
      hash group 0:
        table: [0, 1]
        seed: 0x0
    row: 4
    bus: 1
    unit: 0
    match: { 0: HillTop.Wisdom.Havana, 13: HillTop.RossFork.Weyauwega, 20: HillTop.Wisdom.Piqua, 30: HillTop.RossFork.Tenino, 36: HillTop.RossFork.Pridgen, 37: HillTop.Murphy.Standish, 38: HillTop.Murphy.Blairsden }
    0b000*****0*********0******0************0:  _Felton
    miss:  _RockHill
    condition: 
      expression: "(HillTop.Wisdom.Havana == 0 && HillTop.RossFork.Weyauwega == 0 && HillTop.Wisdom.Piqua == 0 && HillTop.RossFork.Tenino == 0 && HillTop.RossFork.Pridgen == 0 && HillTop.Murphy.Standish == 0 && HillTop.Murphy.Blairsden == 0)"
      true:  _Felton
      false:  _RockHill
  ternary_match _Felton 7:
    p4: { name: Felton, size: 1, disable_atomic_modify : true }
    gateway:
      name: cond-36
      input_xbar:
        exact group 2: { 0: HillTop.Wisdom.Morstein, 25: HillTop.Wisdom.Onycha, 32: HillTop.RossFork.Quebrada, 57: HillTop.Wisdom.Westhoff }
        hash 4:
          48..50: HillTop.Wisdom.Westhoff
        hash group 0:
          table: [4]
          seed: 0x0
      row: 0
      bus: 0
      unit: 0
      match: { 0: HillTop.RossFork.Quebrada(0..7), 8: HillTop.RossFork.Quebrada(8..15), 16: HillTop.RossFork.Quebrada(16..19), 25: HillTop.Wisdom.Onycha, 40: HillTop.Wisdom.Westhoff }
      xor: { 0: HillTop.Wisdom.Morstein(0..7), 8: HillTop.Wisdom.Morstein(8..15), 16: HillTop.Wisdom.Morstein(16..19) }
      0b***********************00000000000000000000: run_table
      0b101************001*************************: run_table
      miss:  _Arial
      condition: 
        expression: "(HillTop.RossFork.Quebrada == HillTop.Wisdom.Morstein || HillTop.Wisdom.Onycha == 1 && HillTop.Wisdom.Westhoff == 5)"
        true:  _Felton
        false:  _Arial
    hit: [  _RockHill ]
    miss:  _RockHill
    indirect: _Felton$tind
  ternary_indirect _Felton$tind:
    row: 1
    bus: 1
    format: { action: 0..0 }
    instruction: _Felton$tind(action, $DEFAULT)
    actions:
      Sedona(1, 11):
      - default_action: { allowed: true }
      - handle: 0x200000e0
      - next_table: 0
      - set HillTop.RossFork.Charco, 1
    default_action: Sedona
  exact_match _Arial 8:
    p4: { name: Arial, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Morstein: { type: exact, size: 11, full_size: 20, key_name: "Wisdom.Morstein" }
    row: 3
    bus: 0
    column: 2
    stash: 
      row: [ 3 ]
      col: [ 2 ]
      unit: [ 0 ]
    ways:
      - [0, 2, 0x0, [3, 2]]
    input_xbar:
      exact group 2: { 0: HillTop.Wisdom.Morstein(0..10) }
      hash 4:
        20..26: random(HillTop.Wisdom.Morstein(7)) ^ HillTop.Wisdom.Morstein(0..6)
        27..29: random(HillTop.Wisdom.Morstein(7)) ^ HillTop.Wisdom.Morstein(8..10)
      hash group 0:
        table: [4]
        seed: 0x30500000
    format: { action(0): 0..1, version(0): 112..115, match(0): 39..39 }
    match: [ HillTop.Wisdom.Morstein(7) ]
    gateway:
      name: cond-37
      input_xbar:
        exact group 2: { 11: HillTop.Wisdom.Morstein(11..19), 64: HillTop.Lamona.Whitefish }
      row: 3
      bus: 0
      unit: 0
      match: { 16: HillTop.Lamona.Whitefish, 3: HillTop.Wisdom.Morstein(11..15), 8: HillTop.Wisdom.Morstein(16..19) }
      0b******10****000000111: run_table
      miss:  _RockHill
      condition: 
        expression: "(HillTop.Lamona.Whitefish == 2 && HillTop.Wisdom.Morstein & 1046528 == 14336)"
        true:  _Arial
        false:  _RockHill
    hit: [  _RockHill ]
    miss:  _RockHill
    instruction: _Arial(action, $DEFAULT)
    actions:
      Swisshome(1, 0):
      - default_action: { allowed: true }
      - handle: 0x200000e1
      - next_table: 0
      Kotzebue(2, 13):
      - default_action: { allowed: true }
      - handle: 0x200000e2
      - next_table: 0
      - set HillTop.RossFork.Daphne, 1
    default_action: Swisshome
stage 11 ingress:
  ternary_match _RockHill 0:
    p4: { name: RockHill, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Blencoe: { type: ternary, size: 8, full_size: 8, key_name: "Wisdom.Blencoe" }
      HillTop.RossFork.Alamosa: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Alamosa" }
      HillTop.RossFork.Boerne: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Boerne" }
      HillTop.RossFork.Bucktown: { type: ternary, size: 16, full_size: 32, key_name: "RossFork.Bucktown" }
      Millston.GlenAvon.$valid: { type: ternary, size: 1, full_size: 1, key_name: "GlenAvon" }
      Millston.Brookneal.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Brookneal" }
      Millston.Gotham.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Gotham" }
      Millston.Brookneal.SoapLake: { type: ternary, size: 16, full_size: 16, key_name: "Brookneal.SoapLake" }
      HillTop.Wisdom.Onycha: { type: ternary, size: 3, full_size: 3, key_name: "Wisdom.Onycha" }
    row: [ 0, 1 ]
    bus: [ 1, 1 ]
    column:
    - 1
    - 1
    input_xbar:
      ternary group 0: { 0: Millston.Brookneal.SoapLake, 17: HillTop.Wisdom.Onycha, 27: HillTop.RossFork.Alamosa, 32: HillTop.RossFork.Bucktown(0..7) }
      ternary group 1: { 0: HillTop.RossFork.Boerne, 8: HillTop.Wisdom.Blencoe, 20: Millston.GlenAvon.$valid, 24: HillTop.RossFork.Bucktown(8..15) }
      byte group 1: { 4: Millston.Gotham.$valid, 5: Millston.Brookneal.$valid }
    match:
    - { group: 0, byte_group: 1, byte_config: 1, dirtcam: 0x555 }
    - { group: 1, dirtcam: 0x55 }
    hit: [  _Lignite ]
    miss:  _Lignite
    indirect: _RockHill$tind
  ternary_indirect _RockHill$tind:
    row: 5
    bus: 0
    column: 2
    input_xbar:
      ternary group 0: { 0: Millston.Brookneal.SoapLake, 17: HillTop.Wisdom.Onycha, 27: HillTop.RossFork.Alamosa, 32: HillTop.RossFork.Bucktown(0..7) }
      ternary group 1: { 0: HillTop.RossFork.Boerne, 8: HillTop.Wisdom.Blencoe, 20: Millston.GlenAvon.$valid, 24: HillTop.RossFork.Bucktown(8..15) }
      byte group 1: { 4: Millston.Gotham.$valid, 5: Millston.Brookneal.$valid }
    format: { action: 0..2 }
    instruction: _RockHill$tind(action, $DEFAULT)
    actions:
      Swisshome(0, 0):
      - default_action: { allowed: true }
      - handle: 0x20000114
      - next_table: 0
      Olcott(1, 1):
      - default_action: { allowed: true }
      - handle: 0x20000115
      - next_table: 0
      - set Millston.GlenAvon.Kaluaaha, HillTop.Maddock.Kaluaaha
      - set Millston.GlenAvon.Calcasieu, HillTop.Maddock.Calcasieu
      Lefor(2, 2):
      - default_action: { allowed: true }
      - handle: 0x20000116
      - next_table: 0
      - set Millston.GlenAvon.Kaluaaha, HillTop.Maddock.Kaluaaha
      - set Millston.GlenAvon.Calcasieu, HillTop.Maddock.Calcasieu
      - set Millston.Grays.Chevak, HillTop.RossFork.Glenmora
      - set Millston.Grays.Mendocino, HillTop.RossFork.DonaAna
      - not W50, W50
      Volens(3, 4):
      - default_action: { allowed: true }
      - handle: 0x20000117
      - next_table: 0
      - set Millston.GlenAvon.Kaluaaha, HillTop.Maddock.Kaluaaha
      - set Millston.GlenAvon.Calcasieu, HillTop.Maddock.Calcasieu
      - set HillTop.RossFork.Bucktown, 0
      - set Millston.Grays.Chevak, HillTop.RossFork.Glenmora
      - set Millston.Grays.Mendocino, HillTop.RossFork.DonaAna
      - set W50(0..15), 4294967295
      Virgilina(4, 6):
      - default_action: { allowed: true }
      - handle: 0x20000118
      - next_table: 0
      - set Millston.Brookneal.SoapLake, 0
      - set HillTop.RossFork.Bucktown, 0
      - set Millston.GlenAvon.Kaluaaha, HillTop.Maddock.Kaluaaha
      - set Millston.GlenAvon.Calcasieu, HillTop.Maddock.Calcasieu
      - set Millston.Grays.Chevak, HillTop.RossFork.Glenmora
      - set Millston.Grays.Mendocino, HillTop.RossFork.DonaAna
      Dwight(5, 8):
      - default_action: { allowed: true }
      - handle: 0x20000119
      - next_table: 0
      - set HillTop.RossFork.Bucktown, 0
      - not W50, W50
      NoAction(-1, 3):
      - default_only_action: { allowed: true }
      - handle: 0x2000011a
      - next_table: 0
    default_only_action: NoAction
  hash_action _Lignite 1:
    p4: { name: Lignite, size: 32768, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Mausdale.Kenney: { type: exact, size: 15, full_size: 32, key_name: "Mausdale.Kenney" }
    row: 0
    bus: 0
    hash_dist:
      0: { hash: 0, mask: 0x7fff, shift: 1 }
    input_xbar:
      exact group 0: { 0: HillTop.Mausdale.Kenney(0..14) }
      hash 0:
        0..14: stripe(HillTop.Mausdale.Kenney(0..14))
      hash group 0:
        table: [0]
        seed: 0x0
    gateway:
      name: _Lignite-gateway
      row: 1
      bus: 0
      unit: 0
      0x0:  _Rhodell
      miss:  _Rhodell
      condition: 
        expression: "true(always hit)"
        true:  _Rhodell
        false:  _Rhodell
    next: []
    stats: _Lignite$stats.Encinitas(hash_dist 0, $DEFAULT)
    instruction: _Lignite($DEFAULT, $DEFAULT)
    actions:
      Issaquah(0, 0):
      - default_action: { allowed: true }
      - handle: 0x20000107
      - next_table: 0
      - _Lignite$stats.Encinitas($DIRECT)
    default_action: Issaquah
  counter _Lignite$stats.Encinitas:
    p4: { name: Encinitas, how_referenced: direct }
    row: [ 13, 11 ]
    column:
    - [ 0, 1, 2, 3, 4, 5 ]
    - [ 0, 1, 2 ]
    maprams: 
    - [ 0, 1, 2, 3, 4, 5 ]
    - [ 0, 1, 2 ]
    count: packets
    format: {packets(0): 96..127, packets(1): 64..95, packets(2): 32..63, packets(3): 0..31}
    lrt:
    - { threshold: 20036672, interval: 268435200 }
    - { threshold: 20036672, interval: 268435200 }
    - { threshold: 20036672, interval: 268435200 }
  exact_match _Rhodell 2:
    p4: { name: Rhodell, size: 2048, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Minturn.Tilton: { type: exact, size: 1, full_size: 2, key_name: "Minturn.Tilton", start_bit: 1 }
      HillTop.Minturn.Grassflat: { type: exact, size: 10, full_size: 10, key_name: "Minturn.Grassflat" }
    row: 7
    bus: 1
    column: 4
    stash: 
      row: [ 7 ]
      col: [ 4 ]
      unit: [ 1 ]
    ways:
      - [1, 0, 0x0, [7, 4]]
    input_xbar:
      exact group 0: { 64: HillTop.Minturn.Grassflat, 81: HillTop.Minturn.Tilton(1) }
      hash 1:
        0..6: HillTop.Minturn.Grassflat(0..6)
        7..8: HillTop.Minturn.Grassflat(8..9)
        9: HillTop.Minturn.Tilton(1)
      hash group 1:
        table: [1]
        seed: 0x0
    format: { immediate(0): 0..9, version(0): 112..115, match(0): 39..39, immediate(1): 10..19, version(1): 116..119, match(1): 47..47 }
    match: [ HillTop.Minturn.Grassflat(7) ]
    hit: [  _Clarkdale ]
    miss:  _Clarkdale
    action_bus: { 32..33 : immediate(0..9) }
    instruction: _Rhodell($DEFAULT, $DEFAULT)
    actions:
      Ugashik(0, 5):
      - p4_param_order: { Grassflat: 32 }
      - default_action: { allowed: true }
      - handle: 0x20000105
      - next_table: 0
      - { Grassflat.0-9: immediate(0..9) }
      - set ig_intr_md_for_dprsr.mirror_type, 1
      - set HillTop.Minturn.Grassflat, Grassflat.0-9
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x20000106
      - next_table: 0
      - {  }
    default_only_action: NoAction
  ternary_match _Clarkdale 3:
    p4: { name: Clarkdale, size: 1536, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Tiburon.Arnold: { type: ternary, size: 7, full_size: 9, key_name: "Tiburon.Arnold" }
      HillTop.Mausdale.Kenney: { type: ternary, size: 2, full_size: 32, key_name: "Mausdale.Kenney", start_bit: 15 }
      HillTop.RossFork.Weyauwega: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Weyauwega" }
      HillTop.RossFork.Lowes: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Lowes" }
      HillTop.RossFork.Almedia: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Almedia" }
      HillTop.RossFork.Chugwater: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Chugwater" }
      HillTop.RossFork.Charco: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Charco" }
      HillTop.RossFork.Uvalde: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Uvalde" }
      HillTop.RossFork.Daphne: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Daphne" }
      HillTop.RossFork.Naruna: { type: ternary, size: 1, full_size: 3, key_name: "RossFork.Naruna", start_bit: 2 }
      HillTop.Wisdom.Morstein: { type: ternary, size: 20, full_size: 20, key_name: "Wisdom.Morstein" }
      ig_intr_md_for_tm.mcast_grp_a: { type: ternary, size: 16, full_size: 16, key_name: "Freeny.mcast_grp_a" }
      HillTop.Wisdom.Piqua: { type: ternary, size: 1, full_size: 1, key_name: "Wisdom.Piqua" }
      HillTop.Wisdom.Havana: { type: ternary, size: 1, full_size: 1, key_name: "Wisdom.Havana" }
      HillTop.RossFork.Level: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Level" }
      HillTop.RossFork.Hulbert: { type: ternary, size: 2, full_size: 2, key_name: "RossFork.Hulbert" }
      HillTop.Murphy.Blairsden: { type: ternary, size: 1, full_size: 1, key_name: "Murphy.Blairsden" }
      HillTop.Murphy.Standish: { type: ternary, size: 1, full_size: 1, key_name: "Murphy.Standish" }
      HillTop.RossFork.Algoa: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Algoa" }
      ig_intr_md_for_tm.copy_to_cpu: { type: ternary, size: 1, full_size: 1, key_name: "Freeny.copy_to_cpu" }
      HillTop.RossFork.Thayne: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Thayne" }
      HillTop.RossFork.Pridgen: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Pridgen" }
      HillTop.RossFork.Tenino: { type: ternary, size: 1, full_size: 1, key_name: "RossFork.Tenino" }
    row: [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ]
    bus: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
    column:
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    input_xbar:
      ternary group 2: { 4: HillTop.RossFork.Hulbert, 8: HillTop.Wisdom.Morstein(0..7), 22: HillTop.Murphy.Blairsden, 24: ig_intr_md_for_tm.copy_to_cpu, 38: HillTop.RossFork.Tenino, 39: HillTop.RossFork.Pridgen }
      ternary group 3: { 0: HillTop.Wisdom.Morstein(8..15), 8: HillTop.Mausdale.Kenney(16), 20: HillTop.RossFork.Almedia, 24: HillTop.Wisdom.Havana, 25: HillTop.RossFork.Algoa, 33: HillTop.RossFork.Uvalde }
      ternary group 4: { 0: HillTop.Tiburon.Arnold(0..6), 8: ig_intr_md_for_tm.mcast_grp_a(8..15), 16: ig_intr_md_for_tm.mcast_grp_a(0..7), 29: HillTop.RossFork.Weyauwega, 30: HillTop.RossFork.Charco, 31: HillTop.RossFork.Daphne, 37: HillTop.RossFork.Naruna.2-2 }
      ternary group 5: { 3: HillTop.Murphy.Standish, 4: HillTop.RossFork.Level, 5: HillTop.RossFork.Lowes, 6: HillTop.RossFork.Chugwater, 8: HillTop.RossFork.Thayne, 20: HillTop.Wisdom.Piqua }
      byte group 0: { 7: HillTop.Mausdale.Kenney(15) }
      byte group 3: { 0: HillTop.Wisdom.Morstein(16..19) }
    match:
    - { group: 2, byte_group: 0, byte_config: 1, dirtcam: 0x555 }
    - { group: 3, dirtcam: 0x155 }
    - { group: 4, byte_group: 3, byte_config: 0, dirtcam: 0x555 }
    - { group: 5, dirtcam: 0x15 }
    hit: [  _Talbert,  _Talbert,  _Luverne,  _Luverne,  _Luverne ]
    miss:  _Talbert
    indirect: _Clarkdale$tind
  counter _Clarkdale$stats.Herring:
    p4: { name: Herring }
    row: 1
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    count: packets
    format: {packets(0): 64..127, packets(1): 0..63}
  ternary_indirect _Clarkdale$tind:
    row: 4
    bus: 0
    column: 2
    input_xbar:
      ternary group 2: { 4: HillTop.RossFork.Hulbert, 8: HillTop.Wisdom.Morstein(0..7), 22: HillTop.Murphy.Blairsden, 24: ig_intr_md_for_tm.copy_to_cpu, 38: HillTop.RossFork.Tenino, 39: HillTop.RossFork.Pridgen }
      ternary group 3: { 0: HillTop.Wisdom.Morstein(8..15), 8: HillTop.Mausdale.Kenney(16), 20: HillTop.RossFork.Almedia, 24: HillTop.Wisdom.Havana, 25: HillTop.RossFork.Algoa, 33: HillTop.RossFork.Uvalde }
      ternary group 4: { 0: HillTop.Tiburon.Arnold(0..6), 8: ig_intr_md_for_tm.mcast_grp_a(8..15), 16: ig_intr_md_for_tm.mcast_grp_a(0..7), 29: HillTop.RossFork.Weyauwega, 30: HillTop.RossFork.Charco, 31: HillTop.RossFork.Daphne, 37: HillTop.RossFork.Naruna.2-2 }
      ternary group 5: { 3: HillTop.Murphy.Standish, 4: HillTop.RossFork.Level, 5: HillTop.RossFork.Lowes, 6: HillTop.RossFork.Chugwater, 8: HillTop.RossFork.Thayne, 20: HillTop.Wisdom.Piqua }
      byte group 0: { 7: HillTop.Mausdale.Kenney(15) }
      byte group 3: { 0: HillTop.Wisdom.Morstein(16..19) }
    format: { action: 0..2 }
    stats: _Clarkdale$stats.Herring($DIRECT, $DEFAULT)
    instruction: _Clarkdale$tind(action, $DEFAULT)
    actions:
      Wattsburg(0, 0):
      - default_action: { allowed: true }
      - handle: 0x20000108
      - next_table: 0
      - _Clarkdale$stats.Herring($DIRECT)
      DeBeque(1, 7):
      - default_action: { allowed: true }
      - handle: 0x20000109
      - next_table: 1
      - set ig_intr_md_for_tm.copy_to_cpu, 1
      - _Clarkdale$stats.Herring($DIRECT)
      Plush(2, 9):
      - default_action: { allowed: true }
      - handle: 0x2000010a
      - next_table: 2
      - set ig_intr_md_for_dprsr.drop_ctl(0..1), 3
      - _Clarkdale$stats.Herring($DIRECT)
      Bethune(3, 10):
      - default_action: { allowed: true }
      - handle: 0x2000010b
      - next_table: 3
      - set ig_intr_md_for_tm.copy_to_cpu, 1
      - set ig_intr_md_for_dprsr.drop_ctl(0..1), 3
      - _Clarkdale$stats.Herring($DIRECT)
      Truro(4, 12):
      - default_action: { allowed: true }
      - handle: 0x2000010c
      - next_table: 4
      - set ig_intr_md_for_dprsr.drop_ctl(0..1), 3
      - _Clarkdale$stats.Herring($DIRECT)
    default_action: Wattsburg
  exact_match _Talbert 4:
    p4: { name: Talbert, size: 4096, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Tiburon.Arnold: { type: exact, size: 7, full_size: 9, key_name: "Tiburon.Arnold" }
      HillTop.Edwards.Pajaros: { type: exact, size: 5, full_size: 5, key_name: "Edwards.Pajaros" }
    row: 7
    bus: 0
    column: [ 2, 3 ]
    stash: 
      row: [ 7 ]
      col: [ 2 ]
      unit: [ 0 ]
    ways:
      - [1, 1, 0x1, [7, 2], [7, 3]]
    input_xbar:
      exact group 0: { 88: HillTop.Edwards.Pajaros, 96: HillTop.Tiburon.Arnold(0..6) }
      hash 1:
        10..14: HillTop.Edwards.Pajaros
        15..19: HillTop.Tiburon.Arnold(0..4)
        40: HillTop.Tiburon.Arnold(5)
      hash group 1:
        table: [1]
        seed: 0x0
    format: { action(0): 0..0, version(0): 112..115, counter_addr(0): 2..13, meter_addr(0): 14..25, meter_pfe(0): 26..26, match(0): 54..54, action(1): 1..1, version(1): 116..119, counter_addr(1): 27..38, meter_addr(1): 39..50, meter_pfe(1): 51..51, match(1): 62..62 }
    match: [ HillTop.Tiburon.Arnold(6) ]
    hit: [  _Luverne ]
    miss:  _Luverne
    action_bus: { 3 : _Talbert$meter..Comobabi color }
    stats: _Talbert$stats..PawCreek(counter_addr, $DEFAULT)
    meter: _Talbert$meter..Comobabi(meter_addr, meter_pfe, $DEFAULT)
    meter_color : _Talbert$meter..Comobabi(meter_addr, meter_pfe)
    instruction: _Talbert(action, $DEFAULT)
    actions:
      Cornwall(0, 0):
      - p4_param_order: { Langhorne: 32 }
      - default_action: { allowed: true }
      - handle: 0x2000010d
      - next_table: 0
      - { Langhorne: counter_addr }
      - _Talbert$stats..PawCreek(Langhorne)
      Natalbany(1, 14):
      - p4_param_order: { Langhorne: 32 }
      - default_action: { allowed: true }
      - handle: 0x2000010e
      - next_table: 0
      - { Langhorne: counter_addr }
      - set ig_intr_md_for_dprsr.drop_ctl, _Talbert$meter..Comobabi color(0..2)
      - _Talbert$meter..Comobabi(2, Langhorne)
      - _Talbert$stats..PawCreek(Langhorne)
      NoAction(-1, 11):
      - default_only_action: { allowed: true }
      - handle: 0x2000010f
      - next_table: 0
    default_only_action: NoAction
  counter _Talbert$stats..PawCreek:
    p4: { name: PawCreek, size: 4096 }
    row: 9
    column: [ 0, 1, 2 ]
    maprams: [ 0, 1, 2 ]
    count: packets
    format: {packets(0): 64..127, packets(1): 0..63}
  meter _Talbert$meter..Comobabi:
    p4: { name: Comobabi, size: 4096 }
    row: [ 11, 9 ]
    column:
    - [ 3, 4, 5 ]
    - [ 3, 4 ]
    maprams: 
    - [ 3, 4, 5 ]
    - [ 3, 4 ]
    color_maprams:
      row: 4
      bus: 0
      column: 5
      address: idletime
    type: standard
    green: 0
    yellow: 2
    red: 2
    count: bytes
    per_flow_enable: meter_pfe
  ternary_match _Luverne 5:
    p4: { name: Luverne, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Onycha: { type: ternary, size: 3, full_size: 3, key_name: "Wisdom.Onycha" }
      HillTop.Wisdom.Piqua: { type: ternary, size: 1, full_size: 1, key_name: "Wisdom.Piqua" }
      HillTop.Lamona.Whitefish: { type: ternary, size: 2, full_size: 2, key_name: "Lamona.Whitefish" }
      HillTop.Wisdom.Morstein: { type: ternary, size: 4, full_size: 20, key_name: "Wisdom.Morstein", start_bit: 16 }
      ig_intr_md_for_tm.mcast_grp_a: { type: ternary, size: 4, full_size: 16, key_name: "Freeny.mcast_grp_a", start_bit: 12 }
    row: 3
    bus: 1
    column: 1
    hash_dist:
      1: { hash: 0, mask: 0xffff, shift: 0 }
    input_xbar:
      ternary group 6: { 4: ig_intr_md_for_tm.mcast_grp_a(12..15), 8: HillTop.Wisdom.Morstein(16..19), 17: HillTop.Wisdom.Onycha, 24: HillTop.Lamona.Whitefish, 36: HillTop.Wisdom.Piqua }
      exact group 0: { 16: HillTop.Wisdom.Morstein(16..19), 32: HillTop.Wisdom.Morstein(0..15) }
      hash 0:
        16..31: stripe(HillTop.Wisdom.Morstein(0..15))
      hash group 0:
        table: [0]
        seed: 0x0
    match:
    - { group: 6, dirtcam: 0x155 }
    gateway:
      name: cond-42
      input_xbar:
        exact group 1: { 0: HillTop.Wisdom.Havana }
      row: 0
      bus: 0
      unit: 0
      match: { 0: HillTop.Wisdom.Havana }
      0b*******0: run_table
      miss:  _Kingman
      condition: 
        expression: "(HillTop.Wisdom.Havana == 0)"
        true:  _Luverne
        false:  _Kingman
    hit: [  _Kingman ]
    miss:  _Kingman
    indirect: _Luverne$tind
  ternary_indirect _Luverne$tind:
    row: 3
    bus: 0
    column: 2
    hash_dist:
      1: { hash: 0, mask: 0xffff, shift: 0 }
    input_xbar:
      ternary group 6: { 4: ig_intr_md_for_tm.mcast_grp_a(12..15), 8: HillTop.Wisdom.Morstein(16..19), 17: HillTop.Wisdom.Onycha, 24: HillTop.Lamona.Whitefish, 36: HillTop.Wisdom.Piqua }
      exact group 0: { 16: HillTop.Wisdom.Morstein(16..19), 32: HillTop.Wisdom.Morstein(0..15) }
      hash 0:
        16..31: stripe(HillTop.Wisdom.Morstein(0..15))
      hash group 0:
        table: [0]
        seed: 0x0
    format: { action: 0..2 }
    action_bus: { 36..37 : hash_dist(1, lo) }
    action: _Luverne$action_data($DIRECT, $DEFAULT)
    instruction: _Luverne$tind(action, $DEFAULT)
    actions:
      Ragley(1, 13):
      - p4_param_order: { Dunkerton: 16 }
      - default_action: { allowed: true }
      - handle: 0x20000110
      - next_table: 0
      - { Dunkerton: $adf_h0(0..15) }
      - set ig_intr_md_for_tm.level1_exclusion_id, Dunkerton
      - set ig_intr_md_for_tm.rid, ig_intr_md_for_tm.mcast_grp_a
      Gunder(2, 15):
      - p4_param_order: { Dunkerton: 16 }
      - default_action: { allowed: true }
      - handle: 0x20000111
      - next_table: 0
      - { Dunkerton: $adf_h0(0..15) }
      - set ig_intr_md_for_tm.level1_exclusion_id, Dunkerton
      - set ig_intr_md_for_tm.rid, ig_intr_md_for_tm.mcast_grp_a
      Maury(3, 16):
      - p4_param_order: { Dunkerton: 16 }
      - default_action: { allowed: true }
      - handle: 0x20000112
      - next_table: 0
      - { Dunkerton: $adf_h0(0..15) }
      - set ig_intr_md_for_tm.rid, 65535
      - set ig_intr_md_for_tm.level1_exclusion_id, Dunkerton
      Estrella(4, 18):
      - default_action: { allowed: true }
      - handle: 0x20000113
      - next_table: 0
      - {  }
      - set ig_intr_md_for_tm.rid, 65535
      - set ig_intr_md_for_tm.level1_exclusion_id, 0
      - set H7, hash_dist(1, 0..15)
    default_action: Gunder
    default_action_parameters:
      Dunkerton: "0x0"
  action _Luverne$action_data:
    p4: { name: Luverne$action }
    row: 12
    column: 4
    vpns: [ 0 ]
    home_row:
    - 12
    format Ragley: { $adf_h0: 0..15 }
    format Gunder: { $adf_h0: 0..15 }
    format Maury: { $adf_h0: 0..15 }
    action_bus: { 40..41 : $adf_h0 }
  ternary_match _Kingman 6:
    p4: { name: Kingman, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Havana: { type: exact, size: 1, full_size: 1, key_name: "Wisdom.Havana" }
      HillTop.RossFork.ElVerano: { type: exact, size: 1, full_size: 1, key_name: "RossFork.ElVerano" }
      HillTop.Lamona.Pachuta: { type: ternary, size: 1, full_size: 1, key_name: "Lamona.Pachuta" }
      HillTop.Wisdom.Blencoe: { type: ternary, size: 8, full_size: 8, key_name: "Wisdom.Blencoe" }
      Millston.Wondervu$0.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Wondervu$0" }
    row: 4
    bus: 1
    column: 1
    input_xbar:
      ternary group 7: { 1: Millston.Wondervu$0.$valid, 2: HillTop.RossFork.ElVerano, 8: HillTop.Wisdom.Havana, 16: HillTop.Lamona.Pachuta, 24: HillTop.Wisdom.Blencoe }
    match:
    - { group: 7, dirtcam: 0x55 }
    hit: [  _Woolwine,  _Willette_0,  _Woolwine,  _Willette_0,  _Woolwine,  _Willette_0 ]
    miss:  _Willette_0
    indirect: _Kingman$tind
  ternary_indirect _Kingman$tind:
    row: 2
    bus: 0
    column: 2
    input_xbar:
      ternary group 7: { 1: Millston.Wondervu$0.$valid, 2: HillTop.RossFork.ElVerano, 8: HillTop.Wisdom.Havana, 16: HillTop.Lamona.Pachuta, 24: HillTop.Wisdom.Blencoe }
    format: { action: 0..2, immediate: 3..16 }
    action_bus: { 16 : immediate(0..7), 17 : immediate(8..13), 96..99 : immediate(0..13) }
    instruction: _Kingman$tind(action, $DEFAULT)
    actions:
      Bigfork(0, 17):
      - p4_param_order: { Rumson: 9, McKee: 5 }
      - default_action: { allowed: true }
      - handle: 0x200000f9
      - next_table: 0
      - { Rumson: immediate(0..8), McKee: immediate(9..13) }
      - set HillTop.Wisdom.Miller, HillTop.Tiburon.Arnold
      - set ig_intr_md_for_tm.ucast_egress_port, Rumson
      - set ig_intr_md_for_tm.qid, McKee
      - set HillTop.Wisdom.RioPecos, 0
      Punaluu(1, 19):
      - p4_param_order: { Brownson: 5 }
      - default_action: { allowed: true }
      - handle: 0x200000fa
      - next_table: 1
      - { Brownson.3-4: immediate(0..1) }
      - set HillTop.Wisdom.Miller, HillTop.Tiburon.Arnold
      - set ig_intr_md_for_tm.qid(3..4), Brownson.3-4
      - set HillTop.Wisdom.RioPecos, 0
      Linville(2, 20):
      - p4_param_order: { Rumson: 9, McKee: 5 }
      - default_action: { allowed: true }
      - handle: 0x200000fb
      - next_table: 2
      - { Rumson: immediate(0..8), McKee: immediate(9..13) }
      - set HillTop.Wisdom.Miller, HillTop.Tiburon.Arnold
      - set ig_intr_md_for_tm.ucast_egress_port, Rumson
      - set ig_intr_md_for_tm.qid, McKee
      - set HillTop.Wisdom.RioPecos, 1
      Kelliher(3, 22):
      - p4_param_order: { Brownson: 5 }
      - default_action: { allowed: true }
      - handle: 0x200000fc
      - next_table: 3
      - { Brownson.3-4: immediate(0..1) }
      - set HillTop.Wisdom.Miller, HillTop.Tiburon.Arnold
      - set ig_intr_md_for_tm.qid(3..4), Brownson.3-4
      - set HillTop.Wisdom.RioPecos, 1
      Hopeton(4, 24):
      - p4_param_order: { Rumson: 9, McKee: 5 }
      - default_action: { allowed: true }
      - handle: 0x200000fd
      - next_table: 4
      - { Rumson: immediate(0..8), McKee: immediate(9..13) }
      - set HillTop.Wisdom.Miller, HillTop.Tiburon.Arnold
      - set ig_intr_md_for_tm.ucast_egress_port, Rumson
      - set ig_intr_md_for_tm.qid, McKee
      - set HillTop.Wisdom.RioPecos, 1
      - set HillTop.RossFork.CeeVee, Millston.Wondervu$0.Bowden
      Bernstein(5, 26):
      - p4_param_order: { Brownson: 5 }
      - default_action: { allowed: true }
      - handle: 0x200000fe
      - next_table: 5
      - { Brownson.3-4: immediate(0..1) }
      - set HillTop.Wisdom.Miller, HillTop.Tiburon.Arnold
      - set ig_intr_md_for_tm.qid(3..4), Brownson.3-4
      - set HillTop.Wisdom.RioPecos, 1
      - set HillTop.RossFork.CeeVee, Millston.Wondervu$0.Bowden
    default_action: Kelliher
    default_action_parameters:
      Brownson: "0x0"
  ternary_match _Willette_0 7:
    p4: { name: Willette, size: 512, action_profile: Franktown, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Morstein: { type: ternary, size: 20, full_size: 20, key_name: "Wisdom.Morstein" }
    row: 5
    bus: 1
    column: 1
    input_xbar:
      ternary group 8: { 0: HillTop.Wisdom.Morstein }
    match:
    - { group: 8, dirtcam: 0x15 }
    hit: [  _Woolwine ]
    miss:  _Woolwine
    indirect: _Willette_0$tind
  selection _Willette_0$selector.Franktown_sel:
    p4: { name: Franktown_sel, size: 4 }
    row: 15
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    input_xbar:
      exact group 1: { 8: HillTop.Lewiston.Staunton(8..15), 16: HillTop.Lewiston.Staunton(0..7), 24: HillTop.Tiburon.Arnold(8), 32: HillTop.Tiburon.Arnold(0..7) }
      hash 2:
        0..50: slice(stripe(crc_rev(0x18005, 0x0, 0x0, 25, { 0: HillTop.Lewiston.Staunton(0..7), 8: HillTop.Lewiston.Staunton(8..15), 16: HillTop.Tiburon.Arnold(0..7), 24: HillTop.Tiburon.Arnold(8) })), 0..50)
      hash group 2:
        table: [2]
        seed: 0x0
    mode: resilient 0
    non_linear: true
    pool_sizes: [120]
  action _Willette_0$action_data.Franktown:
    p4: { name: Franktown, size: 32768 }
    row: [ 15, 14, 12, 10 ]
    word: [ 0, 0, 0, 0 ]
    column:
    - [ 2, 3, 4, 5 ]
    - 5
    - 5
    - [ 3, 4 ]
    vpns: 
    - [ 0, 1, 2, 3 ]
    - [ 4 ]
    - [ 5 ]
    - [ 6, 7 ]
    home_row:
    - [ 15, 10 ]
    format Ihlen: { $adf_f0: 0..31 }
    action_bus: { 104..107 : $adf_f0 }
  stateful _Willette_0$salu.Franktown_sel$salu:
    p4: { name: Franktown_sel$salu, size: 122880, hidden: true }
    selection_table: _Willette_0$selector.Franktown_sel
    row: 15
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    format: { lo: 1 }
    actions:
      set_bit_at_alu$0:
      - set_bit_at
      clr_bit_at_alu$0:
      - clr_bit_at
      set_bit_alu$0:
      - set_bit
      clr_bit_alu$0:
      - clr_bit
  ternary_indirect _Willette_0$tind:
    row: 1
    bus: 0
    column: 2
    input_xbar:
      ternary group 8: { 0: HillTop.Wisdom.Morstein }
    format: { action: 0..2, meter_addr: 3..12, meter_pfe: 13..13, action_addr: 14..29 }
    selector: _Willette_0$selector.Franktown_sel(meter_addr, meter_pfe, $DEFAULT)
    selector_length: _Willette_0$selector.Franktown_sel($DEFAULT, $DEFAULT)
    action: _Willette_0$action_data.Franktown(action_addr, $DEFAULT)
    instruction: _Willette_0$tind(action, $DEFAULT)
    actions:
      Ihlen(0, 23):
      - p4_param_order: { Faulkton: 9 }
      - default_action: { allowed: true }
      - handle: 0x200000ff
      - next_table: 0
      - { Faulkton: $adf_f0(0..8) }
      - set ig_intr_md_for_tm.ucast_egress_port, Faulkton
      - set HillTop.Wisdom.Waubun, 0
      Philmont(1, 27):
      - default_action: { allowed: true }
      - handle: 0x20000100
      - next_table: 0
      - {  }
      - set ig_intr_md_for_tm.ucast_egress_port, HillTop.Wisdom.Morstein(0..8)
      - set HillTop.Wisdom.Waubun, HillTop.Wisdom.Morstein(9..14)
      Twinsburg(2, 28):
      - default_action: { allowed: true }
      - handle: 0x20000101
      - next_table: 0
      - {  }
      - set W2(0..8), 4294967295
      ElCentro(3, 30):
      - default_action: { allowed: true }
      - handle: 0x20000102
      - next_table: 0
      - {  }
      - set W2(0..8), 4294967295
      Redvale(4, 0):
      - default_action: { allowed: true }
      - handle: 0x20000103
      - next_table: 0
      - {  }
    default_action: Twinsburg
  ternary_match _Woolwine 8:
    p4: { name: Woolwine, size: 1, disable_atomic_modify : true }
    gateway:
      name: cond-41
      input_xbar:
        exact group 0: { 105: HillTop.Wisdom.Onycha, 113: Millston.Wondervu$0.$valid }
      row: 7
      bus: 0
      unit: 0
      match: { 9: Millston.Wondervu$0.$valid, 1: HillTop.Wisdom.Onycha }
      0b******0********:  END
      0o****2:  END
      miss: run_table
      condition: 
        expression: "(Millston.Wondervu[0].$valid == 1 && HillTop.Wisdom.Onycha != 2)"
        true:  _Woolwine
        false:  END
    hit: [  END ]
    miss:  END
    indirect: _Woolwine$tind
  ternary_indirect _Woolwine$tind:
    row: 1
    bus: 1
    format: { action: 0..0 }
    instruction: _Woolwine$tind(action, $DEFAULT)
    actions:
      Basye(1, 21):
      - default_action: { allowed: true }
      - handle: 0x20000104
      - next_table: 0
      - set Millston.Calabash.McCaulley.0-7, Millston.Wondervu$0.McCaulley.0-7
      - set Millston.Calabash.McCaulley.8-15, Millston.Wondervu$0.McCaulley.8-15
      - set Millston.Wondervu$0.$valid, 0
    default_action: Basye
stage 0 egress:
  ternary_match _Mendoza 13:
    p4: { name: Mendoza, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      eg_intr_md.egress_rid: { type: exact, size: 16, full_size: 16, key_name: "Sonoma.egress_rid" }
      eg_intr_md.egress_port: { type: exact, size: 9, full_size: 9, key_name: "Sonoma.egress_port" }
    row: 5
    bus: 0
    column: 0
    input_xbar:
      ternary group 10: { 0: eg_intr_md.egress_port(8), 8: eg_intr_md.egress_rid, 24: eg_intr_md.egress_port(0..7) }
    match:
    - { group: 10, byte_config: 3, dirtcam: 0x55 }
    gateway:
      name: cond-43
      input_xbar:
        exact group 6: { 0: Millston.Belgrade.$valid }
      row: 0
      bus: 0
      unit: 0
      match: { 0: Millston.Belgrade.$valid }
      0b*******1:  _Brookwood
      miss: run_table
      condition: 
        expression: "(Millston.Belgrade.$valid == 1 == 1)"
        true:  _Brookwood
        false:  _Mendoza
    hit: [  _Protivin ]
    miss:  _Protivin
    indirect: _Mendoza$tind
  ternary_indirect _Mendoza$tind:
    row: 0
    bus: 1
    column: 4
    input_xbar:
      ternary group 10: { 0: eg_intr_md.egress_port(8), 8: eg_intr_md.egress_rid, 24: eg_intr_md.egress_port(0..7) }
    format: { action: 0..1 }
    action: _Mendoza$action_data($DIRECT, $DEFAULT)
    instruction: _Mendoza$tind(action, $DEFAULT)
    actions:
      Kosmos(1, 1):
      - default_action: { allowed: true }
      - handle: 0x2000012b
      - next_table: 0
      - {  }
      - set HillTop.Wisdom.Onycha, 0
      - set HillTop.Wisdom.Westhoff, 3
      Ironia(2, 2):
      - p4_param_order: { BigFork: 8 }
      - default_action: { allowed: true }
      - handle: 0x2000012c
      - next_table: 0
      - { BigFork: $adf_b0(0..7) }
      - set HillTop.Wisdom.Blencoe, BigFork
      - set HillTop.Wisdom.Lathrop, 1
      - set HillTop.Wisdom.Onycha, 0
      - set HillTop.Wisdom.Stratford, 1
      - set W28(1..4), 2
      Kenvil(3, 4):
      - p4_param_order: { Rhine: 32, LaJara: 32, Exton: 8, PineCity: 6, Bammel: 16, Bowden: 12, Adona: 24, Connell: 24 }
      - default_action: { allowed: true }
      - handle: 0x2000012d
      - next_table: 0
      - { Exton: $adf_b0(0..7), Adona.0-7: $adf_b1(0..7), Connell.0-7: $adf_b2(0..7), $constant0: $adf_h2(0..15), $constant0: 17, Bowden: $adf_h3(0..11), Connell.8-23: $adf_h8(0..15), Bammel: $adf_h9(0..15), $data0: $adf_h10(0..13), PineCity: $data0(0..5), $constant2: $data0(6..9), $constant2: 5, $constant1: $data0(10..13), $constant1: 4, Adona.8-23: $adf_h11(0..15), Rhine: $adf_f2(0..31), LaJara: $adf_f3(0..31) }
      - set HillTop.Wisdom.Onycha, 0
      - set Millston.GlenAvon.$valid, 1
      - set Millston.GlenAvon.Ocoee, 47
      - set Millston.GlenAvon.Exton, Exton
      - set Millston.GlenAvon.Kaluaaha, Rhine
      - set Millston.GlenAvon.Calcasieu, LaJara
      - add Millston.GlenAvon.Rexville, HillTop.Sonoma.Iberia, $constant0
      - set Millston.Broadwell.$valid, 1
      - set Millston.Broadwell.LasVegas, Bammel
      - set HillTop.Wisdom.Bowden, Bowden
      - set HillTop.Wisdom.Adona.0-7, Adona.0-7
      - set HillTop.Wisdom.Adona.8-23, Adona.8-23
      - set HillTop.Wisdom.Connell.0-7, Connell.0-7
      - set HillTop.Wisdom.Connell.8-23, Connell.8-23
      - set H81(2..15), $data0
      - set W16, 0
      - set W28(1..4), 4
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x2000012e
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action _Mendoza$action_data:
    p4: { name: Mendoza$action }
    row: [ 13, 9 ]
    word: [ 0, 1 ]
    column:
    - 3
    - 1
    vpns: 
    - [ 0 ]
    - [ 0 ]
    home_row:
    - 13
    - 9
    format Ironia: { $adf_b0: 0..7 }
    format Kenvil: { $adf_b0: 0..7, $adf_b1: 8..15, $adf_b2: 16..23, $adf_h2: 32..47, $adf_h3: 48..63, $adf_h8: 128..143, $adf_h9: 144..159, $adf_h10: 160..175, $adf_h11: 176..191, $adf_f2: 64..95, $adf_f3: 96..127 }
    action_bus: { 16 : $adf_b0, 17 : $adf_b1, 18 : $adf_b2, 48..49 : $adf_h2, 50..51 : $adf_h3, 80..81 : $adf_h8, 82..83 : $adf_h9, 84..85 : $adf_h10, 86..87 : $adf_h11, 104..107 : $adf_f2, 108..111 : $adf_f3 }
  exact_match _Brookwood 14:
    p4: { name: Brookwood, size: 32768, disable_atomic_modify : true }
    p4_param_order: 
      eg_intr_md.egress_rid: { type: exact, size: 16, full_size: 16, key_name: "Sonoma.egress_rid" }
    row: [ 7, 3, 2 ]
    bus: [ 0, 1, 0 ]
    column:
    - [ 2, 3, 4, 6 ]
    - [ 4, 6 ]
    - [ 2, 3, 4 ]
    stash: 
      row: [ 2 ]
      col: [ 2 ]
      unit: [ 0 ]
    ways:
      - [5, 0, 0x1, [2, 2], [2, 3]]
      - [5, 1, 0x2, [7, 2], [7, 3]]
      - [5, 2, 0x4, [3, 4], [3, 6]]
      - [5, 3, 0x8, [7, 4], [7, 6]]
      - [5, 0, 0x0, [2, 4]]
    input_xbar:
      exact group 4: { 64: eg_intr_md.egress_rid }
      hash 9:
        0..7: random(eg_intr_md.egress_rid(10..15)) ^ eg_intr_md.egress_rid(0..7)
        8..9: random(eg_intr_md.egress_rid(10..15)) ^ eg_intr_md.egress_rid(8..9)
        40: random(eg_intr_md.egress_rid(10..15))
        11..18: random(eg_intr_md.egress_rid(10..15)) ^ eg_intr_md.egress_rid(0..7)
        19: random(eg_intr_md.egress_rid(10..15)) ^ eg_intr_md.egress_rid(8)
        10: random(eg_intr_md.egress_rid(10..15)) ^ eg_intr_md.egress_rid(9)
        41: random(eg_intr_md.egress_rid(10..15))
        22..29: random(eg_intr_md.egress_rid(10..15)) ^ eg_intr_md.egress_rid(0..7)
        20..21: random(eg_intr_md.egress_rid(10..15)) ^ eg_intr_md.egress_rid(8..9)
        42: random(eg_intr_md.egress_rid(10..15))
        33..39: random(eg_intr_md.egress_rid(10..15)) ^ eg_intr_md.egress_rid(0..6)
        30: random(eg_intr_md.egress_rid(10..15)) ^ eg_intr_md.egress_rid(7)
        31..32: random(eg_intr_md.egress_rid(10..15)) ^ eg_intr_md.egress_rid(8..9)
        43: random(eg_intr_md.egress_rid(10..15))
      hash group 5:
        table: [9]
        seed: 0x407ac5830f7
    format: { action(0): 0..0, immediate(0): 4..15, version(0): 112..115, match(0): 58..63, action(1): 1..1, immediate(1): 16..27, version(1): 116..119, match(1): 66..71, action(2): 2..2, immediate(2): 28..39, version(2): 120..123, match(2): 74..79, action(3): 3..3, immediate(3): 40..51, version(3): 124..127, match(3): 82..87 }
    match: [ eg_intr_md.egress_rid(10..15) ]
    gateway:
      name: cond-44
      input_xbar:
        exact group 4: { 64: eg_intr_md.egress_rid }
      row: 2
      bus: 0
      unit: 0
      match: { 0: eg_intr_md.egress_rid(0..7), 8: eg_intr_md.egress_rid(8..15) }
      0x0000:  _Bechyn
      miss: run_table
      condition: 
        expression: "(eg_intr_md.egress_rid != 0)"
        true:  _Brookwood
        false:  _Bechyn
    hit: [  _Bechyn ]
    miss:  _Bechyn
    action_bus: { 52..53 : immediate(0..11) }
    instruction: _Brookwood(action, $DEFAULT)
    actions:
      Gwynn(1, 6):
      - p4_param_order: { Rolla: 12 }
      - default_action: { allowed: true }
      - handle: 0x2000011f
      - next_table: 0
      - { Rolla: immediate(0..11) }
      - set HillTop.Wisdom.Nenana, Rolla
      - set HillTop.Wisdom.Piqua, 1
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x20000120
      - next_table: 0
      - {  }
    default_only_action: NoAction
  exact_match _Bechyn 15:
    p4: { name: Bechyn, size: 128, disable_atomic_modify : true }
    p4_param_order: 
      eg_intr_md.egress_port: { type: exact, size: 9, full_size: 9, key_name: "Sonoma.egress_port" }
    row: 1
    bus: 1
    column: 6
    stash: 
      row: [ 1 ]
      col: [ 6 ]
      unit: [ 0 ]
    ways:
      - [2, 2, 0x0, [1, 6]]
    input_xbar:
      exact group 3: { 32: eg_intr_md.egress_port }
      hash 6:
        20..27: eg_intr_md.egress_port(0..7)
        28: eg_intr_md.egress_port(8)
      hash group 2:
        table: [6]
        seed: 0x0
    format: { immediate(0): 0..9, version(0): 112..115 }
    hit: [  _Pound ]
    miss:  _Pound
    action_bus: { 56..57 : immediate(0..9) }
    instruction: _Bechyn($DEFAULT, $DEFAULT)
    actions:
      DeRidder(0, 3):
      - p4_param_order: { Heaton: 10 }
      - default_action: { allowed: true }
      - handle: 0x20000121
      - next_table: 0
      - { Heaton: immediate(0..9) }
      - set HillTop.McCaskill.Grassflat, Heaton
    default_action: DeRidder
    default_action_parameters:
      Heaton: "0x0"
stage 2 egress:
  exact_match _Pound 8:
    p4: { name: Pound, size: 4096, disable_atomic_modify : true }
    p4_param_order: 
      eg_intr_md.egress_port: { type: exact, size: 7, full_size: 9, key_name: "Sonoma.egress_port" }
      HillTop.Wisdom.Nenana: { type: exact, size: 12, full_size: 12, key_name: "Wisdom.Nenana" }
      HillTop.Wisdom.Waubun: { type: exact, size: 6, full_size: 6, key_name: "Wisdom.Waubun" }
    row: 1
    bus: 1
    column: [ 8, 9 ]
    stash: 
      row: [ 1 ]
      col: [ 8 ]
      unit: [ 0 ]
    ways:
      - [3, 0, 0x0, [1, 8]]
      - [3, 1, 0x0, [1, 9]]
    input_xbar:
      exact group 5: { 24: HillTop.Wisdom.Nenana(8..11), 34: HillTop.Wisdom.Waubun, 48: eg_intr_md.egress_port(0..6), 64: HillTop.Wisdom.Nenana(0..7) }
      hash 10:
        0..3: random(eg_intr_md.egress_port(0..6)) ^ HillTop.Wisdom.Nenana(8..11)
        4..9: random(eg_intr_md.egress_port(0..6)) ^ HillTop.Wisdom.Waubun
        11..14: random(eg_intr_md.egress_port(0..6)) ^ HillTop.Wisdom.Nenana(8..11)
        15..19: random(eg_intr_md.egress_port(0..6)) ^ HillTop.Wisdom.Waubun(0..4)
        10: random(eg_intr_md.egress_port(0..6)) ^ HillTop.Wisdom.Waubun(5)
      hash 11:
        0..9: random(HillTop.Wisdom.Nenana(0..7))
        10..19: random(HillTop.Wisdom.Nenana(0..7))
      hash group 3:
        table: [10, 11]
        seed: 0x6acf0
    format: { action(0): 0..1, immediate(0): 4..15, version(0): 112..115, match(0): [40..46, 32..39 ], action(1): 2..3, immediate(1): 16..27, version(1): 116..119, match(1): [56..62, 48..55 ] }
    match: [ eg_intr_md.egress_port(0..6), HillTop.Wisdom.Nenana(0..7) ]
    hit: [  _MoonRun ]
    miss:  _MoonRun
    action_bus: { 72..73 : immediate(0..11) }
    instruction: _Pound(action, $DEFAULT)
    actions:
      Dundee(0, 1):
      - p4_param_order: { Bowden: 12 }
      - default_action: { allowed: true }
      - handle: 0x20000128
      - next_table: 0
      - { Bowden: immediate(0..11) }
      - set HillTop.Wisdom.Bowden, Bowden
      RedBay(1, 2):
      - p4_param_order: { Bowden: 12 }
      - default_action: { allowed: true }
      - handle: 0x20000129
      - next_table: 0
      - { Bowden: immediate(0..11) }
      - set HillTop.Wisdom.Bowden, Bowden
      - set HillTop.Wisdom.Weatherby, 1
      Tunis(2, 4):
      - default_action: { allowed: true }
      - handle: 0x2000012a
      - next_table: 0
      - {  }
      - set HillTop.Wisdom.Bowden, HillTop.Wisdom.Nenana
    default_action: Tunis
stage 4 egress:
  exact_match _MoonRun 4:
    p4: { name: MoonRun, size: 8192, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Piqua: { type: exact, size: 1, full_size: 1, key_name: "Wisdom.Piqua" }
      Millston.Maumee.$valid: { type: exact, size: 1, full_size: 1, key_name: "Maumee" }
      Millston.GlenAvon.$valid: { type: exact, size: 1, full_size: 1, key_name: "GlenAvon" }
      HillTop.Wisdom.Nenana: { type: exact, size: 12, full_size: 12, key_name: "Wisdom.Nenana" }
    row: 0
    bus: 1
    column: [ 4, 6 ]
    stash: 
      row: [ 0 ]
      col: [ 4 ]
      unit: [ 0 ]
    ways:
      - [0, 1, 0x0, [0, 4]]
      - [0, 2, 0x0, [0, 6]]
    input_xbar:
      exact group 1: { 56: HillTop.Wisdom.Nenana(8..11), 67: Millston.GlenAvon.$valid, 73: Millston.Maumee.$valid, 80: HillTop.Wisdom.Nenana(0..7), 100: HillTop.Wisdom.Piqua }
      hash 2:
        10..13: HillTop.Wisdom.Nenana(8..11)
        21..24: HillTop.Wisdom.Nenana(8..11)
      hash 3:
        10..13: random(HillTop.Wisdom.Nenana(3..7))
        14: random(HillTop.Wisdom.Nenana(3..7)) ^ Millston.GlenAvon.$valid
        15: random(HillTop.Wisdom.Nenana(3..7)) ^ Millston.Maumee.$valid
        16..18: random(HillTop.Wisdom.Nenana(3..7)) ^ HillTop.Wisdom.Nenana(0..2)
        19: random(HillTop.Wisdom.Nenana(3..7)) ^ HillTop.Wisdom.Piqua
        21..24: random(HillTop.Wisdom.Nenana(3..7))
        25: random(HillTop.Wisdom.Nenana(3..7)) ^ Millston.GlenAvon.$valid
        26: random(HillTop.Wisdom.Nenana(3..7)) ^ Millston.Maumee.$valid
        27..29: random(HillTop.Wisdom.Nenana(3..7)) ^ HillTop.Wisdom.Nenana(0..2)
        20: random(HillTop.Wisdom.Nenana(3..7)) ^ HillTop.Wisdom.Piqua
      hash group 0:
        table: [2, 3]
        seed: 0x393c5c00
    format: { immediate(0): 0..7, version(0): 112..115, match(0): 35..39, immediate(1): 8..15, version(1): 116..119, match(1): 43..47, immediate(2): 16..23, version(2): 120..123, match(2): 51..55, immediate(3): 24..31, version(3): 124..127, match(3): 59..63 }
    match: [ HillTop.Wisdom.Nenana(3..7) ]
    hit: [  _Monse ]
    miss:  _Monse
    action_bus: { 0 : immediate(0..7) }
    instruction: _MoonRun($DEFAULT, $DEFAULT)
    actions:
      GlenDean(0, 1):
      - p4_param_order: { Buncombe: 8 }
      - default_action: { allowed: true }
      - handle: 0x20000125
      - next_table: 0
      - { Buncombe: immediate(0..7) }
      - set HillTop.McGonigle.Buncombe, Buncombe
    default_action: GlenDean
    default_action_parameters:
      Buncombe: "0x0"
  ternary_match _Monse 5:
    p4: { name: Monse, size: 8, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Freeny.Dunedin: { type: exact, size: 3, full_size: 3, key_name: "Freeny.Dunedin" }
    row: 6
    bus: 0
    column: 0
    indirect_bus: 3
    input_xbar:
      ternary group 0: { 0: HillTop.Freeny.Dunedin }
    match:
    - { group: 0, byte_config: 3, dirtcam: 0x1 }
    hit: [  Dyess_0 ]
    miss:  Dyess_0
    action: _Monse$action_data($DIRECT, $DEFAULT)
    instruction: _Monse($DEFAULT, $DEFAULT)
    actions:
      Danbury(0, 2):
      - p4_param_order: { PineCity: 6 }
      - default_action: { allowed: true }
      - handle: 0x2000011d
      - next_table: 0
      - { PineCity: $adf_h0(0..5) }
      - set HillTop.Edwards.Renick, PineCity
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x2000011e
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action _Monse$action_data:
    p4: { name: Monse$action }
    row: 7
    column: 3
    vpns: [ 0 ]
    home_row:
    - 7
    format Danbury: { $adf_h0: 0..15 }
    action_bus: { 40..41 : $adf_h0 }
  ternary_match Dyess_0 6:
    p4: { name: Dyess, size: 16, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Dyess: { type: exact, size: 1, full_size: 1, key_name: "Wisdom.Dyess" }
      Millston.GlenAvon.$valid: { type: exact, size: 1, full_size: 1, key_name: "GlenAvon" }
      Millston.Maumee.$valid: { type: exact, size: 1, full_size: 1, key_name: "Maumee" }
    row: 2
    bus: 0
    column: 0
    input_xbar:
      ternary group 5: { 3: Millston.GlenAvon.$valid, 9: Millston.Maumee.$valid, 32: HillTop.Wisdom.Dyess }
    match:
    - { group: 5, byte_config: 3, dirtcam: 0x105 }
    gateway:
      name: cond-45
      input_xbar:
        exact group 3: { 1: HillTop.Wisdom.Onycha }
      row: 2
      bus: 1
      unit: 0
      match: { 1: HillTop.Wisdom.Onycha }
      0b****000: run_table
      0b****011: run_table
      miss:  _Lebanon
      condition: 
        expression: "(HillTop.Wisdom.Onycha == 0 || HillTop.Wisdom.Onycha == 3)"
        true:  Dyess_0
        false:  _Lebanon
    hit: [  _Lebanon ]
    miss:  _Lebanon
    indirect: Dyess_0$tind
  ternary_indirect Dyess_0$tind:
    row: 3
    bus: 0
    column: 5
    input_xbar:
      ternary group 5: { 3: Millston.GlenAvon.$valid, 9: Millston.Maumee.$valid, 32: HillTop.Wisdom.Dyess }
    format: { action: 0..1 }
    instruction: Dyess_0$tind(action, $DEFAULT)
    actions:
      Daguao(1, 3):
      - default_action: { allowed: true }
      - handle: 0x20000122
      - next_table: 0
      - set Millston.GlenAvon.Ocoee(7..7), 0
      Ripley(2, 4):
      - default_action: { allowed: true }
      - handle: 0x20000123
      - next_table: 0
      - set Millston.Maumee.Dassel(7..7), 0
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x20000124
      - next_table: 0
    default_only_action: NoAction
  ternary_match _Lebanon 7:
    p4: { name: Lebanon, size: 1024, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.McCaskill.Whitewood: { type: exact, size: 10, full_size: 10, key_name: "McCaskill.Whitewood" }
    row: [ 3, 4 ]
    bus: [ 0, 0 ]
    column:
    - 0
    - 0
    input_xbar:
      ternary group 0: { 8: HillTop.McCaskill.Whitewood(8..9), 16: HillTop.McCaskill.Whitewood(0..7) }
    match:
    - { group: 0, byte_config: 3, dirtcam: 0x14 }
    hit: [  _Protivin ]
    miss:  _Protivin
    indirect: _Lebanon$tind
  meter _Lebanon$meter..Slinger:
    p4: { name: Slinger, size: 128 }
    row: 15
    column: [ 3, 4 ]
    maprams: [ 3, 4 ]
    color_maprams:
      row: 7
      bus: 0
      column: 0
      address: idletime
    type: standard
    count: bytes
    per_flow_enable: meter_pfe
  ternary_indirect _Lebanon$tind:
    row: 2
    bus: 0
    column: 5
    input_xbar:
      ternary group 0: { 8: HillTop.McCaskill.Whitewood(8..9), 16: HillTop.McCaskill.Whitewood(0..7) }
    format: { action: 0..0, meter_addr: 1..10, meter_pfe: 11..11 }
    action_bus: { 3 : _Lebanon$meter..Slinger color }
    meter: _Lebanon$meter..Slinger(meter_addr, meter_pfe, $DEFAULT)
    meter_color : _Lebanon$meter..Slinger(meter_addr, meter_pfe)
    instruction: _Lebanon$tind(action, $DEFAULT)
    actions:
      Lovelady(0, 5):
      - p4_param_order: { Kingsland: 32 }
      - default_action: { allowed: true }
      - handle: 0x20000126
      - next_table: 0
      - { Kingsland: meter_addr }
      - set HillTop.McCaskill.Tilton, _Lebanon$meter..Slinger color(0..1)
      - _Lebanon$meter..Slinger(2, Kingsland)
      PellCity(1, 6):
      - default_action: { allowed: true }
      - handle: 0x20000127
      - next_table: 0
      - set HillTop.McCaskill.Tilton, 2
    default_action: PellCity
  ternary_match _Protivin 8:
    p4: { name: Protivin, size: 128, disable_atomic_modify : true }
    p4_param_order: 
      eg_intr_md.egress_port: { type: exact, size: 9, full_size: 9, key_name: "Sonoma.egress_port" }
      HillTop.Lamona.Pachuta: { type: exact, size: 1, full_size: 1, key_name: "Lamona.Pachuta" }
      HillTop.Wisdom.RioPecos: { type: exact, size: 1, full_size: 1, key_name: "Wisdom.RioPecos" }
      HillTop.Wisdom.Onycha: { type: exact, size: 3, full_size: 3, key_name: "Wisdom.Onycha" }
    row: 0
    bus: 0
    column: 0
    input_xbar:
      ternary group 8: { 0: HillTop.Wisdom.RioPecos, 8: eg_intr_md.egress_port(8), 16: eg_intr_md.egress_port(0..7), 24: HillTop.Lamona.Pachuta, 33: HillTop.Wisdom.Onycha }
    match:
    - { group: 8, byte_config: 3, dirtcam: 0x155 }
    hit: [  _Medart,  _Ghent ]
    miss:  _Medart
    indirect: _Protivin$tind
  ternary_indirect _Protivin$tind:
    row: 1
    bus: 0
    column: 5
    input_xbar:
      ternary group 8: { 0: HillTop.Wisdom.RioPecos, 8: eg_intr_md.egress_port(8), 16: eg_intr_md.egress_port(0..7), 24: HillTop.Lamona.Pachuta, 33: HillTop.Wisdom.Onycha }
    format: { action: 0..0, immediate: 1..2 }
    action_bus: { 44..45 : immediate(0..1) }
    instruction: _Protivin$tind(action, $DEFAULT)
    actions:
      Chappell(0, 7):
      - p4_param_order: { Toklat: 2 }
      - default_action: { allowed: true }
      - handle: 0x2000012f
      - next_table: 0
      - { Toklat: immediate(0..1) }
      - set HillTop.Wisdom.Stratford, 1
      - set HillTop.Wisdom.Westhoff, 2
      - set HillTop.Wisdom.Toklat, Toklat
      - set Millston.Hayfield.Aguilita, 0
      Sequim(1, 0):
      - default_action: { allowed: true }
      - handle: 0x20000130
      - next_table: 1
      - {  }
    default_action: Sequim
  ternary_match _Ghent 9:
    p4: { name: Ghent, size: 16, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Onycha: { type: ternary, size: 3, full_size: 3, key_name: "Wisdom.Onycha" }
      HillTop.Wisdom.Westhoff: { type: exact, size: 3, full_size: 3, key_name: "Wisdom.Westhoff" }
      HillTop.Wisdom.RioPecos: { type: ternary, size: 1, full_size: 1, key_name: "Wisdom.RioPecos" }
      HillTop.Wisdom.Bennet: { type: ternary, size: 1, full_size: 32, key_name: "Wisdom.Bennet", start_bit: 16 }
      HillTop.Wisdom.Bennet: { type: ternary, size: 1, full_size: 32, key_name: "Wisdom.Bennet", start_bit: 18 }
    row: 1
    bus: 0
    column: 0
    input_xbar:
      ternary group 8: { 0: HillTop.Wisdom.RioPecos, 1: HillTop.Wisdom.Westhoff, 33: HillTop.Wisdom.Onycha }
      byte group 1: { 0: HillTop.Wisdom.Bennet.16-23(0), 2: HillTop.Wisdom.Bennet.16-23(2) }
    match:
    - { group: 8, byte_group: 1, byte_config: 0, dirtcam: 0x501 }
    hit: [  _Medart ]
    miss:  _Medart
    indirect: _Ghent$tind
  ternary_indirect _Ghent$tind:
    row: 0
    bus: 0
    column: 5
    input_xbar:
      ternary group 8: { 0: HillTop.Wisdom.RioPecos, 1: HillTop.Wisdom.Westhoff, 33: HillTop.Wisdom.Onycha }
      byte group 1: { 0: HillTop.Wisdom.Bennet.16-23(0), 2: HillTop.Wisdom.Bennet.16-23(2) }
    format: { action: 0..2, immediate: 3..18 }
    action_bus: { 100..103 : immediate(0..15) }
    instruction: _Ghent$tind(action, $DEFAULT)
    actions:
      Westend(0, 8):
      - p4_param_order: { Mendocino: 16, Scotland: 16, Addicks: 16 }
      - default_action: { allowed: true }
      - handle: 0x20000131
      - next_table: 0
      - { Addicks: immediate(0..15) }
      - and W26, Addicks, W26
      Wyandanch(1, 10):
      - p4_param_order: { RockPort: 32, Mendocino: 16, Scotland: 16, Addicks: 16 }
      - default_action: { allowed: true }
      - handle: 0x20000132
      - next_table: 0
      - { Addicks: immediate(0..15) }
      - and W26, Addicks, W26
      Vananda(2, 12):
      - p4_param_order: { RockPort: 32, Mendocino: 16, Scotland: 16, Addicks: 16 }
      - default_action: { allowed: true }
      - handle: 0x20000133
      - next_table: 0
      - { Addicks: immediate(0..15) }
      - and W26, Addicks, W26
      Yorklyn(3, 0):
      - p4_param_order: { Mendocino: 16, Scotland: 16 }
      - default_action: { allowed: true }
      - handle: 0x20000134
      - next_table: 0
      - {  }
      Botna(4, 9):
      - p4_param_order: { Scotland: 16 }
      - default_action: { allowed: true }
      - handle: 0x20000135
      - next_table: 0
      - {  }
      NoAction(-1, 11):
      - default_only_action: { allowed: true }
      - handle: 0x20000136
      - next_table: 0
      - {  }
    default_only_action: NoAction
  ternary_match _Medart 10:
    p4: { name: Medart, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Miller: { type: exact, size: 9, full_size: 9, key_name: "Wisdom.Miller" }
    row: 5
    bus: 0
    column: 0
    indirect_bus: 1
    input_xbar:
      ternary group 1: { 0: HillTop.Wisdom.Miller.8-8, 24: HillTop.Wisdom.Miller.0-7 }
    match:
    - { group: 1, byte_config: 3, dirtcam: 0x41 }
    hit: [  _McDougal ]
    miss:  _McDougal
    action: _Medart$action_data($DIRECT, $DEFAULT)
    instruction: _Medart($DEFAULT, $DEFAULT)
    actions:
      Estero(0, 13):
      - p4_param_order: { Inkom: 6, Gowanda: 10, BurrOak: 4, Gardena: 12 }
      - default_action: { allowed: true }
      - handle: 0x20000137
      - next_table: 0
      - { $data0: $adf_h0(0..15), Gardena: $data0(0..11), BurrOak: $data0(12..15), $data1: $adf_h1(0..15), Gowanda: $data1(0..9), Inkom: $data1(10..15) }
      - set H31, $data0
      - set H72, $data1
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x20000138
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action _Medart$action_data:
    p4: { name: Medart$action }
    row: 9
    column: 3
    vpns: [ 0 ]
    home_row:
    - 9
    format Estero: { $adf_h0: 0..15, $adf_h1: 16..31 }
    action_bus: { 48..49 : $adf_h0, 50..51 : $adf_h1 }
  hash_action _McDougal 11:
    p4: { name: McDougal, size: 1, disable_atomic_modify : true }
    row: 2
    bus: 1
    hash_dist:
      0: { hash: 2, mask: 0xfff, shift: 3 }
    input_xbar:
      exact group 3: { 8: eg_intr_md.egress_port(8), 16: eg_intr_md.egress_port(0..7), 32: eg_intr_md.egress_qid }
      hash 6:
        0..4: stripe(eg_intr_md.egress_qid)
        5..11: stripe(eg_intr_md.egress_port(0..6))
      hash group 2:
        table: [6]
        seed: 0x0
    gateway:
      name: _McDougal-gateway
      row: 0
      bus: 0
      unit: 1
      0x0:  _Waseca
      miss:  _Waseca
      condition: 
        expression: "true(always hit)"
        true:  _Waseca
        false:  _Waseca
    next: []
    stats: _McDougal$stats..Tillicum(hash_dist 0, $DEFAULT)
    instruction: _McDougal($DEFAULT, $DEFAULT)
    actions:
      Magazine(0, 0):
      - default_action: { allowed: true }
      - handle: 0x2000011c
      - next_table: 0
      - _McDougal$stats..Tillicum($hash_dist)
    default_action: Magazine
  counter _McDougal$stats..Tillicum:
    p4: { name: Tillicum, size: 4096 }
    row: [ 13, 11 ]
    column:
    - [ 3, 4, 5 ]
    - [ 3, 4 ]
    maprams: 
    - [ 3, 4, 5 ]
    - [ 3, 4 ]
    count: packets_and_bytes
    format: {packets(0): 0..63, bytes(0): 64..127}
stage 5 egress:
  ternary_match _Waseca 9:
    p4: { name: Waseca, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Onycha: { type: exact, size: 3, full_size: 3, key_name: "Wisdom.Onycha" }
      HillTop.Wisdom.Westhoff: { type: exact, size: 3, full_size: 3, key_name: "Wisdom.Westhoff" }
      HillTop.Wisdom.Piqua: { type: exact, size: 1, full_size: 1, key_name: "Wisdom.Piqua" }
      Millston.GlenAvon.$valid: { type: ternary, size: 1, full_size: 1, key_name: "GlenAvon" }
      Millston.Maumee.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Maumee" }
      Millston.Ramos.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Ramos" }
      Millston.Provencal.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Provencal" }
      HillTop.Wisdom.Bennet: { type: ternary, size: 2, full_size: 32, key_name: "Wisdom.Bennet", start_bit: 18 }
    row: [ 0, 1 ]
    bus: [ 0, 0 ]
    column:
    - 0
    - 0
    input_xbar:
      ternary group 4: { 17: HillTop.Wisdom.Onycha }
      ternary group 5: { 3: Millston.GlenAvon.$valid, 4: Millston.Ramos.$valid, 9: Millston.Maumee.$valid, 17: Millston.Provencal.$valid, 33: HillTop.Wisdom.Westhoff, 36: HillTop.Wisdom.Piqua }
      byte group 1: { 2: HillTop.Wisdom.Bennet.16-23(2..3) }
    match:
    - { group: 4, byte_group: 1, byte_config: 0, dirtcam: 0x410 }
    - { group: 5, dirtcam: 0x115 }
    hit: [  _Haugen ]
    miss:  _Haugen
    indirect: _Waseca$tind
  ternary_indirect _Waseca$tind:
    row: 0
    bus: 0
    column: 2
    input_xbar:
      ternary group 4: { 17: HillTop.Wisdom.Onycha }
      ternary group 5: { 3: Millston.GlenAvon.$valid, 4: Millston.Ramos.$valid, 9: Millston.Maumee.$valid, 17: Millston.Provencal.$valid, 33: HillTop.Wisdom.Westhoff, 36: HillTop.Wisdom.Piqua }
      byte group 1: { 2: HillTop.Wisdom.Bennet.16-23(2..3) }
    format: { action: 0..5 }
    action: _Waseca$action_data($DIRECT, $DEFAULT)
    instruction: _Waseca$tind(action, $DEFAULT)
    actions:
      Durant(1, 1):
      - p4_param_order: { Onamia: 24, Brule: 24 }
      - default_action: { allowed: true }
      - handle: 0x2000013b
      - next_table: 0
      - { Brule.16-23: $adf_b0(0..7), Onamia.16-23: $adf_b1(0..7), Brule.0-15: $adf_h1(0..15), Onamia.0-15: $adf_h2(0..15) }
      - set Millston.Calabash.Adona.0-7, HillTop.Wisdom.Adona.0-7
      - set Millston.Calabash.Adona.8-23, HillTop.Wisdom.Adona.8-23
      - set Millston.Calabash.Connell.0-7, HillTop.Wisdom.Connell.0-7
      - set Millston.Calabash.Connell.8-23, HillTop.Wisdom.Connell.8-23
      - set Millston.Calabash.Goldsboro.0-15, Onamia.0-15
      - set Millston.Calabash.Goldsboro.16-23, Onamia.16-23
      - set Millston.Calabash.Fabens.0-15, Brule.0-15
      - set Millston.Calabash.Fabens.16-23, Brule.16-23
      - add Millston.GlenAvon.Exton, Millston.GlenAvon.Exton, 255
      - set HillTop.Plains.Roachdale, 0
      - set HillTop.Plains.Miller, 0
      Kingsdale(2, 2):
      - p4_param_order: { Onamia: 24, Brule: 24 }
      - default_action: { allowed: true }
      - handle: 0x2000013c
      - next_table: 0
      - { Brule.16-23: $adf_b0(0..7), Onamia.16-23: $adf_b1(0..7), Brule.0-15: $adf_h1(0..15), Onamia.0-15: $adf_h2(0..15) }
      - set Millston.Calabash.Adona.0-7, HillTop.Wisdom.Adona.0-7
      - set Millston.Calabash.Adona.8-23, HillTop.Wisdom.Adona.8-23
      - set Millston.Calabash.Connell.0-7, HillTop.Wisdom.Connell.0-7
      - set Millston.Calabash.Connell.8-23, HillTop.Wisdom.Connell.8-23
      - set Millston.Calabash.Goldsboro.0-15, Onamia.0-15
      - set Millston.Calabash.Goldsboro.16-23, Onamia.16-23
      - set Millston.Calabash.Fabens.0-15, Brule.0-15
      - set Millston.Calabash.Fabens.16-23, Brule.16-23
      - add Millston.Maumee.Bushland, Millston.Maumee.Bushland, 255
      - set HillTop.Plains.Roachdale, 0
      - set HillTop.Plains.Miller, 0
      Tekonsha(4, 4):
      - default_action: { allowed: true }
      - handle: 0x2000013d
      - next_table: 0
      - {  }
      - set Millston.Calabash.Adona.0-7, HillTop.Wisdom.Adona.0-7
      - set Millston.Calabash.Adona.8-23, HillTop.Wisdom.Adona.8-23
      - set Millston.Calabash.Connell.0-7, HillTop.Wisdom.Connell.0-7
      - set Millston.Calabash.Connell.8-23, HillTop.Wisdom.Connell.8-23
      - set HillTop.Plains.Roachdale, 0
      - set HillTop.Plains.Miller, 0
      Clermont(6, 6):
      - default_action: { allowed: true }
      - handle: 0x2000013e
      - next_table: 0
      - {  }
      - set Millston.Calabash.Adona.0-7, HillTop.Wisdom.Adona.0-7
      - set Millston.Calabash.Adona.8-23, HillTop.Wisdom.Adona.8-23
      - set Millston.Calabash.Connell.0-7, HillTop.Wisdom.Connell.0-7
      - set Millston.Calabash.Connell.8-23, HillTop.Wisdom.Connell.8-23
      - set HillTop.Plains.Roachdale, 0
      - set HillTop.Plains.Miller, 0
      Blanding(8, 8):
      - default_action: { allowed: true }
      - handle: 0x2000013f
      - next_table: 0
      - {  }
      - set Millston.Wondervu$0.$valid, 1
      - set Millston.Wondervu$0.McCaulley, Millston.Calabash.McCaulley
      - set Millston.Calabash.McCaulley, 33024
      - set HillTop.Plains.Roachdale, 0
      - set HillTop.Plains.Miller, 0
      - deposit-field H22(12..15), H20(4..7), H23
      Shelby(10, 10):
      - default_action: { allowed: true }
      - handle: 0x20000140
      - next_table: 0
      - {  }
      - set Millston.Hayfield.$valid, 1
      - set Millston.Hayfield.Lathrop, HillTop.Wisdom.Lathrop
      - set Millston.Hayfield.Blencoe, HillTop.Wisdom.Blencoe
      - set Millston.Hayfield.Harbor, HillTop.RossFork.Bicknell
      - set HillTop.Plains.Roachdale, 0
      - set HillTop.Plains.Miller, 0
      - deposit-field H30(12..15), H23(12..15), H29
      Chambers(12, 12):
      - default_action: { allowed: true }
      - handle: 0x20000141
      - next_table: 0
      - {  }
      - set HillTop.Plains.Roachdale, 0
      - set HillTop.Plains.Miller, 0
      Ardenvoir(14, 14):
      - p4_param_order: { Onamia: 24, Brule: 24 }
      - default_action: { allowed: true }
      - handle: 0x20000142
      - next_table: 0
      - { Brule.16-23: $adf_b0(0..7), Onamia.16-23: $adf_b1(0..7), Brule.0-15: $adf_h1(0..15), Onamia.0-15: $adf_h2(0..15) }
      - set Millston.Calabash.$valid, 1
      - set Millston.Calabash.Adona.0-7, HillTop.Wisdom.Adona.0-7
      - set Millston.Calabash.Adona.8-23, HillTop.Wisdom.Adona.8-23
      - set Millston.Calabash.Connell.0-7, HillTop.Wisdom.Connell.0-7
      - set Millston.Calabash.Connell.8-23, HillTop.Wisdom.Connell.8-23
      - set Millston.Calabash.Goldsboro.0-15, Onamia.0-15
      - set Millston.Calabash.Goldsboro.16-23, Onamia.16-23
      - set Millston.Calabash.Fabens.0-15, Brule.0-15
      - set Millston.Calabash.Fabens.16-23, Brule.16-23
      - set Millston.Calabash.McCaulley, 2048
      - set HillTop.Plains.Roachdale, 0
      - set HillTop.Plains.Miller, 0
      Clinchco(16, 16):
      - default_action: { allowed: true }
      - handle: 0x20000143
      - next_table: 0
      - {  }
      - set Millston.Calabash.Adona.0-7, HillTop.Wisdom.Adona.0-7
      - set Millston.Calabash.Adona.8-23, HillTop.Wisdom.Adona.8-23
      - set Millston.Calabash.Connell.0-7, HillTop.Wisdom.Connell.0-7
      - set Millston.Calabash.Connell.8-23, HillTop.Wisdom.Connell.8-23
      - set HillTop.Plains.Roachdale, 0
      - set HillTop.Plains.Miller, 0
      Snook(18, 18):
      - default_action: { allowed: true }
      - handle: 0x20000144
      - next_table: 0
      - {  }
      - set Millston.Calabash.McCaulley, 2048
      - set Millston.Hayfield.$valid, 1
      - set Millston.Hayfield.Lathrop, HillTop.Wisdom.Lathrop
      - set Millston.Hayfield.Blencoe, HillTop.Wisdom.Blencoe
      - set Millston.Hayfield.Harbor, HillTop.RossFork.Bicknell
      - set HillTop.Plains.Roachdale, 0
      - set HillTop.Plains.Miller, 0
      - deposit-field H30(12..15), H23(12..15), H29
      OjoFeliz(20, 20):
      - default_action: { allowed: true }
      - handle: 0x20000145
      - next_table: 0
      - {  }
      - set Millston.Calabash.McCaulley, 34525
      - set Millston.Hayfield.$valid, 1
      - set Millston.Hayfield.Lathrop, HillTop.Wisdom.Lathrop
      - set Millston.Hayfield.Blencoe, HillTop.Wisdom.Blencoe
      - set Millston.Hayfield.Harbor, HillTop.RossFork.Bicknell
      - set HillTop.Plains.Roachdale, 0
      - set HillTop.Plains.Miller, 0
      - deposit-field H30(12..15), H23(12..15), H29
      Havertown(22, 22):
      - p4_param_order: { Onamia: 24, Brule: 24 }
      - default_action: { allowed: true }
      - handle: 0x20000146
      - next_table: 0
      - { Brule.16-23: $adf_b0(0..7), Onamia.16-23: $adf_b1(0..7), Brule.0-15: $adf_h1(0..15), Onamia.0-15: $adf_h2(0..15) }
      - set Millston.Calabash.Adona.0-7, HillTop.Wisdom.Adona.0-7
      - set Millston.Calabash.Adona.8-23, HillTop.Wisdom.Adona.8-23
      - set Millston.Calabash.Connell.0-7, HillTop.Wisdom.Connell.0-7
      - set Millston.Calabash.Connell.8-23, HillTop.Wisdom.Connell.8-23
      - set Millston.Calabash.Goldsboro.0-15, Onamia.0-15
      - set Millston.Calabash.Goldsboro.16-23, Onamia.16-23
      - set Millston.Calabash.Fabens.0-15, Brule.0-15
      - set Millston.Calabash.Fabens.16-23, Brule.16-23
      - set Millston.Calabash.McCaulley, 2048
      - add Millston.GlenAvon.Exton, Millston.GlenAvon.Exton, 255
      - set HillTop.Plains.Roachdale, 0
      - set HillTop.Plains.Miller, 0
      Napanoch(24, 24):
      - p4_param_order: { Onamia: 24, Brule: 24 }
      - default_action: { allowed: true }
      - handle: 0x20000147
      - next_table: 0
      - { Brule.16-23: $adf_b0(0..7), Onamia.16-23: $adf_b1(0..7), Brule.0-15: $adf_h1(0..15), Onamia.0-15: $adf_h2(0..15) }
      - set Millston.Calabash.Adona.0-7, HillTop.Wisdom.Adona.0-7
      - set Millston.Calabash.Adona.8-23, HillTop.Wisdom.Adona.8-23
      - set Millston.Calabash.Connell.0-7, HillTop.Wisdom.Connell.0-7
      - set Millston.Calabash.Connell.8-23, HillTop.Wisdom.Connell.8-23
      - set Millston.Calabash.Goldsboro.0-15, Onamia.0-15
      - set Millston.Calabash.Goldsboro.16-23, Onamia.16-23
      - set Millston.Calabash.Fabens.0-15, Brule.0-15
      - set Millston.Calabash.Fabens.16-23, Brule.16-23
      - set Millston.Calabash.McCaulley, 34525
      - add Millston.Maumee.Bushland, Millston.Maumee.Bushland, 255
      - set HillTop.Plains.Roachdale, 0
      - set HillTop.Plains.Miller, 0
      NoAction(-1, 26):
      - default_only_action: { allowed: true }
      - handle: 0x20000148
      - next_table: 0
      - {  }
      - set HillTop.Plains.Roachdale, 0
      - set HillTop.Plains.Miller, 0
    default_only_action: NoAction
  action _Waseca$action_data:
    p4: { name: Waseca$action }
    row: 10
    column: 3
    vpns: [ 0 ]
    home_row:
    - 10
    format Durant: { $adf_b0: 0..7, $adf_b1: 8..15, $adf_h1: 16..31, $adf_h2: 32..47 }
    format Kingsdale: { $adf_b0: 0..7, $adf_b1: 8..15, $adf_h1: 16..31, $adf_h2: 32..47 }
    format Ardenvoir: { $adf_b0: 0..7, $adf_b1: 8..15, $adf_h1: 16..31, $adf_h2: 32..47 }
    format Havertown: { $adf_b0: 0..7, $adf_b1: 8..15, $adf_h1: 16..31, $adf_h2: 32..47 }
    format Napanoch: { $adf_b0: 0..7, $adf_b1: 8..15, $adf_h1: 16..31, $adf_h2: 32..47 }
    action_bus: { 0 : $adf_b0, 1 : $adf_b1, 74..75 : $adf_h1, 76..77 : $adf_h2 }
  exact_match _Haugen 10:
    p4: { name: Haugen, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Dolores: { type: exact, size: 2, full_size: 2, key_name: "Wisdom.Dolores" }
      eg_intr_md.egress_port: { type: exact, size: 7, full_size: 9, key_name: "Sonoma.egress_port" }
    row: 2
    bus: 1
    column: 11
    stash: 
      row: [ 2 ]
      col: [ 11 ]
      unit: [ 0 ]
    ways:
      - [4, 0, 0x0, [2, 11]]
    input_xbar:
      exact group 3: { 0: HillTop.Wisdom.Dolores, 16: eg_intr_md.egress_port(0..6) }
      hash 6:
        0..1: HillTop.Wisdom.Dolores
        2..8: eg_intr_md.egress_port(0..6)
      hash group 4:
        table: [6]
        seed: 0x0
    format: { action(0): 0..0, version(0): 112..115 }
    gateway:
      name: cond-46
      input_xbar:
        exact group 4: { 1: HillTop.Wisdom.Westhoff, 4: HillTop.Wisdom.Piqua, 33: HillTop.Wisdom.Onycha }
      row: 4
      bus: 1
      unit: 0
      match: { 20: HillTop.Wisdom.Piqua, 1: HillTop.Wisdom.Onycha, 9: HillTop.Wisdom.Westhoff }
      0b***0********000*****000: run_table
      miss:  _Papeton
      condition: 
        expression: "(HillTop.Wisdom.Piqua == 0 && HillTop.Wisdom.Onycha == 0 && HillTop.Wisdom.Westhoff == 0)"
        true:  _Haugen
        false:  _Papeton
    hit: [  _Papeton ]
    miss:  _Papeton
    instruction: _Haugen(action, $DEFAULT)
    actions:
      Pearcy(1, 3):
      - default_action: { allowed: true }
      - handle: 0x20000139
      - next_table: 0
      - set eg_intr_md_for_dprsr.drop_ctl, 7
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x2000013a
      - next_table: 0
    default_only_action: NoAction
  ternary_match _Papeton 11:
    p4: { name: Papeton, size: 14, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Westhoff: { type: ternary, size: 3, full_size: 3, key_name: "Wisdom.Westhoff" }
      HillTop.Wisdom.Onycha: { type: ternary, size: 3, full_size: 3, key_name: "Wisdom.Onycha" }
      HillTop.Wisdom.Piqua: { type: ternary, size: 1, full_size: 1, key_name: "Wisdom.Piqua" }
      Millston.GlenAvon.$valid: { type: ternary, size: 1, full_size: 1, key_name: "GlenAvon" }
      Millston.Maumee.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Maumee" }
      Millston.Ramos.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Ramos" }
      Millston.Provencal.$valid: { type: ternary, size: 1, full_size: 1, key_name: "Provencal" }
    row: 9
    bus: 1
    column: 1
    input_xbar:
      ternary group 8: { 3: Millston.GlenAvon.$valid, 4: Millston.Ramos.$valid, 9: Millston.Maumee.$valid, 17: Millston.Provencal.$valid, 33: HillTop.Wisdom.Westhoff, 36: HillTop.Wisdom.Piqua }
      byte group 5: { 1: HillTop.Wisdom.Onycha }
    match:
    - { group: 8, byte_group: 5, byte_config: 0, dirtcam: 0x515 }
    gateway:
      name: cond-47
      input_xbar:
        exact group 5: { 0: Millston.Belgrade.$valid, 8: HillTop.Wisdom.Stratford }
      row: 7
      bus: 1
      unit: 0
      match: { 0: Millston.Belgrade.$valid, 8: HillTop.Wisdom.Stratford }
      0b*******0*******1: run_table
      miss:  _Astatula
      condition: 
        expression: "(Millston.Belgrade.$valid == 1 == 1 && HillTop.Wisdom.Stratford == 0)"
        true:  _Papeton
        false:  _Astatula
    hit: [  _Cropper ]
    miss:  _Cropper
    indirect: _Papeton$tind
  ternary_indirect _Papeton$tind:
    row: 5
    bus: 0
    column: 2
    input_xbar:
      ternary group 8: { 3: Millston.GlenAvon.$valid, 4: Millston.Ramos.$valid, 9: Millston.Maumee.$valid, 17: Millston.Provencal.$valid, 33: HillTop.Wisdom.Westhoff, 36: HillTop.Wisdom.Piqua }
      byte group 5: { 1: HillTop.Wisdom.Onycha }
    format: { action: 0..2 }
    instruction: _Papeton$tind(action, $DEFAULT)
    actions:
      Ravenwood(1, 5):
      - default_action: { allowed: true }
      - handle: 0x20000151
      - next_table: 0
      - set Millston.GlenAvon.PineCity, HillTop.Edwards.PineCity
      - set HillTop.Edwards.SomesBar, 0
      Poneto(2, 7):
      - default_action: { allowed: true }
      - handle: 0x20000152
      - next_table: 0
      - set Millston.Maumee.PineCity, HillTop.Edwards.PineCity
      - set HillTop.Edwards.SomesBar, 0
      Lurton(3, 9):
      - default_action: { allowed: true }
      - handle: 0x20000153
      - next_table: 0
      - set Millston.Ramos.PineCity, HillTop.Edwards.PineCity
      - set HillTop.Edwards.SomesBar, 0
      Quijotoa(4, 11):
      - default_action: { allowed: true }
      - handle: 0x20000154
      - next_table: 0
      - set Millston.Provencal.PineCity, HillTop.Edwards.PineCity
      - set HillTop.Edwards.SomesBar, 0
      Frontenac(5, 13):
      - default_action: { allowed: true }
      - handle: 0x20000155
      - next_table: 0
      - set Millston.GlenAvon.PineCity, HillTop.Edwards.Renick
      - set HillTop.Edwards.SomesBar, 0
      Gilman(6, 15):
      - default_action: { allowed: true }
      - handle: 0x20000156
      - next_table: 0
      - set Millston.GlenAvon.PineCity, HillTop.Edwards.Renick
      - set Millston.Ramos.PineCity, HillTop.Edwards.PineCity
      - set HillTop.Edwards.SomesBar, 0
      Kalaloch(7, 17):
      - default_action: { allowed: true }
      - handle: 0x20000157
      - next_table: 0
      - set Millston.GlenAvon.PineCity, HillTop.Edwards.Renick
      - set Millston.Provencal.PineCity, HillTop.Edwards.PineCity
      - set HillTop.Edwards.SomesBar, 0
      NoAction(-1, 19):
      - default_only_action: { allowed: true }
      - handle: 0x20000158
      - next_table: 0
      - set HillTop.Edwards.SomesBar, 0
    default_only_action: NoAction
stage 6 egress:
  ternary_match _Cropper 6:
    p4: { name: Cropper, size: 128, action_profile: Tulsa, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.McCaskill.Grassflat: { type: exact, size: 7, full_size: 10, key_name: "McCaskill.Grassflat" }
    row: 7
    bus: 1
    column: 1
    input_xbar:
      ternary group 0: { 32: HillTop.McCaskill.Grassflat(0..6) }
    match:
    - { group: 0, byte_config: 3, dirtcam: 0x100 }
    hit: [  _Ranier ]
    miss:  _Ranier
    indirect: _Cropper$tind
  selection _Cropper$selector.Tulsa_sel:
    p4: { name: Tulsa_sel, size: 4 }
    row: 3
    column: [ 1, 2 ]
    maprams: [ 1, 2 ]
    input_xbar:
      exact group 5: { 0: HillTop.Lewiston.Staunton }
      hash 10:
        0..50: slice(stripe(crc_rev(0x18005, 0x0, 0x0, 16, { 0: HillTop.Lewiston.Staunton })), 0..50)
      hash group 5:
        table: [10]
        seed: 0x0
    mode: resilient 0
    non_linear: true
    pool_sizes: [120]
  action _Cropper$action_data.Tulsa:
    p4: { name: Tulsa, size: 1024 }
    row: 0
    column: 4
    vpns: [ 0 ]
    home_row:
    - 0
    format Centre: { $adf_h0: 0..15 }
    action_bus: { 52..53 : $adf_h0 }
  stateful _Cropper$salu.Tulsa_sel$salu:
    p4: { name: Tulsa_sel$salu, size: 122880, hidden: true }
    selection_table: _Cropper$selector.Tulsa_sel
    row: 3
    column: [ 1, 2 ]
    maprams: [ 1, 2 ]
    format: { lo: 1 }
    actions:
      set_bit_at_alu$0:
      - set_bit_at
      clr_bit_at_alu$0:
      - clr_bit_at
      set_bit_alu$0:
      - set_bit
      clr_bit_alu$0:
      - clr_bit
  ternary_indirect _Cropper$tind:
    row: 0
    bus: 0
    column: 2
    input_xbar:
      ternary group 0: { 32: HillTop.McCaskill.Grassflat(0..6) }
    format: { meter_addr: 0..9, meter_pfe: 10..10, action_addr: 11..21 }
    selector: _Cropper$selector.Tulsa_sel(meter_addr, meter_pfe, $DEFAULT)
    selector_length: _Cropper$selector.Tulsa_sel($DEFAULT, $DEFAULT)
    action: _Cropper$action_data.Tulsa(action_addr, $DEFAULT)
    instruction: _Cropper$tind($DEFAULT, $DEFAULT)
    actions:
      Centre(0, 1):
      - p4_param_order: { Hector: 10 }
      - default_action: { allowed: true }
      - handle: 0x2000014f
      - next_table: 0
      - { Hector: $adf_h0(0..9) }
      - or H19, Hector, H19
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x20000150
      - next_table: 0
      - {  }
    default_only_action: NoAction
  hash_action _Ranier 7:
    p4: { name: Ranier, size: 1, disable_atomic_modify : true }
    row: 1
    bus: 1
    hash_dist:
      3: { hash: 6, mask: 0x7ffff, shift: 0, expand: 0 }
    input_xbar:
      exact group 5: { 64: eg_intr_md.egress_port, 80: HillTop.Wisdom.Bowden }
      hash 11:
        0..11: stripe(HillTop.Wisdom.Bowden)
        12..15: stripe(eg_intr_md.egress_port(0..3))
        32..34: stripe(eg_intr_md.egress_port(4..6))
      hash group 6:
        table: [11]
        seed: 0x0
    gateway:
      name: cond-50
      input_xbar:
        exact group 6: { 1: HillTop.Wisdom.Onycha, 13: HillTop.Wisdom.Weatherby }
      row: 0
      bus: 0
      unit: 0
      payload: 0x300001
      format: { action: 0..0, meter_addr: 1..19, meter_pfe: 20..20, meter_type: 21..23 }
      match: { 1: HillTop.Wisdom.Onycha, 13: HillTop.Wisdom.Weatherby }
      0o****2: run_table
      0b**1************: run_table
      miss:  _Osakis
      condition: 
        expression: "(HillTop.Wisdom.Onycha != 2 && HillTop.Wisdom.Weatherby == 0)"
        true:  _Osakis
        false:  _Charters
    next:  _Charters
    action_bus: { 56..57 : _Ranier$salu..Nordland(0..15) }
    stateful: _Ranier$salu..Nordland(hash_dist 3, $DEFAULT, $DEFAULT)
    instruction: _Ranier(action, $DEFAULT)
    actions:
      Alnwick(1, 2):
      - default_action: { allowed: true }
      - handle: 0x2000014e
      - next_table: 0
      - set HillTop.Stennett.Blairsden, _Ranier$salu..Nordland
      - _Ranier$salu..Nordland(_Upalco, $hash_dist)
    default_action: Alnwick
  stateful _Ranier$salu..Nordland:
    p4: { name: Nordland, size: 294912 }
    row: 7
    column: [ 2, 3, 4, 5 ]
    maprams: [ 2, 3, 4, 5 ]
    format: { lo: 1 }
    actions:
      _Upalco:
      - read_bit
      - output alu_lo
      set_bit_alu$0:
      - set_bit
      clr_bit_alu$0:
      - clr_bit
  hash_action _Osakis 8:
    p4: { name: Osakis, size: 1, disable_atomic_modify : true }
    row: 0
    bus: 0
    hash_dist:
      4: { hash: 6, mask: 0x7ffff, shift: 0, expand: 7 }
    input_xbar:
      exact group 5: { 64: eg_intr_md.egress_port, 80: HillTop.Wisdom.Bowden }
      hash 11:
        16..27: stripe(HillTop.Wisdom.Bowden)
        28..31: stripe(eg_intr_md.egress_port(0..3))
        39..41: stripe(eg_intr_md.egress_port(4..6))
      hash group 6:
        table: [11]
        seed: 0x0
    gateway:
      name: _Osakis-gateway
      row: 2
      bus: 0
      unit: 1
      0x0:  _Charters
      miss:  _Charters
      condition: 
        expression: "true(always hit)"
        true:  _Charters
        false:  _Charters
    next: []
    action_bus: { 2 : _Osakis$salu..Ontonagon(0..7) }
    stateful: _Osakis$salu..Ontonagon(hash_dist 4, $DEFAULT, $DEFAULT)
    instruction: _Osakis($DEFAULT, $DEFAULT)
    actions:
      Olivet(0, 3):
      - default_action: { allowed: true }
      - handle: 0x2000014d
      - next_table: 0
      - set HillTop.Stennett.Standish, _Osakis$salu..Ontonagon
      - _Osakis$salu..Ontonagon(_Ickesburg, $hash_dist)
    default_action: Olivet
  stateful _Osakis$salu..Ontonagon:
    p4: { name: Ontonagon, size: 294912 }
    row: 11
    column: [ 2, 3, 4, 5 ]
    maprams: [ 2, 3, 4, 5 ]
    format: { lo: 1 }
    actions:
      _Ickesburg:
      - read_bitc
      - output alu_lo
      set_bit_alu$0:
      - set_bit
      clr_bit_alu$0:
      - clr_bit
  ternary_match _Charters 9:
    p4: { name: Charters, size: 2048, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.McGonigle.Buncombe: { type: ternary, size: 8, full_size: 8, key_name: "McGonigle.Buncombe" }
      Millston.GlenAvon.Kaluaaha: { type: ternary, size: 32, full_size: 32, key_name: "GlenAvon.Kaluaaha" }
      Millston.GlenAvon.Calcasieu: { type: ternary, size: 32, full_size: 32, key_name: "GlenAvon.Calcasieu" }
      Millston.GlenAvon.Ocoee: { type: ternary, size: 8, full_size: 8, key_name: "GlenAvon.Ocoee" }
      Millston.Grays.Chevak: { type: ternary, size: 16, full_size: 16, key_name: "Grays.Chevak" }
      Millston.Grays.Mendocino: { type: ternary, size: 16, full_size: 16, key_name: "Grays.Mendocino" }
      Millston.Osyka.Noyes: { type: ternary, size: 8, full_size: 8, key_name: "Osyka.Noyes" }
      HillTop.Bessie.Peebles: { type: ternary, size: 1, full_size: 1, key_name: "Bessie.Peebles" }
    row: [ 6, 7, 8, 11, 10, 9, 0, 1, 2, 5, 4, 3 ]
    bus: [ 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1 ]
    column:
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    input_xbar:
      ternary group 7: { 0: Millston.GlenAvon.Kaluaaha(24..31), 8: Millston.GlenAvon.Calcasieu(0..7), 16: Millston.GlenAvon.Kaluaaha(8..23), 32: Millston.GlenAvon.Calcasieu(24..31) }
      ternary group 8: { 5: HillTop.Bessie.Peebles, 8: Millston.GlenAvon.Calcasieu(8..23), 24: Millston.Grays.Mendocino(8..15), 32: Millston.Grays.Mendocino(0..7) }
      ternary group 9: { 0: Millston.Grays.Chevak, 16: HillTop.McGonigle.Buncombe, 24: Millston.GlenAvon.Ocoee, 32: Millston.Osyka.Noyes }
      byte group 1: { 0: Millston.GlenAvon.Kaluaaha(0..7) }
    match:
    - { group: 7, byte_group: 1, byte_config: 0, dirtcam: 0x555 }
    - { group: 8, byte_group: 1, byte_config: 1, dirtcam: 0x555 }
    - { group: 9, byte_config: 3, dirtcam: 0x155 }
    gateway:
      name: cond-49
      input_xbar:
        exact group 7: { 3: Millston.GlenAvon.$valid }
      row: 3
      bus: 1
      unit: 0
      match: { 3: Millston.GlenAvon.$valid }
      0b****1: run_table
      miss:  _Keltys$st0
      condition: 
        expression: "(Millston.GlenAvon.$valid == 1)"
        true:  _Charters
        false:  _Keltys$st0
    hit: [  _Keltys$st0 ]
    miss:  _Keltys$st0
    indirect: _Charters$tind
  counter _Charters$stats..Keller:
    p4: { name: Keller }
    row: 9
    column: [ 2, 3 ]
    maprams: [ 2, 3 ]
    count: packets
    format: {packets(0): 64..127, packets(1): 0..63}
  ternary_indirect _Charters$tind:
    row: 2
    bus: 0
    column: 5
    input_xbar:
      ternary group 7: { 0: Millston.GlenAvon.Kaluaaha(24..31), 8: Millston.GlenAvon.Calcasieu(0..7), 16: Millston.GlenAvon.Kaluaaha(8..23), 32: Millston.GlenAvon.Calcasieu(24..31) }
      ternary group 8: { 5: HillTop.Bessie.Peebles, 8: Millston.GlenAvon.Calcasieu(8..23), 24: Millston.Grays.Mendocino(8..15), 32: Millston.Grays.Mendocino(0..7) }
      ternary group 9: { 0: Millston.Grays.Chevak, 16: HillTop.McGonigle.Buncombe, 24: Millston.GlenAvon.Ocoee, 32: Millston.Osyka.Noyes }
      byte group 1: { 0: Millston.GlenAvon.Kaluaaha(0..7) }
    format: { action: 0..0 }
    stats: _Charters$stats..Keller($DIRECT, $DEFAULT)
    action: _Charters$action_data($DIRECT, $DEFAULT)
    instruction: _Charters$tind(action, $DEFAULT)
    actions:
      Elysburg(1, 4):
      - p4_param_order: { Cornell: 2 }
      - default_action: { allowed: true }
      - handle: 0x2000014b
      - next_table: 0
      - { Cornell: $adf_b0(0..1) }
      - set HillTop.Wisdom.DeGraff, Cornell
      - _Charters$stats..Keller($DIRECT)
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x2000014c
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action _Charters$action_data:
    p4: { name: Charters$action }
    row: 9
    column: 4
    vpns: [ 0 ]
    home_row:
    - 9
    format Elysburg: { $adf_b0: 0..7 }
    action_bus: { 4 : $adf_b0 }
stage 9 egress:
  ternary_match _Keltys$st0 9:
    p4: { name: Keltys, size: 1024 }
    p4_param_order: 
      HillTop.McGonigle.Buncombe: { type: ternary, size: 8, full_size: 8, key_name: "McGonigle.Buncombe" }
      Millston.Maumee.Kaluaaha: { type: ternary, size: 128, full_size: 128, key_name: "Maumee.Kaluaaha" }
      Millston.Maumee.Calcasieu: { type: ternary, size: 128, full_size: 128, key_name: "Maumee.Calcasieu" }
      Millston.Maumee.Dassel: { type: ternary, size: 8, full_size: 8, key_name: "Maumee.Dassel" }
      Millston.Grays.Chevak: { type: ternary, size: 16, full_size: 16, key_name: "Grays.Chevak" }
      Millston.Grays.Mendocino: { type: ternary, size: 16, full_size: 16, key_name: "Grays.Mendocino" }
      Millston.Osyka.Noyes: { type: ternary, size: 8, full_size: 8, key_name: "Osyka.Noyes" }
    row: [ 0, 1, 2, 3, 4, 5, 6, 7 ]
    bus: [ 0, 0, 0, 0, 0, 0, 0, 0 ]
    column:
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    input_xbar:
      ternary group 2: { 16: Millston.Osyka.Noyes }
      ternary group 4: { 0: Millston.Maumee.Kaluaaha.0-31(16..23), 8: Millston.Maumee.Kaluaaha.32-63(24..31), 16: Millston.Maumee.Kaluaaha.32-63(0..23) }
      ternary group 5: { 0: Millston.Maumee.Kaluaaha.64-95, 32: Millston.Maumee.Calcasieu.0-31(0..7) }
      ternary group 7: { 0: Millston.Maumee.Calcasieu.0-31(24..31), 8: Millston.Maumee.Calcasieu.32-63(0..7), 16: Millston.Maumee.Calcasieu.0-31(8..23), 32: Millston.Maumee.Calcasieu.32-63(24..31) }
      ternary group 8: { 0: Millston.Maumee.Kaluaaha.96-111, 16: Millston.Grays.Mendocino, 32: Millston.Grays.Chevak(0..7) }
      ternary group 9: { 0: Millston.Maumee.Calcasieu.32-63(16..23), 8: Millston.Maumee.Calcasieu.64-95(24..31), 16: Millston.Maumee.Calcasieu.64-95(0..7), 24: Millston.Maumee.Calcasieu.32-63(8..15), 32: Millston.Maumee.Calcasieu.64-95(16..23) }
      ternary group 10: { 0: Millston.Grays.Chevak(8..15), 8: Millston.Maumee.Kaluaaha.112-127, 24: HillTop.McGonigle.Buncombe, 32: Millston.Maumee.Dassel }
      ternary group 11: { 0: Millston.Maumee.Calcasieu.64-95(8..15), 8: Millston.Maumee.Calcasieu.96-127(16..31), 24: Millston.Maumee.Calcasieu.96-127(0..15) }
      byte group 1: { 0: Millston.Maumee.Kaluaaha.0-31(0..7) }
      byte group 2: { 0: Millston.Maumee.Kaluaaha.0-31(24..31) }
      byte group 4: { 0: Millston.Maumee.Kaluaaha.0-31(8..15) }
    match:
    - { group: 2, byte_group: 1, byte_config: 0, dirtcam: 0x410 }
    - { group: 4, byte_group: 1, byte_config: 1, dirtcam: 0x555 }
    - { group: 5, byte_group: 2, byte_config: 0, dirtcam: 0x555 }
    - { group: 7, byte_group: 2, byte_config: 1, dirtcam: 0x555 }
    - { group: 8, byte_group: 4, byte_config: 0, dirtcam: 0x555 }
    - { group: 9, byte_group: 4, byte_config: 1, dirtcam: 0x555 }
    - { group: 10, byte_config: 3, dirtcam: 0x155 }
    - { group: 11, dirtcam: 0x155 }
    gateway:
      name: cond-48
      input_xbar:
        exact group 3: { 105: Millston.Maumee.$valid }
      row: 2
      bus: 1
      unit: 0
      match: { 1: Millston.Maumee.$valid }
      0b******1: run_table
      miss:  _Newsoms
      condition: 
        expression: "(Millston.Maumee.$valid == 1)"
        true:  _Keltys$st0
        false:  _Newsoms
    hit: [  _Newsoms ]
    miss:  _Keltys$st1
    indirect: _Keltys$st0$tind
  counter _Keltys$st0$stats..Kinter:
    p4: { name: Kinter }
    row: 13
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    count: packets
    format: {packets(0): 64..127, packets(1): 0..63}
  ternary_indirect _Keltys$st0$tind:
    row: 0
    bus: 0
    column: 5
    input_xbar:
      ternary group 2: { 16: Millston.Osyka.Noyes }
      ternary group 4: { 0: Millston.Maumee.Kaluaaha.0-31(16..23), 8: Millston.Maumee.Kaluaaha.32-63(24..31), 16: Millston.Maumee.Kaluaaha.32-63(0..23) }
      ternary group 5: { 0: Millston.Maumee.Kaluaaha.64-95, 32: Millston.Maumee.Calcasieu.0-31(0..7) }
      ternary group 7: { 0: Millston.Maumee.Calcasieu.0-31(24..31), 8: Millston.Maumee.Calcasieu.32-63(0..7), 16: Millston.Maumee.Calcasieu.0-31(8..23), 32: Millston.Maumee.Calcasieu.32-63(24..31) }
      ternary group 8: { 0: Millston.Maumee.Kaluaaha.96-111, 16: Millston.Grays.Mendocino, 32: Millston.Grays.Chevak(0..7) }
      ternary group 9: { 0: Millston.Maumee.Calcasieu.32-63(16..23), 8: Millston.Maumee.Calcasieu.64-95(24..31), 16: Millston.Maumee.Calcasieu.64-95(0..7), 24: Millston.Maumee.Calcasieu.32-63(8..15), 32: Millston.Maumee.Calcasieu.64-95(16..23) }
      ternary group 10: { 0: Millston.Grays.Chevak(8..15), 8: Millston.Maumee.Kaluaaha.112-127, 24: HillTop.McGonigle.Buncombe, 32: Millston.Maumee.Dassel }
      ternary group 11: { 0: Millston.Maumee.Calcasieu.64-95(8..15), 8: Millston.Maumee.Calcasieu.96-127(16..31), 24: Millston.Maumee.Calcasieu.96-127(0..15) }
      byte group 1: { 0: Millston.Maumee.Kaluaaha.0-31(0..7) }
      byte group 2: { 0: Millston.Maumee.Kaluaaha.0-31(24..31) }
      byte group 4: { 0: Millston.Maumee.Kaluaaha.0-31(8..15) }
    format: { action: 0..0 }
    stats: _Keltys$st0$stats..Kinter($DIRECT, $DEFAULT)
    action: _Keltys$st0$action_data($DIRECT, $DEFAULT)
    instruction: _Keltys$st0$tind(action, $DEFAULT)
    actions:
      Elysburg(1, 1):
      - p4_param_order: { Cornell: 2 }
      - default_action: { allowed: true }
      - handle: 0x20000149
      - next_table: 0
      - { Cornell: $adf_b0(0..1) }
      - set HillTop.Wisdom.DeGraff, Cornell
      - _Keltys$st0$stats..Kinter($DIRECT)
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x2000014a
      - next_table: 0
      - {  }
    default_only_action: NoAction
  action _Keltys$st0$action_data:
    p4: { name: Keltys$action }
    row: 5
    column: 1
    vpns: [ 0 ]
    home_row:
    - 5
    format Elysburg: { $adf_b0: 0..7 }
    action_bus: { 2 : $adf_b0 }
stage 10 egress:
  ternary_match _Keltys$st1 0:
    p4: { name: Keltys, size: 1024 }
    p4_param_order: 
      HillTop.McGonigle.Buncombe: { type: ternary, size: 8, full_size: 8, key_name: "McGonigle.Buncombe" }
      Millston.Maumee.Kaluaaha: { type: ternary, size: 128, full_size: 128, key_name: "Maumee.Kaluaaha" }
      Millston.Maumee.Calcasieu: { type: ternary, size: 128, full_size: 128, key_name: "Maumee.Calcasieu" }
      Millston.Maumee.Dassel: { type: ternary, size: 8, full_size: 8, key_name: "Maumee.Dassel" }
      Millston.Grays.Chevak: { type: ternary, size: 16, full_size: 16, key_name: "Grays.Chevak" }
      Millston.Grays.Mendocino: { type: ternary, size: 16, full_size: 16, key_name: "Grays.Mendocino" }
      Millston.Osyka.Noyes: { type: ternary, size: 8, full_size: 8, key_name: "Osyka.Noyes" }
    row: [ 0, 1, 2, 3, 4, 5, 6, 7 ]
    bus: [ 0, 0, 0, 0, 0, 0, 0, 0 ]
    column:
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    - 0
    indirect_bus: 2
    input_xbar:
      ternary group 0: { 0: Millston.Maumee.Calcasieu.0-31, 32: Millston.Maumee.Calcasieu.32-63(0..7) }
      ternary group 1: { 0: Millston.Maumee.Kaluaaha.0-31(16..31), 16: Millston.Maumee.Kaluaaha.32-63(0..23) }
      ternary group 2: { 0: Millston.Maumee.Kaluaaha.32-63(24..31), 8: Millston.Maumee.Kaluaaha.64-95 }
      ternary group 3: { 0: Millston.Maumee.Calcasieu.32-63(8..31), 24: Millston.Maumee.Calcasieu.64-95(0..15) }
      ternary group 4: { 0: Millston.Maumee.Calcasieu.64-95(16..31), 16: Millston.Maumee.Calcasieu.96-127(0..23) }
      ternary group 5: { 0: Millston.Maumee.Kaluaaha.96-111, 16: Millston.Grays.Mendocino(0..7), 24: Millston.Maumee.Calcasieu.96-127(24..31), 32: Millston.Grays.Chevak(0..7) }
      ternary group 6: { 0: Millston.Grays.Mendocino(8..15), 8: Millston.Maumee.Kaluaaha.112-127(0..7), 16: Millston.Grays.Chevak(8..15), 24: HillTop.McGonigle.Buncombe, 32: Millston.Maumee.Kaluaaha.112-127(8..15) }
      ternary group 7: { 0: Millston.Maumee.Dassel, 8: Millston.Osyka.Noyes }
      byte group 0: { 0: Millston.Maumee.Kaluaaha.0-31(8..15) }
      byte group 1: { 0: Millston.Maumee.Kaluaaha.0-31(0..7) }
    match:
    - { group: 0, byte_group: 0, byte_config: 0, dirtcam: 0x555 }
    - { group: 1, byte_group: 0, byte_config: 1, dirtcam: 0x555 }
    - { group: 2, byte_group: 1, byte_config: 0, dirtcam: 0x555 }
    - { group: 3, byte_group: 1, byte_config: 1, dirtcam: 0x555 }
    - { group: 4, byte_config: 3, dirtcam: 0x155 }
    - { group: 5, dirtcam: 0x155 }
    - { group: 6, dirtcam: 0x155 }
    - { group: 7, dirtcam: 0x5 }
    hit: [  _Newsoms ]
    miss:  _Newsoms
    stats: _Keltys$st1$stats..Kinter($DIRECT, $DEFAULT)
    action: _Keltys$st1$action_data($DIRECT, $DEFAULT)
    instruction: _Keltys$st1($DEFAULT, $DEFAULT)
    actions:
      Elysburg(0, 1):
      - p4_param_order: { Cornell: 2 }
      - default_action: { allowed: true }
      - handle: 0x20000149
      - next_table: 0
      - { Cornell: $adf_b0(0..1) }
      - set HillTop.Wisdom.DeGraff, Cornell
      - _Keltys$st1$stats..Kinter($DIRECT)
      NoAction(-1, 0):
      - default_only_action: { allowed: true }
      - handle: 0x2000014a
      - next_table: 0
      - {  }
    default_only_action: NoAction
  counter _Keltys$st1$stats..Kinter:
    p4: { name: Kinter }
    row: 13
    column: [ 2, 3 ]
    maprams: [ 2, 3 ]
    count: packets
    format: {packets(0): 64..127, packets(1): 0..63}
  action _Keltys$st1$action_data:
    p4: { name: Keltys$action }
    row: 12
    column: 5
    vpns: [ 0 ]
    home_row:
    - 12
    format Elysburg: { $adf_b0: 0..7 }
    action_bus: { 0 : $adf_b0 }
stage 11 egress:
  ternary_match _Newsoms 9:
    p4: { name: Newsoms, size: 512, disable_atomic_modify : true }
    p4_param_order: 
      eg_intr_md.egress_port: { type: exact, size: 7, full_size: 9, key_name: "Sonoma.egress_port" }
      HillTop.Stennett.Blairsden: { type: ternary, size: 1, full_size: 1, key_name: "Stennett.Blairsden" }
      HillTop.Stennett.Standish: { type: ternary, size: 1, full_size: 1, key_name: "Stennett.Standish" }
      HillTop.Edwards.SomesBar: { type: ternary, size: 1, full_size: 1, key_name: "Edwards.SomesBar" }
      HillTop.Wisdom.DeGraff: { type: ternary, size: 2, full_size: 2, key_name: "Wisdom.DeGraff" }
    row: 2
    bus: 1
    column: 1
    input_xbar:
      ternary group 9: { 0: eg_intr_md.egress_port(0..6), 11: HillTop.Stennett.Blairsden, 20: HillTop.Stennett.Standish, 28: HillTop.Wisdom.DeGraff, 32: HillTop.Edwards.SomesBar }
    match:
    - { group: 9, dirtcam: 0x155 }
    hit: [  _Astatula,  _Hagewood_0 ]
    miss:  _Astatula
    indirect: _Newsoms$tind
  counter _Newsoms$stats.Corum:
    p4: { name: Corum }
    row: 5
    column: [ 0, 1 ]
    maprams: [ 0, 1 ]
    count: packets
    format: {packets(0): 64..127, packets(1): 0..63}
  ternary_indirect _Newsoms$tind:
    row: 0
    bus: 0
    column: 2
    input_xbar:
      ternary group 9: { 0: eg_intr_md.egress_port(0..6), 11: HillTop.Stennett.Blairsden, 20: HillTop.Stennett.Standish, 28: HillTop.Wisdom.DeGraff, 32: HillTop.Edwards.SomesBar }
    format: { action: 0..0 }
    stats: _Newsoms$stats.Corum($DIRECT, $DEFAULT)
    instruction: _Newsoms$tind(action, $DEFAULT)
    actions:
      Nicollet(0, 1):
      - default_action: { allowed: true }
      - handle: 0x20000159
      - next_table: 0
      - set eg_intr_md_for_dprsr.drop_ctl, 7
      - _Newsoms$stats.Corum($DIRECT)
      Fosston(1, 0):
      - default_action: { allowed: true }
      - handle: 0x2000015a
      - next_table: 1
      - _Newsoms$stats.Corum($DIRECT)
    default_action: Fosston
  ternary_match _Hagewood_0 10:
    p4: { name: Hagewood, size: 1, disable_atomic_modify : true }
    gateway:
      name: cond-51
      input_xbar:
        exact group 1: { 40: HillTop.McCaskill.Grassflat(8..9), 48: HillTop.McCaskill.Grassflat(0..7), 58: HillTop.McCaskill.Tilton }
      row: 6
      bus: 0
      unit: 0
      match: { 0: HillTop.McCaskill.Grassflat(0..7), 8: HillTop.McCaskill.Grassflat(8..9), 18: HillTop.McCaskill.Tilton }
      0b**************0000000000:  _Astatula
      0b****00******************: run_table
      miss:  _Astatula
      condition: 
        expression: "(HillTop.McCaskill.Grassflat != 0 && HillTop.McCaskill.Tilton == 0)"
        true:  _Hagewood_0
        false:  _Astatula
    hit: [  _Astatula ]
    miss:  _Astatula
    indirect: _Hagewood_0$tind
  ternary_indirect _Hagewood_0$tind:
    row: 0
    bus: 1
    format: { action: 0..0 }
    instruction: _Hagewood_0$tind(action, $DEFAULT)
    actions:
      Ozark(1, 2):
      - default_action: { allowed: true }
      - handle: 0x2000015b
      - next_table: 0
      - set eg_intr_md_for_dprsr.mirror_type, 2
      - set HillTop.Plains.Miller, eg_intr_md.egress_port
    default_action: Ozark
  exact_match _Astatula 11:
    p4: { name: Astatula, size: 128, disable_atomic_modify : true }
    p4_param_order: 
      HillTop.Wisdom.Bowden: { type: exact, size: 12, full_size: 12, key_name: "Wisdom.Bowden" }
      eg_intr_md.egress_port: { type: exact, size: 7, full_size: 9, key_name: "Sonoma.egress_port" }
      HillTop.Wisdom.Weatherby: { type: exact, size: 1, full_size: 1, key_name: "Wisdom.Weatherby" }
    row: 6
    bus: 0
    column: [ 2, 3 ]
    stash: 
      row: [ 6 ]
      col: [ 2 ]
      unit: [ 0 ]
    ways:
      - [1, 2, 0x0, [6, 2]]
      - [1, 3, 0x0, [6, 3]]
    input_xbar:
      exact group 1: { 64: eg_intr_md.egress_port(0..6), 72: HillTop.Wisdom.Bowden(8..11), 80: HillTop.Wisdom.Bowden(0..7), 93: HillTop.Wisdom.Weatherby }
      hash 3:
        20..24: random(eg_intr_md.egress_port(5..6), HillTop.Wisdom.Bowden(0..7)) ^ eg_intr_md.egress_port(0..4)
        25..28: random(eg_intr_md.egress_port(5..6), HillTop.Wisdom.Bowden(0..7)) ^ HillTop.Wisdom.Bowden(8..11)
        29: random(eg_intr_md.egress_port(5..6), HillTop.Wisdom.Bowden(0..7)) ^ HillTop.Wisdom.Weatherby
        31..35: random(eg_intr_md.egress_port(5..6), HillTop.Wisdom.Bowden(0..7)) ^ eg_intr_md.egress_port(0..4)
        36..39: random(eg_intr_md.egress_port(5..6), HillTop.Wisdom.Bowden(0..7)) ^ HillTop.Wisdom.Bowden(8..11)
        30: random(eg_intr_md.egress_port(5..6), HillTop.Wisdom.Bowden(0..7)) ^ HillTop.Wisdom.Weatherby
      hash group 1:
        table: [3]
        seed: 0xc2ae600000
    format: { action(0): 0..1, version(0): 112..115, match(0): [45..46, 32..39 ] }
    match: [ eg_intr_md.egress_port(5..6), HillTop.Wisdom.Bowden(0..7) ]
    gateway:
      name: cond-52
      input_xbar:
        exact group 2: { 1: HillTop.Wisdom.Westhoff, 8: HillTop.Wisdom.Stratford, 33: HillTop.Wisdom.Onycha }
      row: 0
      bus: 1
      unit: 1
      match: { 16: HillTop.Wisdom.Stratford, 1: HillTop.Wisdom.Onycha, 9: HillTop.Wisdom.Westhoff }
      0b*******1***************:  END
      0b********************010:  END
      0b************011********:  END
      miss: run_table
      condition: 
        expression: "(HillTop.Wisdom.Stratford == 0 && HillTop.Wisdom.Onycha != 2 && HillTop.Wisdom.Westhoff != 3)"
        true:  _Astatula
        false:  END
    hit: [  END ]
    miss:  END
    instruction: _Astatula(action, $DEFAULT)
    actions:
      Berlin(1, 0):
      - default_action: { allowed: true }
      - handle: 0x2000015c
      - next_table: 0
      Ardsley(2, 3):
      - default_action: { allowed: true }
      - handle: 0x2000015d
      - next_table: 0
      - set Millston.Wondervu$0.$valid, 1
      - set Millston.Wondervu$0.McCaulley, Millston.Calabash.McCaulley
      - set Millston.Calabash.McCaulley, 33024
      - deposit-field H22(12..15), H20(4..7), H23
    default_action: Ardsley

flexible_headers: [

  { name: "Millston.Belgrade",
    fields: [

      { name: "Roachdale", slice: { start_bit: 0, bit_width: 8 } },
      { name: "Rugby", slice: { start_bit: 0, bit_width: 3 } },
      { name: "Davie", slice: { start_bit: 0, bit_width: 1 } },
      { name: "Cacao", slice: { start_bit: 0, bit_width: 4 } },
      { name: "Mankato", slice: { start_bit: 0, bit_width: 8 } },
      { name: "Virgil", slice: { start_bit: 0, bit_width: 24 } },
      { name: "Florin", slice: { start_bit: 0, bit_width: 24 } },
      { name: "Ronan", slice: { start_bit: 0, bit_width: 32 } },
      { name: "Corinth", slice: { start_bit: 0, bit_width: 16 } },
      { name: "__pad_0", slice: { start_bit: 0, bit_width: 4 } },
      { name: "Union", slice: { start_bit: 0, bit_width: 3 } },
      { name: "Rockport", slice: { start_bit: 0, bit_width: 1 } },
      { name: "__pad_1", slice: { start_bit: 0, bit_width: 25 } },
      { name: "Sudbury", slice: { start_bit: 0, bit_width: 6 } },
      { name: "Waipahu", slice: { start_bit: 0, bit_width: 1 } },
      { name: "Willard", slice: { start_bit: 0, bit_width: 3 } },
      { name: "Anacortes", slice: { start_bit: 0, bit_width: 1 } },
      { name: "Allgood", slice: { start_bit: 0, bit_width: 3 } },
      { name: "Shabbona", slice: { start_bit: 0, bit_width: 1 } },
      { name: "__pad_2", slice: { start_bit: 0, bit_width: 7 } },
      { name: "Freeburg", slice: { start_bit: 0, bit_width: 1 } },
      { name: "__pad_3", slice: { start_bit: 0, bit_width: 6 } },
      { name: "Selawik", slice: { start_bit: 0, bit_width: 2 } },
      { name: "__pad_4", slice: { start_bit: 0, bit_width: 10 } },
      { name: "Matheson", slice: { start_bit: 0, bit_width: 6 } },
      { name: "__pad_5", slice: { start_bit: 0, bit_width: 7 } },
      { name: "Chaska", slice: { start_bit: 0, bit_width: 9 } },
      { name: "__pad_6", slice: { start_bit: 0, bit_width: 4 } },
      { name: "Requa", slice: { start_bit: 0, bit_width: 12 } },
      { name: "__pad_7", slice: { start_bit: 0, bit_width: 4 } },
      { name: "Bayshore", slice: { start_bit: 0, bit_width: 12 } },
      { name: "__pad_8", slice: { start_bit: 0, bit_width: 4 } },
      { name: "Florien", slice: { start_bit: 0, bit_width: 12 } }    ]
  },
  { name: "HillTop.Plains",
    fields: [

      { name: "Roachdale", slice: { start_bit: 0, bit_width: 8 } },
      { name: "__pad_0", slice: { start_bit: 0, bit_width: 7 } },
      { name: "Miller", slice: { start_bit: 0, bit_width: 9 } }    ]
  },
  { name: "Plains_0",
    fields: [

      { name: "Roachdale", slice: { start_bit: 0, bit_width: 8 } },
      { name: "__pad_0", slice: { start_bit: 0, bit_width: 7 } },
      { name: "Miller", slice: { start_bit: 0, bit_width: 9 } }    ]
  }]

primitives: "tcam_issue2.tofino/pipe//tcam_issue2.prim.json"
dynhash: "tcam_issue2.tofino/pipe//tcam_issue2.dynhash.json"
