version: 1.0.0
phv ingress:
  standard_metadata.egress_spec: H0(0..8)
  data.f1: W1
  data.f2: W0
  data.h1: TH0
  data.h2: TH1
  data.h3: TH2
  data.h4: TH3
  counter_metadata.counter_index: H1
  data.$valid: B11(7)
phv egress:
  standard_metadata.egress_port: H16(0..8)
parser ingress:
  start: $ingress_metadata_shim
  $ingress_metadata_shim:
    0x*:
      shift: 16
      next: start$
  start$:
    0x*:
      0..3: data.f1
      4..7: data.f2
      8..9: data.h1
      10..11: data.h2
      12..13: data.h3
      14..15: data.h4
      data.$valid: 1
      shift: 16
      next: end
deparser ingress:
  dictionary:
    data.f1: data.$valid
    data.f2: data.$valid
    data.h1: data.$valid
    data.h2: data.$valid
    data.h3: data.$valid
    data.h4: data.$valid
  egress_unicast_port: standard_metadata.egress_spec
parser egress:
  start: $egress_metadata_shim
  $egress_metadata_shim:
    0x*:
      0..1: H16
      shift: 2
      next: end
deparser egress:
  dictionary: {}
  egress_unicast_port: standard_metadata.egress_port
stage 0 ingress:
  exact_match index_setter 0:
    p4: { name: index_setter, size: 2048 }
    row: 7
    bus: 0
    column: [ 2, 3, 4, 5 ]
    ways:
    - [0, 0, 0x0, [7, 2]]
    - [0, 1, 0x0, [7, 3]]
    - [0, 2, 0x0, [7, 4]]
    - [0, 3, 0x0, [7, 5]]
    input_xbar:
      group 0: { 0: data.f1, 32: data.f2 }
      hash 0:
        0..9: random(data.f1(10..31), data.f2) ^ stripe(data.f1(0..9))
        10..19: random(data.f1(10..31), data.f2) ^ stripe(data.f1(0..9))
        20..29: random(data.f1(10..31), data.f2) ^ stripe(data.f1(0..9))
        30..39: random(data.f1(10..31), data.f2) ^ stripe(data.f1(0..9))
      hash group 0:
        table: [0]
    format: { action(0): 1, immediate(0): 32, version(0): 124..127, match(0): 34..87 }
    match: [ data.f1(10..31), data.f2 ]
    next: stats
    actions:
      set_index:
      - { index: immediate(0..15), port: immediate(16..31) }
      - set counter_metadata.counter_index, index
      - set standard_metadata.egress_spec, port
      NoAction_1:
      - 0
    default_action: NoAction_1
stage 1 ingress:
  hash_action stats 0:
    p4: { name: stats }
    hash_dist:
      0: {hash: 0, mask: 65535}
    row: 0
    bus: 0
    input_xbar:
      group 0: { 0: counter_metadata.counter_index }
      hash 0:
        0..15: counter_metadata.counter_index
      hash group 0:
        table: [0]
    gateway:
      row: 0
      #bus: 0
      0x0: END
      miss: END
    next: END
    stats:
    - stats$counter.count1(hash_dist 0)
    actions:
      count_entries:
      - 0
    default_action: count_entries
  counter stats$counter.count1:
    p4: { name: count1 }
    row: 13
    column: [ 0, 1, 2, 3 ]
    maprams: [ 0, 1, 2, 3 ]
    count: packets
    format: {packets(0): 106..126, packets(1): 85..105, packets(2): 64..84, packets(3): 42..62, packets(4): 21..41, packets(5): 0..20}
