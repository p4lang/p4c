#include <tofino/primitives.p4>
#include <tofino/constants.p4>
#include <tofino/intrinsic_metadata.p4>

header_type ethernet_t {
    fields {
        dstAddr : 48;
        srcAddr : 48;
        etherType : 16;
    }
}

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

parser start {
    return select(current(0,1)) {
        0 mask 0: abc;
        default: ingress;
    }
}

parser abc {
    extract(ethernet);
    return ingress;
}
header ethernet_t ethernet;

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

header_type metadata_h {
    fields {
        foo : 8;
    }
}
metadata metadata_h m;

field_list mirror_list {
    m.foo;
}

action ingr_action () {
    clone_i2e(5, mirror_list);
}
action ingr_action2 () {
    clone_i2e(6);
}

action egr_action () {
    clone_e2e(7, mirror_list);
}
action egr_action2 () {
    clone_e2e(8);
}


table ingr_null_table {
    reads {
        ig_intr_md_from_parser_aux.ingress_parser_err : exact;
    }
    actions {
        ingr_action;
        ingr_action2;
    }
}

table egr_null_table {
    reads {
        eg_intr_md_from_parser_aux.egress_parser_err : exact;
        ethernet.dstAddr : exact;
        m.foo : exact;
    }
    actions {
        egr_action;
        egr_action2;
    }
}


control ingress {
    apply(ingr_null_table);
}

control egress {
    apply(egr_null_table);
}
