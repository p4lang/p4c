# Copyright (C) 2024 Intel Corporation
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.  You may obtain a copy
# of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations under the License.
# 
# SPDX-License-Identifier: Apache-2.0

# -*- Python -*-

from p4c_src.driver import BackendDriver
import p4c_src.barefoot as bfn

Tofino2Variants = {
    'tofino2a0' : 4,
    'tofino2h' : 3,
    'tofino2m' : 2,
    'tofino2u' : 1,
    'tofino2'  : 1
}

class Tofino2Backend(bfn.BarefootBackend):
    def __init__(self, target, arch, argParser):
        bfn.BarefootBackend.__init__(self, target, arch, argParser)

        # command options
        self.config_preprocessor("__TARGET_TOFINO__=2")
        self.config_preprocessor("__TOFINO2_VARIANT__={}".format(Tofino2Variants[target]))
        self.config_compiler("__TARGET_TOFINO__=2")
        self.config_compiler("__TOFINO2_VARIANT__={}".format(Tofino2Variants[target]))
        # self.config_assembler(target)

for t in Tofino2Variants.keys():
    config.target.append(Tofino2Backend(t, 't2na', argParser))
    # CODE_SENSITIVE: Tofino2 v1model architecture -- still need to support for P4_14
    config.target.append(Tofino2Backend(t, 'v1model', argParser))

# psa_target: PSA implementation on Tofino2
psa_target = BackendDriver('tofino2', 'psa')
psa_target.add_command('none', \
	'/bin/echo "target ' + str(psa_target) + ' not yet implemented"')
psa_target.enable_commands(['none'])
config.target.append(psa_target)

# Used to select the default arch for p4-14 and p4-16
config.target.append(Tofino2Backend('tofino2', 'default', argParser))
